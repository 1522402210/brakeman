<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>Brakeman - Rails Security Scanner</title>
  <link href="http://brakemanscanner.org/atom.xml" rel="self"/>
  <link href="http://brakemanscanner.org/"/>
  <updated>2017-08-16T06:44:12-07:00</updated>
  <id>http://brakemanscanner.org/</id>
  <author>
    <name>Justin Collins</name>
    
  </author>

  
  <entry>
    <title>Brakeman 3.7.1/3.7.2 Released</title>
    <link href="http://brakemanscanner.org/blog/2017/08/15/brakeman-3-dot-7-1-released/"/>
    <updated>2017-08-15T23:38:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2017/08/15/brakeman-3-dot-7-1-released</id>
    <content type="html">&lt;p&gt;Just a little release. Next up: 4.0!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.7.1&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fix &lt;code&gt;--ensure-latest&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1079&quot;&gt;David Guyon&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;em&gt;Changes since 3.7.0:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Handle simple guard with &lt;code&gt;return&lt;/code&gt; at end of branch (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1073&quot;&gt;#1073&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add more collection methods for iteration detection&lt;/li&gt;
&lt;li&gt;Modularize &lt;code&gt;bin/brakeman&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Improve multi-value &lt;code&gt;Sexp&lt;/code&gt; error message&lt;/li&gt;
&lt;li&gt;Update &lt;code&gt;ruby2ruby&lt;/code&gt; and &lt;code&gt;ruby_parser&lt;/code&gt; dependencies&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Another Simple Guard&lt;/h3&gt;

&lt;p&gt;Brakeman will now handle when the branch in a simple guard condition ends in &lt;code&gt;return&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;unless [:valid, :value].include? params[:x]
  do_stuff
  more_stuff
  return
end

x.send(params[:x]) # Will no longer warn because `params[:x]` must be 'safe'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1077&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;More Collection Methods&lt;/h3&gt;

&lt;p&gt;Brakeman attempts to detect when a template is iterating over records from a database query.&lt;/p&gt;

&lt;p&gt;This release adds a few more methods that might return a collection of records.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1074&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Modularize Commandline&lt;/h3&gt;

&lt;p&gt;The logic in the &lt;code&gt;brakeman&lt;/code&gt; executable has now entirely been moved to &lt;a href=&quot;https://github.com/presidentbeef/brakeman/blob/49f675a88ba12ad4fa799770f5499c952650a56c/lib/brakeman/commandline.rb&quot;&gt;&lt;code&gt;Brakeman::Commandline&lt;/code&gt;&lt;/a&gt; for easier testing and custom behavior.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1076&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;9ad563247cc6a57b965e59e5bbbaefa202ce34ceb6d10e97ce500406d60cdb6e  brakeman-3.7.2.gem
5b753206f8e5937c33494edd323a9e6573e07958d9f8f5bb662b0f6085eafe19  brakeman-lib-3.7.2.gem
517a074cb92ece8a7e426ea221d63ddbcae6e3b851664083b7e73e6d7e0dd138  brakeman-min-3.7.2.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Brakeman 4.0 Plans&lt;/h3&gt;

&lt;p&gt;If all goes well, Brakeman 4.0 will be released on August 27th, which is also the 7th anniversary of Brakeman's first release. It will also be the 101st release of Brakeman!&lt;/p&gt;

&lt;p&gt;At least two major changes will be coming in Brakeman 4.0:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;plain&lt;/code&gt; report format will be the default instead of tables&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-z&lt;/code&gt; or &lt;code&gt;--exit-on-warn&lt;/code&gt; (sets exit code if any warnings are found) will be on by default&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;There will likely be other changes, but these two will be the most obvious.&lt;/p&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;

&lt;p&gt;If you find Brakeman valuable and want to support its development, check out &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.7.0 Released</title>
    <link href="http://brakemanscanner.org/blog/2017/06/29/brakeman-3-dot-7-0-released/"/>
    <updated>2017-06-29T18:00:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2017/06/29/brakeman-3-dot-7-0-released</id>
    <content type="html">&lt;p&gt;&lt;em&gt;Changes since 3.6.2&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Avoid interpolating hashes/arrays on failed access (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/921&quot;&gt;#921&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix false positive for &lt;code&gt;redirect_to&lt;/code&gt; in Rails 4 (&lt;a href=&quot;https://github.com/mario-areias&quot;&gt;Mário Areias&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Show progress indicator in interactive mode (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1012&quot;&gt;#1012&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Handle simple conditional guards that use &lt;code&gt;return&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1057&quot;&gt;#1057&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Improve support for &lt;code&gt;rails4&lt;/code&gt;/&lt;code&gt;rails5&lt;/code&gt; options in config file (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1059&quot;&gt;#1059&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Updated RubyParser to master&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Performance Improvement with Hash/Array Accesses&lt;/h3&gt;

&lt;p&gt;When Brakeman sees a hash or array access that it cannot resolve (i.e. can't find the value for the key), it will no longer copy the entire hash/array value to the call site.&lt;/p&gt;

&lt;p&gt;For some applications, this will significantly improve performance.&lt;/p&gt;

&lt;p&gt;This may cause some warning fingerprints to change.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1056&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Unsafe Hash in Redirects&lt;/h3&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/mario-areias&quot;&gt;Mário Areias&lt;/a&gt;, Brakeman correctly handles &lt;code&gt;to_unsafe_hash&lt;/code&gt; and &lt;code&gt;to_unsafe_h&lt;/code&gt; in &lt;code&gt;redirect_to&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1029&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Progress Indicator in Interactive Mode&lt;/h3&gt;

&lt;p&gt;When using &lt;code&gt;-I&lt;/code&gt; to manage false positives, Brakeman will now show how far you are through the warnings.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/75613/27519704-f7c60006-59ad-11e7-82e8-ce0e096ad678.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1064&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Simple Guards with Return&lt;/h3&gt;

&lt;p&gt;Brakeman can now recognize &lt;em&gt;simple&lt;/em&gt; guard conditions such as:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;return unless [:safe, :values].include? params[:x]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1062&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Rails Version Option in Brakeman Configuration&lt;/h3&gt;

&lt;p&gt;It is now possible to specify just &lt;code&gt;:rails4: true&lt;/code&gt; or &lt;code&gt;:rails5: true&lt;/code&gt; in a Brakeman configuration file.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1066&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Updated RubyParser&lt;/h3&gt;

&lt;p&gt;The main &lt;code&gt;brakeman&lt;/code&gt; gem bundles as-of-yet unreleased changes in RubyParser. This includes &quot;squiggly heredoc&quot; support (&lt;code&gt;&amp;lt;&amp;lt;~&lt;/code&gt;), improved line numbers, and a few other fixes.&lt;/p&gt;

&lt;h3&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;f46550d7c7827644a5663ccc10a6ca222e2534648f68630e3a777cb73df59824  brakeman-3.7.0.gem
0ea5359ae802284695500b92a03bf1d022574953a0da44607ff7f715f456c37e  brakeman-min-3.7.0.gem
f6f17e9f1f71a68b486d68f2b3413607fb47154a0fb6a6da23d9d7be87f37967  brakeman-lib-3.7.0.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;

&lt;p&gt;If you find Brakeman valuable and want to support its development, check out &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.6.2 Released</title>
    <link href="http://brakemanscanner.org/blog/2017/05/19/brakeman-3-dot-6-2-released/"/>
    <updated>2017-05-19T09:01:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2017/05/19/brakeman-3-dot-6-2-released</id>
    <content type="html">&lt;p&gt;&lt;em&gt;Changes since 3.6.1:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Remove &lt;code&gt;--rake&lt;/code&gt; option&lt;/li&gt;
&lt;li&gt;By default, do not honor additional check paths in config&lt;/li&gt;
&lt;li&gt;Properly handle template names without &lt;code&gt;.html&lt;/code&gt; or &lt;code&gt;.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Catch YAML parsing errors in session settings check (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1046&quot;&gt;#1046&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Better handling of &lt;code&gt;if&lt;/code&gt; expressions in HAML rendering (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1032&quot;&gt;#1032&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about SQLi with &lt;code&gt;to_s&lt;/code&gt; in &lt;code&gt;exists?&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1045&quot;&gt;#1045&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Handle safe call operator in checks (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1031&quot;&gt;#1031&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Handle empty &lt;code&gt;if&lt;/code&gt; expressions when finding return values&lt;/li&gt;
&lt;li&gt;Set template file names during rendering for better errors&lt;/li&gt;
&lt;li&gt;Limit Slim dependency to before 3.0.8&lt;/li&gt;
&lt;li&gt;Update RubyParser to 3.9.0&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Rake Option Removed&lt;/h3&gt;

&lt;p&gt;The Rake task generated by &lt;code&gt;--rake&lt;/code&gt; has caused quite a few problems. When Rake is run with a Rails application, it loads all of the app's dependencies, which may conflict with Brakeman's dependencies.&lt;/p&gt;

&lt;p&gt;It is recommended to either not use a Rake task to run Brakeman or just shell out to Brakeman instead of using it as a library.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1038&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Check Paths in Config Files&lt;/h3&gt;

&lt;p&gt;Brakeman allows loading custom checks with &lt;code&gt;--add-checks-path&lt;/code&gt;.
To avoid silently loading arbitary code, Brakeman will not support this option in configuration files unless explicitly enabled with &lt;code&gt;--allow-check-paths-in-config&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1052&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Templates without Format Extension&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&quot;http://brakemanscanner.org/blog/2017/01/31/brakeman-3-dot-5-0-released/&quot;&gt;3.5.0 release&lt;/a&gt; added support for templates with a bare extension (like &lt;code&gt;my_template.haml&lt;/code&gt;) but template names derived internally did not handle these bare extensions properly. When rendering templates, Brakeman was not able to match render names to the correct files.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1041&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;YAML Errors&lt;/h3&gt;

&lt;p&gt;When checking session settings, Brakeman parses &lt;code&gt;config/secrets.yml&lt;/code&gt;. Sometimes this file has unsafe values or interpolated code which causes the parsing to fail. Brakeman will now only output a notice about this failure instead of an error.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1047&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;If Expressions in HAML&lt;/h3&gt;

&lt;p&gt;Typically Brakeman assumes all &lt;code&gt;if&lt;/code&gt; branches in templates are taken and ignores the condition. This was not happening in all cases in rendered HAML templates.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1035/files&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;&lt;code&gt;to_s&lt;/code&gt; False Positive with &lt;code&gt;exists?&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about arguments calling &lt;code&gt;to_s&lt;/code&gt; in &lt;code&gt;exists?&lt;/code&gt;, since that is the recommended way to avoid SQL injection with that particular method.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1049&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Better Safe Call Handling&lt;/h3&gt;

&lt;p&gt;The safe call operation &lt;code&gt;&amp;amp;.&lt;/code&gt; will be handled better in all checks instead of being ignored.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1033&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Empty Ifs&lt;/h3&gt;

&lt;p&gt;This release fixes an issue when finding return values from methods ending in an empty &lt;code&gt;if&lt;/code&gt; expression.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1053&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;More Template Names&lt;/h3&gt;

&lt;p&gt;Template file names will now be set when passing code to template rendering libraries, in order to produce better error messages when something goes wrong.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1042&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Dependencies&lt;/h3&gt;

&lt;p&gt;RubyParser has been updated to &lt;code&gt;3.9.0&lt;/code&gt; which resolves some issues.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1048&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Slim is limited to &lt;code&gt;&amp;lt;3.0.8&lt;/code&gt; since the &lt;code&gt;3.0.8&lt;/code&gt; gem requires Ruby 2.0.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1050&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ba89440a5e94f463ad9b6f3602e83d16313857753a5cc9b754757bd3e58e2202  brakeman-3.6.2.gem
adae09f9aa3a4d311fe2de41fee5d9b821eff600c1c05e314b3b930adb85b4d7  brakeman-min-3.6.2.gem
d3da0a86dedcee84c35a14e00b7a9d22874aed89d7d031d1fe60b68ce4ae7c7a  brakeman-lib-3.6.2.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;

&lt;p&gt;If you find Brakeman valuable and want to support its development, check out &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.6.1 Released</title>
    <link href="http://brakemanscanner.org/blog/2017/03/24/brakeman-3-dot-6-1-released/"/>
    <updated>2017-03-24T13:15:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2017/03/24/brakeman-3-dot-6-1-released</id>
    <content type="html">&lt;p&gt;This is a small bug fix release to fix an issue when using &lt;code&gt;--compare&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.6.0&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;ul&gt;
&lt;li&gt;Fix error when using &lt;code&gt;--compare&lt;/code&gt; (&lt;a href=&quot;https://github.com/seangransee&quot;&gt;Sean Gransee&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Error With Compare&lt;/h3&gt;

&lt;p&gt;Although comparison scans using &lt;code&gt;--compare&lt;/code&gt; would complete successfully, an exception was being thrown afterwards.&lt;/p&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/anthlam&quot;&gt;Anthony Lamorte&lt;/a&gt; for reporting and &lt;a href=&quot;https://github.com/seangransee&quot;&gt;Sean Gransee&lt;/a&gt; for the fix!&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1024&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;3c10b2a9fd8b7b3baab956e6fcc2c7780768f1905433297e8dd940591f1bbb3b  brakeman-3.6.1.gem
98f6bd7531e0e3fbe273b9d185446bd28602176a392d5df8f9c52c36460afdaa  brakeman-lib-3.6.1.gem
44342c843867fce585f6fef09cd093a0544510adfeec15217efe44c6120e3192  brakeman-min-3.6.1.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;

&lt;p&gt;If you find Brakeman valuable and want to support its development, check out &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.6.0 Released</title>
    <link href="http://brakemanscanner.org/blog/2017/03/22/brakeman-3-dot-6-0-released/"/>
    <updated>2017-03-22T10:30:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2017/03/22/brakeman-3-dot-6-0-released</id>
    <content type="html">&lt;p&gt;&lt;em&gt;Changes since 3.5.0:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Branch inside of &lt;code&gt;case&lt;/code&gt; expressions (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/944&quot;&gt;#944&lt;/a&gt;, &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/972&quot;&gt;#972&lt;/a&gt;, &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1002&quot;&gt;#1002&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Check targetless SQL calls outside of known models&lt;/li&gt;
&lt;li&gt;Fix issue with nested interpolation inside SQL strings (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1008&quot;&gt;#1008&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;--exit-on-error&lt;/code&gt; (&lt;a href=&quot;https://github.com/grosser&quot;&gt;Michael Grosser&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Only report CVE-2015-3227 when exact version is known (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/993&quot;&gt;#933&lt;/a&gt;, &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/995&quot;&gt;#995&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Print command line option errors without modification (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1010&quot;&gt;#1010&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Ignore GraphQL tags inside ERB templates&lt;/li&gt;
&lt;li&gt;Avoid recursive &lt;code&gt;Concern&lt;/code&gt;s&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Case Expressions&lt;/h3&gt;

&lt;p&gt;At long last, Brakeman will now treat &lt;code&gt;case&lt;/code&gt; expressions similarly to &lt;code&gt;if&lt;/code&gt;s. This includes tracking variable assignments inside of &lt;code&gt;when&lt;/code&gt; clauses and better handling &lt;code&gt;case&lt;/code&gt; expressions as values.&lt;/p&gt;

&lt;p&gt;Note that at this time Brakeman does not handle nested &lt;code&gt;case&lt;/code&gt; expressions.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1018&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Targetless SQL Calls&lt;/h3&gt;

&lt;p&gt;Brakeman 3.5.0 broadened the check for SQL injection to calls that &lt;em&gt;may&lt;/em&gt; not be on models (because models are often defined outside the application). However, calls with no target were still checking to see if they were called inside of model classes. This led to missing some SQL injection vulnerabilities.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/994&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Nested SQL Interpolation&lt;/h3&gt;

&lt;p&gt;Some cases of nested string interpolation in SQL calls were generating false positives. This should be fixed now.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1009&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Exit on Errors&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/grosser&quot;&gt;Michael Grosser&lt;/a&gt; added the &lt;code&gt;--exit-on-error&lt;/code&gt; option to cause Brakeman to exit with a non-zero exit code if any errors are encountered. Normally Brakeman attempts to always generate a report regardless of any errors during the scan.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/991&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Spurious CVE Warning&lt;/h3&gt;

&lt;p&gt;Brakeman was reporting CVE-2015-3227 on any application using an unknown Rails version.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/996&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Option Errors&lt;/h3&gt;

&lt;p&gt;In an attempt to make command line option errors prettier, Brakeman was inadvertently messing up the error messages. It will no longer do so.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1011&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;GraphQL in ERB&lt;/h3&gt;

&lt;p&gt;Brakeman will now ignore &lt;code&gt;&amp;lt;%graphql&lt;/code&gt; tags in ERB templates.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/997&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Recursive Concerns&lt;/h3&gt;

&lt;p&gt;Concerns that &lt;code&gt;include&lt;/code&gt; themselves will no longer cause infinite loops.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1019&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;c9bcc82a14359fe5f010551b1256eb1cea6848115f3429c7db74a386d6b0cf8c  brakeman-3.6.0.gem
4793a407f79970a284474db3235d355f9927e987b71e33f1ce99fac3f3c249aa  brakeman-min-3.6.0.gem
5c0a7aab7fc14d069d9dc208b653e10f71c355cb959fd144d6e8f7430c88a8e7  brakeman-lib-3.6.0.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;

&lt;p&gt;If you find Brakeman valuable and want to support its development, check out &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.5.0 Released</title>
    <link href="http://brakemanscanner.org/blog/2017/01/31/brakeman-3-dot-5-0-released/"/>
    <updated>2017-01-31T23:30:00-08:00</updated>
    <id>http://brakemanscanner.org/blog/2017/01/31/brakeman-3-dot-5-0-released</id>
    <content type="html">&lt;p&gt;&lt;em&gt;Changes since 3.4.1&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Warn about SQL injection even if target is not known ActiveRecord model&lt;/li&gt;
&lt;li&gt;Avoid warning about models as SQL injection (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/655&quot;&gt;#655&lt;/a&gt;, &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/680&quot;&gt;#680&lt;/a&gt;, &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/833&quot;&gt;#833&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about SQLi in &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;first&lt;/code&gt;, or &lt;code&gt;last&lt;/code&gt; after Rails 4.0&lt;/li&gt;
&lt;li&gt;Treat templates without &lt;code&gt;.html&lt;/code&gt; as HTML anyway (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/790&quot;&gt;#790&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Report check name in JSON and plain reports (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/971&quot;&gt;#971&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;--ensure-latest&lt;/code&gt; option (&lt;a href=&quot;https://github.com/tamgrosser&quot;&gt;tamgrosser&lt;/a&gt; / &lt;a href=&quot;https://github.com/grosser&quot;&gt;Michael Grosser&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;--no-summary&lt;/code&gt; to hide summaries in HTML/text reports (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/963&quot;&gt;#963&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fail on invalid checks specified by &lt;code&gt;-x&lt;/code&gt; or &lt;code&gt;-t&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/970&quot;&gt;#970&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Handle &lt;code&gt;included&lt;/code&gt; block in concerns (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/958&quot;&gt;#958&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Updated RubyParser/Ruby2Ruby dependencies&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;SQL Injection Improvements&lt;/h3&gt;

&lt;p&gt;This release includes several changes to the SQL Injection check.&lt;/p&gt;

&lt;p&gt;First, Brakeman will no longer restrict SQL injection warnings to calls on known ActiveRecord models. While this may lead to a few false positives, there were too many reports of obvious SQL injection being missed. This reverses a decision made previously. Warnings that may involve non-models are given a lower confidence.&lt;/p&gt;

&lt;p&gt;Next, SQL that includes calls on model targets will no longer generate warnings. There were too many false positives and no known vulnerabilities flagged by this.&lt;/p&gt;

&lt;p&gt;Finally, Brakeman will no longer check calls to &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;first&lt;/code&gt;, and &lt;code&gt;last&lt;/code&gt; as they changed in Rails 4.1.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/985&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Extensionless Templates&lt;/h3&gt;

&lt;p&gt;Templates which do not specify any extension (e.g. just &lt;code&gt;.erb&lt;/code&gt; instead of &lt;code&gt;.html.erb&lt;/code&gt;) will still be treated as HTML instead of being ignored.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/980&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Check Name in Reports&lt;/h3&gt;

&lt;p&gt;The plain and JSON reports now include the name of the check that generated the warning.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/981&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Option to Enforce Latest Brakeman&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;--ensure-latest&lt;/code&gt; option has been added. If there is a newer version of Brakeman available, this option will cause Brakeman to exit with a non-zero exit code.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/974&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Option to Hide Summary&lt;/h3&gt;

&lt;p&gt;When using &lt;code&gt;--no-summary&lt;/code&gt; and either the plain or &quot;table&quot; output, Brakeman will only report warnings, no metadata. Probably most useful in combination with &lt;code&gt;--quiet&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/976&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Fail on Invalid Checks&lt;/h3&gt;

&lt;p&gt;When use &lt;code&gt;-t&lt;/code&gt; or &lt;code&gt;-x&lt;/code&gt; to control which checks are run, Brakeman will now fail if the options supplied do not match existing check names. &lt;code&gt;-t None&lt;/code&gt; may be used to avoid running any checks.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/986&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Handle Included Concerns&lt;/h3&gt;

&lt;p&gt;Brakeman will now handle the &lt;code&gt;included&lt;/code&gt; block in Concerns. Additionally, to support this, Concerns are processed prior to other classes.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/966&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;49fd8b3e6c1f348304bdbfc3b5d4cfbd465a5b5d4feec8337bbe3df7836787be  brakeman-3.5.0.gem
2ef50a61ca4aa1cff1f28dfe6308ea53157d996975519f5ae5c9266bf5772fb0  brakeman-min-3.5.0.gem
766c9da778e3be36ca709e637276f090514dbc0ddde5e261a1baff6da351480e  brakeman-lib-3.5.0.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.4.1 Released</title>
    <link href="http://brakemanscanner.org/blog/2016/11/02/brakeman-3-dot-4-1-released/"/>
    <updated>2016-11-02T13:07:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2016/11/02/brakeman-3-dot-4-1-released</id>
    <content type="html">&lt;ul&gt;
&lt;li&gt;Configurable engines path (&lt;a href=&quot;https://github.com/jsyeo&quot;&gt;Jason Yeo&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Check CSRF setting in direct subclasses of &lt;code&gt;ActionController::Base&lt;/code&gt; (&lt;a href=&quot;https://github.com/jsyeo&quot;&gt;Jason Yeo&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Pull Ruby version from &lt;code&gt;.ruby-version&lt;/code&gt; or Gemfile&lt;/li&gt;
&lt;li&gt;Use Ruby version to turn off SymbolDoS check (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/928&quot;&gt;#928&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix ignoring link interpolation not at beginning of string (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/939&quot;&gt;#939&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Show action help at start of interactive ignore (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/949&quot;&gt;#949&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about &lt;code&gt;where_values_hash&lt;/code&gt; in SQLi (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/942&quot;&gt;#942&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Engine Paths Option&lt;/h3&gt;

&lt;p&gt;Thanks to the work of Jason Yeo, Brakeman now supports custom paths to Rails engines uses the &lt;code&gt;--add-engines-path&lt;/code&gt; option.&lt;/p&gt;

&lt;p&gt;Multiple comma-separated paths may be configured. To include all subdirectories, use &lt;code&gt;*&lt;/code&gt; (e.g. &lt;code&gt;my_engines/*&lt;/code&gt;). Absolute paths may be used for engines outside the application.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/948&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Expanded CSRF Check&lt;/h3&gt;

&lt;p&gt;Also thanks to Jason Yeo, any controller with &lt;code&gt;ActionController::Base&lt;/code&gt; as a direct parent will be checked for a &lt;code&gt;protect_from_forgery&lt;/code&gt; call.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/953&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Ruby Version Info&lt;/h3&gt;

&lt;p&gt;Brakeman will now pull information about the Ruby version used for an application either from the &lt;code&gt;Gemfile&lt;/code&gt; or &lt;code&gt;.ruby-version&lt;/code&gt;. Right now this is only used for disabling (the already optional) Symbol DoS check for versions of Ruby that have symbol garbage collection.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/947&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Link Interpolation False Positive&lt;/h3&gt;

&lt;p&gt;Brakeman's warning about interpolating user input into URLs has always checked to see if the interpolation was at the beginning of the string. However, that check didn't work if the first thing in the string was another interpolation. This has been fixed.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/940&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;More Help in Interactive Ignore&lt;/h3&gt;

&lt;p&gt;For clarity, &quot;interactive ignore&quot; mode will now display the action options before going through each warning.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/75613/19423195/e1d4846c-93d2-11e6-9e07-92ffdf545dbd.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/950&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.4.0 Released</title>
    <link href="http://brakemanscanner.org/blog/2016/09/07/brakeman-3-dot-4-0-released/"/>
    <updated>2016-09-07T13:55:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2016/09/07/brakeman-3-dot-4-0-released</id>
    <content type="html">&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Oops! Brakeman&amp;#39;s 6th birthday was August 27th! 🎉 6 years, 61 contributors, 91 releases, 3.3 million gem downloads 🎉&lt;/p&gt;&amp;mdash; Brakeman Scanner (@brakeman) &lt;a href=&quot;https://twitter.com/brakeman/status/772844048402964481&quot;&gt;September 5, 2016&lt;/a&gt;&lt;/blockquote&gt;


&lt;script async src=&quot;http://brakemanscanner.org//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


&lt;p&gt;&lt;em&gt;Changes since 3.3.5&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Show obsolete ignore entries in reports (&lt;a href=&quot;https://github.com/jcheatham&quot;&gt;Jonathan Cheatham&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add option to prune ignore file with &lt;code&gt;-I&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add new &lt;code&gt;plain&lt;/code&gt; report format (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/914&quot;&gt;#914&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Support creating reports in non-existent paths (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/924&quot;&gt;#924&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;--no-exit-warn&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/925&quot;&gt;#925&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Improved Slim template support&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Obsolete Ignore Entries&lt;/h3&gt;

&lt;p&gt;The &quot;ignore&quot; configuration file can sometimes grow large due to stale entries that no longer correspond to existing warnings. Thanks to &lt;a href=&quot;https://github.com/jcheatham&quot;&gt;Jonathan Cheatham&lt;/a&gt;, these obsolete entires will now be noted in the default and JSON reports.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/894&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;When using the &lt;code&gt;-I&lt;/code&gt; option it is now possible to prune the ignore file.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/75613/18257206/f9631f9a-7374-11e6-92bc-94b9d3a635f4.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/75613/18257236/6868e726-7375-11e6-8a5b-30b6baed093a.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/934&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;New Report Format&lt;/h3&gt;

&lt;p&gt;This release adds a new &quot;plain text&quot; report format. It will eventually replace the default &quot;table&quot; report in Brakeman 4.0.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/75613/18259647/329a3da4-739b-11e6-8258-b7ab2073483b.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To output in the new format, use &lt;code&gt;-f plain&lt;/code&gt; or &lt;code&gt;-o report.plain&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The color codes should be disabled automatically if outputing to a file, but &lt;code&gt;--no-color&lt;/code&gt; can be used to turn colors off.&lt;/p&gt;

&lt;p&gt;Feedback on the new report format is encouraged prior to the 4.0 release.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/935&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Report Paths&lt;/h3&gt;

&lt;p&gt;If the specified output file is in a non-existent path, Brakeman will now attempt to create the path before writing out the report.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/927&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;No Exit Code on Warnings&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;--no-exit-warn&lt;/code&gt; has been added to complement &lt;code&gt;--exit-warn&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/926&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Improved Slim Support&lt;/h3&gt;

&lt;p&gt;Most users will not notice any changes, but internally Slim templates are handled a bit better.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/932&quot;&gt;changes&lt;/a&gt; and &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/931&quot;&gt;more&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;0cfd4b9cb8515ed9cbd254710761bfc409c604f3351e200b22955a1c3f93f8d8  brakeman-3.4.0.gem
7d07d87aa0732465bb6f0c17279f78edcfd0b1d841ddb63a95529ba762841395  brakeman-min-3.4.0.gem
e3d61c1de5549984a0d9eb3a3a53a4ef17b1b41db1be7d504237dd05a0cfa203  brakeman-lib-3.4.0.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.3.4/3.3.5 Released</title>
    <link href="http://brakemanscanner.org/blog/2016/08/12/brakeman-3-dot-3-4-released/"/>
    <updated>2016-08-12T08:26:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2016/08/12/brakeman-3-dot-3-4-released</id>
    <content type="html">&lt;p&gt;This is a quick release to add warnings for &lt;a href=&quot;https://groups.google.com/d/msg/ruby-security-ann/8B2iV2tPRSE/JkjCJkSoCgAJ&quot;&gt;CVE-2016-6316&lt;/a&gt; and &lt;a href=&quot;https://groups.google.com/d/msg/ruby-security-ann/WccgKSKiPZA/9DrsDVSoCgAJ&quot;&gt;CVE-2016-6317&lt;/a&gt;. There was a bug in 3.3.4 that affected debug output which has been fixed in 3.3.5.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.3.3&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add generic warning for CVE-2016-6316&lt;/li&gt;
&lt;li&gt;Warn about dangerous use of &lt;code&gt;content_tag&lt;/code&gt; with CVE-2016-6316&lt;/li&gt;
&lt;li&gt;Add warning for CVE-2016-6317&lt;/li&gt;
&lt;li&gt;Use Minitest&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;em&gt;Changes since 3.3.4&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fix bug in reports when using &lt;code&gt;--debug&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;CVE-2016-6316&lt;/h3&gt;

&lt;p&gt;Typically Rails will escape attribute values passed to tag helpers like &lt;code&gt;content_tag&lt;/code&gt;. If the attribute has already been marked as &quot;safe&quot; with &lt;code&gt;.html_safe&lt;/code&gt; or (more likely) a different escaping helper like &lt;code&gt;sanitize&lt;/code&gt;, the tag helper will not escape the value again (that is the purpose of &lt;code&gt;.html_safe&lt;/code&gt;). However, not all sanitizers/escape methods escape double quotes, which are dangerous inside of tag attributes. In particular, double quotes allow an attacker to close the current attribute and insert new attributes (like &lt;code&gt;onmouseover&lt;/code&gt;) that can execute JavaScript.&lt;/p&gt;

&lt;p&gt;Brakeman will issue a generic warning about CVE-2016-6316 for affected versions and may generate warnings for potentially dangerous calls to &lt;code&gt;content_tag&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/917&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;CVE-2016-6317&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/8SA-M3as7A8/Mr9fi9X4kNgJ&quot;&gt;JSON bug&lt;/a&gt; is back. Specially-crafted queries can cause parameters to be interpreted as empty hashes, which may cause unexpected behavior in SQL queries.&lt;/p&gt;

&lt;p&gt;Brakeman will generate a generic warning for affected versions (4.2 series).&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/918&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Minitest&lt;/h3&gt;

&lt;p&gt;Unrelated, Brakeman now uses Minitest instead of test-unit.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/912/&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;7231e00bdb4353ee7e91e5f1e60e34cf29b5563e6f7e1e5478223e72568c493a  brakeman-3.3.5.gem
c07e282c2e1733f8d7db4a4ffefe22e7e38a62ddfd750f0866c0b49070cb61c9  brakeman-lib-3.3.5.gem
a7f8e6fa8eb4254b7ad17080180289794a02641b1f2ec362de57cfdb2f1535be  brakeman-min-3.3.5.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.3.3 Released</title>
    <link href="http://brakemanscanner.org/blog/2016/07/20/brakeman-3-dot-3-3-released/"/>
    <updated>2016-07-20T18:11:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2016/07/20/brakeman-3-dot-3-3-released</id>
    <content type="html">&lt;p&gt;This release is mostly bug fixes and internal improvements, although it may find more warnings due to indexing of view helpers.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Index calls in view helpers&lt;/li&gt;
&lt;li&gt;Process inline template renders (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/672&quot;&gt;#672&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Show path when no Rails app found (&lt;a href=&quot;https://github.com/oreoshake&quot;&gt;Neil Matatall&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about hashes in &lt;code&gt;link_to&lt;/code&gt; hrefs (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/897&quot;&gt;#897&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Improve return value guesses&lt;/li&gt;
&lt;li&gt;Ignore boolean methods in render paths&lt;/li&gt;
&lt;li&gt;Reduce open redirect duplicates&lt;/li&gt;
&lt;li&gt;Fix SymbolDoS error with unknown Rails version&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;View Helpers&lt;/h3&gt;

&lt;p&gt;Calls in view helpers are now indexed, which means Brakeman will search them for potential vulnerabilities.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/907&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Inline Templates&lt;/h3&gt;

&lt;p&gt;Brakeman will now process inline templates in controllers, if they are using ERB (the default):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;render :inline =&amp;gt; &quot;&amp;lt;%= params[:x].html_safe %&amp;gt;&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/905&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Rails App Path&lt;/h3&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/oreoshake&quot;&gt;Neil Matatall&lt;/a&gt;, Brakeman will now display the path it tried to search for a Rails application if it cannot find it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Please supply the path to a Rails application (looking in /some/path/).
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/909&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Hashes as URLs&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about obvious hash arguments in the HREF for &lt;code&gt;link_to&lt;/code&gt; calls, as well as handling &lt;code&gt;url_for&lt;/code&gt; better.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/904&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Return Values&lt;/h3&gt;

&lt;p&gt;In some cases, Brakeman attempts to determine the possible return value(s) of a method call.
This release includes a number of improvements to those guesses which may make some warnings easier to understand
and fix some false positives.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/896&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Render Path Booleans&lt;/h3&gt;

&lt;p&gt;The check for dynamic render paths will no longer warn about methods ending in &lt;code&gt;?&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/899&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Redirect Duplicates&lt;/h3&gt;

&lt;p&gt;This release refactored much of the warning duplicate tracking, and as such there should be fewer duplicate warnings about open redirects.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/901&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;490bf7b47d4edbb29fd3f87c5dafa50aec2888d495b64275a635df324a8476e9  brakeman-3.3.3.gem
793f1c69cca2681bdd0c98f11307ace4f1a43ed594dd45cbe5b67f0383e76e2f  brakeman-lib-3.3.3.gem
dcc3a75b12f84cac582d383a375d3b85d033e25ba42af051bedcdc8b5377c2c5  brakeman-min-3.3.3.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed improvements in this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.3.2 Released</title>
    <link href="http://brakemanscanner.org/blog/2016/06/10/brakeman-3-dot-3-2-released/"/>
    <updated>2016-06-10T08:49:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2016/06/10/brakeman-3-dot-3-2-released</id>
    <content type="html">&lt;p&gt;This is a bug fix release.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.3.2&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fix performance regression in global constant tracking&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Brakeman 3.3.0 introduced a new feature to track constant values across the application. This helped reduce false positives, for example when checking a value against a constant array of values. However, the lookup of constant values was very slow for moderate to large numbers of constants. In some test cases it added up to a minute of scan time. This has been resolved along with some changes to how dynamic constant names are handled.&lt;/p&gt;

&lt;p&gt;Additionally, the &lt;code&gt;--faster&lt;/code&gt; option will turn off global constant tracking entirely.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/891&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;58bb2179de2bd479d32dc2d2018e40caf478916e283ea88089fe0bcb30a55e6c  brakeman-3.3.2.gem
4f72ff02a163d78244554c4a26ea35e88d76dd6b60c3d21573db8518abcba6fc  brakeman-min-3.3.2.gem
c0beeabe95aa693a5273bd48922028f48a190940b18c795813bd0f96068452b4  brakeman-lib-3.3.2.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to the reporters of the performance issue in the 3.3.0 release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;

&lt;p&gt;For commercial support, please consider &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.3.1 Released</title>
    <link href="http://brakemanscanner.org/blog/2016/06/03/brakeman-3-dot-3-1-released/"/>
    <updated>2016-06-03T08:15:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2016/06/03/brakeman-3-dot-3-1-released</id>
    <content type="html">&lt;p&gt;&lt;em&gt;Changes since 3.3.1&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Improved line number accuracy in ERB templates (&lt;a href=&quot;https://github.com/ptoomey3&quot;&gt;Patrick Toomey&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Allow multiple line regex in &lt;code&gt;validates_format_of&lt;/code&gt; (&lt;a href=&quot;https://github.com/c0va23&quot;&gt;Dmitrij Fedorenko&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid overwriting instance/class methods with same name (&lt;a href=&quot;https://github.com/imtayadeway&quot;&gt;Tim Wade&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;--force-scan&lt;/code&gt; option (&lt;a href=&quot;https://github.com/oreoshake&quot;&gt;Neil Matatall&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Only consider &lt;code&gt;if&lt;/code&gt; branches in templates&lt;/li&gt;
&lt;li&gt;Support more safe &lt;code&gt;&amp;amp;.&lt;/code&gt; operations&lt;/li&gt;
&lt;li&gt;Avoid warning about SQL injection with &lt;code&gt;quoted_primary_key&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/884&quot;&gt;#884&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Delay loading vendored gems and modifying load path&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;brakeman-lib&lt;/code&gt; gem&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;ERB Template Line Numbers&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ptoomey3&quot;&gt;Patrick Toomey&lt;/a&gt; contributed a series of patches to bring Brakeman's handling of ERB/Erubis templates in line with the Rails implementation. This has the effect of correcting some line numbers and fixed processing of &lt;code&gt;case&lt;/code&gt; statements in templates.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/878&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Multiline Regex Validation&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/c0va23&quot;&gt;Dmitrij Fedorenko&lt;/a&gt; added a change to support multiline extended regular expressions for model validations.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/885&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Class Methods&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/imtayadeway&quot;&gt;Tim Wade&lt;/a&gt; fixed an issue where class methods and instance methods with the same name on the same class would overwrite each other. This may cause a few warning fingerprints to change, since all method names are now stored as symbols (some were strings before).&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/881&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Force Scan&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/oreoshake&quot;&gt;Neil Matatall&lt;/a&gt; added the &lt;code&gt;--force-scan&lt;/code&gt; option to force Brakeman to scan an application even if it doesn't look like a Rails app.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/879&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Branches in Templates&lt;/h3&gt;

&lt;p&gt;When looking at template output, Brakeman will no longer treat the conditional as output, just the branches. This helps find more potential instances of cross-site scripting.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;%= params[:x].html_safe unless this_is_a_bad_idea? %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now Brakeman will just consider the &lt;code&gt;params[:x].html_safe&lt;/code&gt; value which is clearly dangerous.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/883/&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;More Safe Calls&lt;/h3&gt;

&lt;p&gt;Brakeman can now handle more instances of the &quot;safe call&quot; or &quot;lonely&quot; operator such as &lt;code&gt;a&amp;amp;.b ||= 1&lt;/code&gt; and &lt;code&gt;x&amp;amp;.y += z 1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/887&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Quoted Primary Key&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about use of &lt;code&gt;quoted_primary_key&lt;/code&gt; in SQL strings.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/888&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Delayed Load Path Modification&lt;/h3&gt;

&lt;p&gt;Brakeman 3.3.0 started vendoring all its dependencies to avoid conflicts with application dependencies. However, if Brakeman is included in a Gemfile without &lt;code&gt;require: false&lt;/code&gt;, it will still modify the load path and potentially cause conflicts.&lt;/p&gt;

&lt;p&gt;This version delays loading any dependencies until Brakeman actually runs. This is almost like having &lt;code&gt;require: false&lt;/code&gt; automatically.&lt;/p&gt;

&lt;p&gt;Please keep in mind it is really not recommended to include Brakeman in Gemfiles unless it is actually being used as a library. Otherwise it's like mixing your browser's dependencies with your applications. It doesn't make sense.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/889&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;brakeman-lib&lt;/h3&gt;

&lt;p&gt;For those who don't want Brakeman to bundle and vendor its own dependencies, the &lt;a href=&quot;https://rubygems.org/gems/brakeman-lib&quot;&gt;brakeman-lib&lt;/a&gt; gem is identical to the &lt;code&gt;brakeman&lt;/code&gt; gem but without the bundling. Consider using it if the bundling and modified load paths are causing issues.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/commit/fa310a9b736d858a929715802d98b1a3f0887569&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;RailsConf Security Talks&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/presidentbeef&quot;&gt;Justin Collins&lt;/a&gt; gave &lt;a href=&quot;https://www.youtube.com/watch?v=DHHHnPwSY5I&amp;amp;feature=youtu.be&amp;amp;t=55m6s&quot;&gt;a lightning talk&lt;/a&gt; about Brakeman and &lt;a href=&quot;https://www.youtube.com/watch?v=3P9naxOfUC4&amp;amp;feature=youtu.be&quot;&gt;a regular talk&lt;/a&gt; about real-world examples of vulnerabilities Rails won't save you from.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/secretmike&quot;&gt;Mike Milner&lt;/a&gt; spoke about &lt;a href=&quot;https://youtu.be/UoiCylwUoq4&quot;&gt;the security breaches of 2015&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/JessRudder&quot;&gt;Jessica Rudder&lt;/a&gt; talked through &lt;a href=&quot;https://youtu.be/2GHWAYys1is&quot;&gt;examples of SQL injection&lt;/a&gt; in ActiveRecord.&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;5c22721c8b486fa9d283cabf65c7e77b2f7428056d4d907b7f74a91dd112616a  brakeman-3.3.1.gem
7aa57ed8b42c0cadef09214f5544424659ab3972912137fad37da1a052d8a792  brakeman-lib-3.3.1.gem
95e68202493d8c504ad72276c8bfa46abb1c78c309bc2b80b433a6220f3722eb  brakeman-min-3.3.1.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed improvements in this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion. Please note the mailing list is no longer in use and has apparently not been delivering mail for some time.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.3.0 Released</title>
    <link href="http://brakemanscanner.org/blog/2016/05/05/brakeman-3-dot-3-0-released/"/>
    <updated>2016-05-05T09:49:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2016/05/05/brakeman-3-dot-3-0-released</id>
    <content type="html">&lt;p&gt;Brakeman 3.3.0 introduces a new packaging method for Brakeman which vendors all dependencies and does not include any gem dependencies in the gemspec. Please test and provide feedback if it does not work as expected.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.2.1&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bundle all dependencies in gem&lt;/li&gt;
&lt;li&gt;Return exit code &lt;code&gt;4&lt;/code&gt; if no Rails application is detected (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/869&quot;&gt;#869&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add optional check for secrets in source code (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/201&quot;&gt;#201&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Track constants globally&lt;/li&gt;
&lt;li&gt;Skip if branches with &lt;code&gt;Rails.env.test?&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/862&quot;&gt;#862&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Skip processing obviously false if branches (more broadly)&lt;/li&gt;
&lt;li&gt;Handle HAML &lt;code&gt;find_and_preserve&lt;/code&gt; with a block (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/837&quot;&gt;#837&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Process &lt;code&gt;Array#first&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Allow non-Hash arguments in &lt;code&gt;protect_from_forgery&lt;/code&gt; (&lt;a href=&quot;https://github.com/jsyeo&quot;&gt;Jason Yeo&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about &lt;code&gt;u&lt;/code&gt; helper (&lt;a href=&quot;https://github.com/cdollins&quot;&gt;Chad Dollins&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about mass assignment and SQL injection with &lt;code&gt;params.slice&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/866&quot;&gt;#866&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about &lt;code&gt;slice&lt;/code&gt; in &lt;code&gt;redirect_to&lt;/code&gt; and &lt;code&gt;link_to&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/832&quot;&gt;#832&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning on &lt;code&gt;popen&lt;/code&gt; with array (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/851&quot;&gt;#851&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;[Code Climate engine] When possible, output to /dev/stdout (&lt;a href=&quot;https://github.com/GordonDiggs&quot;&gt;Gordon Diggs&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;[Code Climate engine] Remove nil entries from &lt;code&gt;include_paths&lt;/code&gt; (&lt;a href=&quot;https://github.com/GordonDiggs&quot;&gt;Gordon Diggs&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;[Code Climate engine] Report end lines for issues (&lt;a href=&quot;https://github.com/GordonDiggs&quot;&gt;Gordon Diggs&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Dependency Bundling&lt;/h3&gt;

&lt;p&gt;In its gem form, Brakeman no longer declares any external dependencies. Its dependencies are bundled with the gem itself. This should prevent the conflicts which sometimes occur when Brakeman is declared as a dependency of a Rails application. The disadvantage is you will no longer be able to update Brakeman dependencies (like RubyParser) without updating Brakeman itself.&lt;/p&gt;

&lt;p&gt;As this is a new way of distributing Brakeman, please report any issues that may arise.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/845&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;New Exit Code&lt;/h3&gt;

&lt;p&gt;A new exit code has been added for the case when Brakeman does not detect a Rails application.&lt;/p&gt;

&lt;p&gt;For reference, these are Brakeman's current exit codes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt; - Normal exit&lt;/li&gt;
&lt;li&gt;&lt;code&gt;3&lt;/code&gt; - Warnings found (with &lt;code&gt;-z&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;4&lt;/code&gt; - No Rails application detected&lt;/li&gt;
&lt;li&gt;&lt;code&gt;255&lt;/code&gt; - Error&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/870&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Secrets Check&lt;/h3&gt;

&lt;p&gt;A new optional check has been added to look for hard-coded secrets in the source code. It will warn when constants like &lt;code&gt;PASSWORD&lt;/code&gt; are assigned string literals. To run the new check, use &lt;code&gt;-t Secrets&lt;/code&gt; or &lt;code&gt;-A&lt;/code&gt; to run all checks including optional ones.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/861&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Constant Values&lt;/h3&gt;

&lt;p&gt;This release includes initial support for tracking and matching constants across the application. For example, if a model contains a constant &lt;code&gt;Model::KEYS&lt;/code&gt; which is used elsewhere, Brakeman should be able to track this value. This helps prevents false positives when safe values have been declared as constants.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/855&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Skipping Test Code&lt;/h3&gt;

&lt;p&gt;Brakeman will now ignore &lt;code&gt;if&lt;/code&gt; branches that check &lt;code&gt;Rails.env.test?&lt;/code&gt;. Additionally, branch skipping behavior (e.g. &lt;code&gt;if false...&lt;/code&gt;) has been expanded to most of Brakeman's processing instead of just in data flow analysis.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/868&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;HAML &lt;code&gt;find_and_preserve&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Brakeman will now handle uses of &lt;code&gt;find_and_preserve&lt;/code&gt; in HAML with a block.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/839&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Array#first&lt;/h3&gt;

&lt;p&gt;Calls to &lt;code&gt;Array#first&lt;/code&gt; will be replaced with the first value in the array when known.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/856&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Forgery Option&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jsyeo&quot;&gt;Jason Yeo&lt;/a&gt; provided a fix for when Brakeman encounters a non-Hash argument to &lt;code&gt;protect_from_forgery&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/849&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;&lt;code&gt;u&lt;/code&gt; Helper&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cdollins&quot;&gt;Chad Dollins&lt;/a&gt; fixed XSS false positives when the &lt;code&gt;u&lt;/code&gt; alias for &lt;code&gt;url_encode&lt;/code&gt; is used.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/863&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Fewer &lt;code&gt;slice&lt;/code&gt; False Positives&lt;/h3&gt;

&lt;p&gt;Brakeman should no longer warn when using &lt;code&gt;params.slice&lt;/code&gt; in mass assignment, SQL injection, links, and open redirects.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/867&quot;&gt;changes&lt;/a&gt; and &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/871&quot;&gt;other changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Safe popen&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about uses of &lt;code&gt;popen&lt;/code&gt; when the argument is an array, in which case the arguments are escaped.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/854&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Code Climate Engine&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GordonDiggs&quot;&gt;Gordon Diggs&lt;/a&gt; provided several improvements to the Code Climate Engine in this release:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Remove &lt;code&gt;nil&lt;/code&gt; entries from the &lt;code&gt;include_paths&lt;/code&gt; option&lt;/li&gt;
&lt;li&gt;Force output to stdout when possible&lt;/li&gt;
&lt;li&gt;Report end lines to conform with spec&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;c01ec64d35218887fc5ea2ae8babc88e9e0e7cc3c161b020725d2b17c4189858  brakeman-3.3.0.gem
f1adce1a696799342dc9f50b51975024060360dc9018358c5d8e34c1c4681bd1  brakeman-min-3.3.0.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed improvements in this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion. Please note the mailing list is no longer in use and has apparently not been delivering mail for some time.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.2.1 Released</title>
    <link href="http://brakemanscanner.org/blog/2016/02/24/brakeman-3-dot-2-1-released/"/>
    <updated>2016-02-24T21:36:00-08:00</updated>
    <id>http://brakemanscanner.org/blog/2016/02/24/brakeman-3-dot-2-1-released</id>
    <content type="html">&lt;p&gt;&lt;em&gt;Changes since 3.2.0&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Remove &lt;code&gt;multi_json&lt;/code&gt; dependency from &lt;code&gt;bin/brakeman&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;As pointed out by &lt;a href=&quot;https://github.com/bf4&quot;&gt;Benjamin Fleischer&lt;/a&gt;, there was a lingering use of &lt;code&gt;multi_json&lt;/code&gt; in &lt;code&gt;bin/brakeman&lt;/code&gt;. This only caused a problem when using the &lt;code&gt;--compare&lt;/code&gt; option.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/831&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;4a7e7a6e9ad9fed22f727fb8d471de145f55d97465b4dfb4935e3e8379667425  brakeman-min-3.2.1.gem
901202b04b1cae0a781b5a6bae2db3eecd35e9f0a044fbfaa31cac63ab636449  brakeman-3.2.1.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion. Please note the mailing list is no longer in use and has apparently not been delivering mail for some time.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.2.0 Released</title>
    <link href="http://brakemanscanner.org/blog/2016/02/24/brakeman-3-dot-2-0-released/"/>
    <updated>2016-02-24T15:46:00-08:00</updated>
    <id>http://brakemanscanner.org/blog/2016/02/24/brakeman-3-dot-2-0-released</id>
    <content type="html">&lt;p&gt;This release sheds a couple dependencies and adds support for new Ruby 2.3 syntax.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.1.5&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Support calls using &lt;code&gt;&amp;amp;.&lt;/code&gt; operator (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/796&quot;&gt;#796&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Handle CoffeeScript in HAML (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/813&quot;&gt;#813&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid render warnings about &lt;code&gt;params[:action]&lt;/code&gt;/&lt;code&gt;params[:controller]&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/812&quot;&gt;#812&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Only update ignore config file on changes (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/824&quot;&gt;#824&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Sort ignore config file&lt;/li&gt;
&lt;li&gt;Index calls in class bodies but outside methods (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/814&quot;&gt;#814&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Skip Symbol DoS check on Rails 5&lt;/li&gt;
&lt;li&gt;Fix finding calls with &lt;code&gt;targets: nil&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Remove &lt;code&gt;fastercsv&lt;/code&gt; dependency&lt;/li&gt;
&lt;li&gt;Remove &lt;code&gt;multi-json&lt;/code&gt; dependecy&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Ruby 2.3 Lonely Operator&lt;/h3&gt;

&lt;p&gt;With the update of RubyParser to 3.8.1 (and Ruby2Ruby to 2.3), Brakeman now supports the new &lt;code&gt;&amp;amp;.&lt;/code&gt; operator and should treat it like a regular method call.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/827&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;CoffeeScript in HAML&lt;/h3&gt;

&lt;p&gt;This release handles CoffeeScript embedded in HAML better and should reduce some false positives.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/817&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Render Warnings on Safe Parameters&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn on &lt;code&gt;render params[:action]&lt;/code&gt; or &lt;code&gt;render params[:controller]&lt;/code&gt;, as those values are not able to be controlled by an attacker.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/816&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;'Ignore' Configuration Changes&lt;/h3&gt;

&lt;p&gt;The &quot;ignore config&quot; files generated by Brakeman are now sorted and will only update on changes, instead of always writing a new file.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/828&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Index Calls Outside Methods&lt;/h3&gt;

&lt;p&gt;Calls that are outside methods (but inside class bodies) can now be found in Brakeman checks.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/815&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Skip Symbol DoS with Rails 5&lt;/h3&gt;

&lt;p&gt;Rails 5 requires Ruby &gt;= 2.2.2, which now garbage collects symbols. If the &lt;code&gt;SymbolDoS&lt;/code&gt; check is run on a Rails 5 application (it's already optional), it will no longer warn.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/829&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Dependency Removal&lt;/h3&gt;

&lt;p&gt;Since Ruby 1.8 is no longer supported, this release removes the legacy &lt;code&gt;fastercsv&lt;/code&gt; and &lt;code&gt;multi-json&lt;/code&gt; dependencies.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/822&quot;&gt;fastercsv&lt;/a&gt;, &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/818&quot;&gt;multi-json&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;d1d1468fcca0ec5dd99c53af2018b781a8efe06483190aef9d13b1abcbb7e2a0  brakeman-min-3.2.0.gem
07023148564668cc39911eec0354ca03774be1f8a03d66162f53a5dde44bb502  brakeman-3.2.0.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed improvements in this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion. Please note the mailing list is no longer in use and has apparently not been delivering mail for some time.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.1.5 Released</title>
    <link href="http://brakemanscanner.org/blog/2016/01/28/brakeman-3-dot-1-5-released/"/>
    <updated>2016-01-28T08:26:00-08:00</updated>
    <id>http://brakemanscanner.org/blog/2016/01/28/brakeman-3-dot-1-5-released</id>
    <content type="html">&lt;p&gt;This release adds warnings for the latest Rails CVEs.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.1.4&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Warn about RCE with &lt;code&gt;render params&lt;/code&gt; (CVE-2016-0752)&lt;/li&gt;
&lt;li&gt;Add check for &lt;code&gt;strip_tags&lt;/code&gt; XSS (CVE-2015-7579)&lt;/li&gt;
&lt;li&gt;Add check for &lt;code&gt;sanitize&lt;/code&gt; XSS (CVE-2015-7578/80)&lt;/li&gt;
&lt;li&gt;Add check for basic auth timing attack (CVE-2015-7576)&lt;/li&gt;
&lt;li&gt;Add check for &lt;code&gt;reject_if&lt;/code&gt; proc bypass (CVE-2015-7577)&lt;/li&gt;
&lt;li&gt;Add check for denial of service via routes (CVE-2015-7581)&lt;/li&gt;
&lt;li&gt;Add check for mime-type denial of service (CVE-2016-0751)&lt;/li&gt;
&lt;li&gt;Check for implicit integer comparison in dynamic finders&lt;/li&gt;
&lt;li&gt;Support directories better with &lt;code&gt;--only-files&lt;/code&gt; and &lt;code&gt;--skip-files&lt;/code&gt; (&lt;a href=&quot;https://github.com/ptoomey3&quot;&gt;Patrick Toomey&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix CodeClimate construction of &lt;code&gt;--only-files&lt;/code&gt; (&lt;a href=&quot;https://github.com/wfleming&quot;&gt;Will Fleming&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about &lt;code&gt;permit&lt;/code&gt; in SQL (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/669&quot;&gt;669&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning on user input in comparisons&lt;/li&gt;
&lt;li&gt;Handle guards using &lt;code&gt;detect&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/376&quot;&gt;376&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Handle module names with self methods (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/785&quot;&gt;#785&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add session manipulation documentation (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/791&quot;&gt;#791&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add initial Rails 5 support&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Render Remote Code Execution&lt;/h3&gt;

&lt;p&gt;First up, &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/335P1DcLG00/OfB9_LhbFQAJ&quot;&gt;CVE-2016-0752&lt;/a&gt; allows an attacker to render files outside of the application path as well as &lt;a href=&quot;https://nvisium.com/blog/2016/01/26/rails-dynamic-render-to-rce-cve-2016-0752/&quot;&gt;execute arbitrary code&lt;/a&gt;. Passing in &lt;code&gt;params&lt;/code&gt; values directly is &lt;a href=&quot;https://twitter.com/joernchen/status/456822118500823040&quot;&gt;especially dangerous&lt;/a&gt;. Brakeman has warned about passing user input to &lt;code&gt;render&lt;/code&gt; since it was first released as &quot;dynamic render path&quot; warnings. For calls to &lt;code&gt;render&lt;/code&gt; that directly pass in &lt;code&gt;params&lt;/code&gt;, it has been changed to a remote code execution warning in affected versions.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/807&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Sanitization XSS&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/OU9ugTZcbjc/PjEP46pbFQAJ&quot;&gt;CVE-2015-7579&lt;/a&gt;, &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/807&quot;&gt;CVE-2015-7578&lt;/a&gt;, and &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/uh--W4TDwmI/m_CVZtdbFQAJ&quot;&gt;CVE-2015-7580&lt;/a&gt; are vulnerabilities in &lt;code&gt;rails-html-sanitizer&lt;/code&gt; affecting the &lt;code&gt;strip_tags&lt;/code&gt; and &lt;code&gt;sanitize&lt;/code&gt; methods. Brakeman will mark uses of &lt;code&gt;strip_tags&lt;/code&gt; and &lt;code&gt;sanitize&lt;/code&gt; with &lt;code&gt;raw&lt;/code&gt; or &lt;code&gt;html_safe&lt;/code&gt; as high confidence warnings. Since these methods might be used in support gems, Brakeman will also generate a generic warning for the CVEs in apps using vulnerable versions of &lt;code&gt;rails-html-sanitizer&lt;/code&gt;..&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/805&quot;&gt;changes&lt;/a&gt; plus &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/806&quot;&gt;these&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Basic Auth Timing Attack&lt;/h3&gt;

&lt;p&gt;The implementation of &lt;code&gt;http_basic_authenticate_with&lt;/code&gt; did not use constant-time comparison when checking passwords, allowing timing attacks as described in &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/ANv0HDHEC3k/mt7wNGxbFQAJ&quot;&gt;CVE-2015-7576&lt;/a&gt;. Brakeman will warn about affected applications using &lt;code&gt;http_basic_authenticate_with&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/800&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Bypass Record Deletion Filtering&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/cawsWcQ6c8g/tegZtYdbFQAJ&quot;&gt;CVE-2015-7577&lt;/a&gt; is a bug where the &lt;code&gt;reject_if&lt;/code&gt; option to &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; will not be called if &lt;code&gt;allow_destroy&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;. Brakeman will warn on applications which meet all of these criteria and do not include the workaround in an initializer.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/804&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Wildcard Route Denial of Service&lt;/h3&gt;

&lt;p&gt;Brakeman will warn about &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/dthJ5wL69JE/YzPnFelbFQAJ&quot;&gt;CVE-2015-7581&lt;/a&gt; when it detects routes containing &lt;code&gt;':controller'&lt;/code&gt; wildcards on affected versions of Rails. These routes can be abused to cause a denial of service.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/808&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Mime-type Denial of Service&lt;/h3&gt;

&lt;p&gt;Sending many different mime-types via &lt;code&gt;Accept&lt;/code&gt; headers can cause a denial of service. Brakeman will warn about &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/9oLY_FCzvoc/w9oI9XxbFQAJ&quot;&gt;CVE-2016-0751&lt;/a&gt; in affected versions of Rails unless the workaround is present.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/801&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;MySQL Implicit Integer Conversion&lt;/h3&gt;

&lt;p&gt;As &lt;a href=&quot;http://www.phenoelit.org/blog/archives/2013/02/05/mysql_madness_and_rails/&quot;&gt;described here&lt;/a&gt;, MySQL will convert string values to match integer input - often leading to &lt;code&gt;0=0&lt;/code&gt; comparisons in queries which will always return true. Brakeman will warn when an application uses MySQL and &lt;code&gt;find_by_*&lt;/code&gt; dynamic finders on potentially sensitive fields like &lt;code&gt;password&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/798&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Better Directory Support When Skipping Files&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ptoomey3&quot;&gt;Patrick Toomey&lt;/a&gt; provided a patch to better explicitly match directories with &lt;code&gt;--only-files&lt;/code&gt; and &lt;code&gt;--skip-files&lt;/code&gt;. See the &lt;a href=&quot;https://github.com/presidentbeef/brakeman/blob/82de21d7c85acd8980ae7c4b86d77207f73b3444/OPTIONS.md#scanning-options&quot;&gt;updated options&lt;/a&gt; for details.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Please note use of &lt;code&gt;--only-files&lt;/code&gt; is strongly discouraged. Brakeman is designed to scan entire applications.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/764&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;CodeClimate File Restriction&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;include_paths&lt;/code&gt; configuration for the CodeClimate engine has been updated by &lt;a href=&quot;https://github.com/wfleming&quot;&gt;Will Fleming&lt;/a&gt; to handle spaces and other special characters.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/803/&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Permit &lt;code&gt;permit&lt;/code&gt; in SQL&lt;/h3&gt;

&lt;p&gt;Surprisingly, it is safe and effective to use &lt;code&gt;params.permit&lt;/code&gt; in SQL queries, as it will always return a hash of values which will be interpreted as parameterized values. Brakeman will no longer warn about uses of &lt;code&gt;permit&lt;/code&gt; in SQL queries.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/795&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;User Input in Comparisons&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about user input in comparisons, such as &lt;code&gt;'x' == params[:x]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/793&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Detect &lt;code&gt;detect&lt;/code&gt; Guard Statements&lt;/h3&gt;

&lt;p&gt;Fixing a &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/376&quot;&gt;bug&lt;/a&gt; filed almost 2.5 years ago, Brakeman will now recognize &lt;code&gt;Array#detect&lt;/code&gt;/&lt;code&gt;Array#find&lt;/code&gt; being used to whitelist values.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if safe_name = [:A, :B, :C].detect { |v| v == params[:v] }
  safe_name.constantize
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/794/&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Self Methods with Modules&lt;/h3&gt;

&lt;p&gt;Definitions of self methods inside nested modules was broken and is now fixed.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/792&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Session Manipulation Documentation&lt;/h3&gt;

&lt;p&gt;Documentation for session manipulation warnings has now been added to &lt;a href=&quot;http://brakemanscanner.org/docs/warning_types/session_manipulation/&quot;&gt;the Brakeman site&lt;/a&gt; and for the CodeClimate engine.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/791&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Rails 5 Support&lt;/h3&gt;

&lt;p&gt;Initial support for Rails 5 has been added to Brakeman, including a &lt;code&gt;-5&lt;/code&gt; option to force Rails 5 mode. However, no special analysis or warnings specific to Rails 5 have been implemented yet.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/799&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;CVE-2016-0753?&lt;/h3&gt;

&lt;p&gt;This release does not include a warning for &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/6jQVC1geukQ/8oYETcxbFQAJ&quot;&gt;CVE-2016-0753&lt;/a&gt;. The vulnerability appears to require using &lt;code&gt;permit!&lt;/code&gt; which Brakeman already warns about, or else passing in hashes that are not query parameters which Brakeman would not be able to detect as dangerous or benign.&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;fa9528859d4baa8cd4fbe67f634cd3741ee85d553bf59c4b2315a5ccb2976835  brakeman-3.1.5.gem
3248084efe71fcbb0c65b36e71ff0c06e65ac6bce1817a6f9d38ae0657a95bde  brakeman-min-3.1.5.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed improvements in this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter or hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt;. Please note the mailing list is no longer in use and has apparently not been delivering mail for some time.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.1.4 Released</title>
    <link href="http://brakemanscanner.org/blog/2015/12/22/brakeman-3-dot-1-4-released/"/>
    <updated>2015-12-22T10:41:00-08:00</updated>
    <id>http://brakemanscanner.org/blog/2015/12/22/brakeman-3-dot-1-4-released</id>
    <content type="html">&lt;p&gt;Brakeman Pi!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.1.3&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Emit Brakeman's native fingerprints for Code Climate engine (&lt;a href=&quot;https://github.com/noahd1&quot;&gt;Noah Davis&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Ignore &lt;code&gt;secrets.yml&lt;/code&gt; if in .gitignore (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/777&quot;&gt;#777&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Work around &lt;code&gt;safe_yaml&lt;/code&gt; error (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/778&quot;&gt;#778&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Increase test coverage for option parsing (&lt;a href=&quot;https://github.com/Zanadar&quot;&gt;Zander Mackie&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Clean up Ruby warnings (&lt;a href=&quot;https://github.com/andyw8&quot;&gt;Andy Waite&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Code Climate Fingerprints&lt;/h3&gt;

&lt;p&gt;The output format for Code Climate has been updated to include warning fingerprints as generated by Brakeman.&lt;/p&gt;

&lt;h3&gt;Ignored secrets.yml&lt;/h3&gt;

&lt;p&gt;If &lt;code&gt;secrets.yml&lt;/code&gt; is ignored via &lt;code&gt;.gitignore&lt;/code&gt;, Brakeman will ignore it, too.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/781&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Safe YAML Error&lt;/h3&gt;

&lt;p&gt;For some people, in some cases, &lt;code&gt;date&lt;/code&gt; is not loaded prior to loading &lt;code&gt;safe_yaml&lt;/code&gt;. This release ensures &lt;code&gt;date&lt;/code&gt; is loaded before using SafeYAML and only loads &lt;code&gt;safe_yaml&lt;/code&gt; on demand.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/782&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Test Coverage and Warning Cleanup&lt;/h3&gt;

&lt;p&gt;Thanks to Zander Mackie for improving test coverage (up to 91.24%) by writing tests for the command line options and thanks to Andy Waite for cleaning up various Ruby warnings.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/780&quot;&gt;test changes&lt;/a&gt;, &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/784&quot;&gt;warning fixes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;d53103d40a7ddf6ee2737770ecd0353b945a757d0fab6c50cde1eefba31f6197  brakeman-3.1.4.gem
a67d7c96090bc3b8193cf3b5db7af62ce719b9277d1b818ec6e9f96a52ad0caa  brakeman-min-3.1.4.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed improvements in this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter, joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;, or hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.1.3 Released</title>
    <link href="http://brakemanscanner.org/blog/2015/12/02/brakeman-3-dot-1-3-released/"/>
    <updated>2015-12-02T09:23:00-08:00</updated>
    <id>http://brakemanscanner.org/blog/2015/12/02/brakeman-3-dot-1-3-released</id>
    <content type="html">&lt;p&gt;This is a small bug fix release, except for one major new feature: &lt;a href=&quot;https://codeclimate.com/changelog/5653c9b67f7feb0048003051&quot;&gt;Brakeman is now available as an engine on the new Code Climate platform&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.1.2&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add Code Climate output format (&lt;a href=&quot;https://github.com/ABaldwinHunter&quot;&gt;Ashley Baldwin-Hunter&lt;/a&gt; / &lt;a href=&quot;https://github.com/dblandin&quot;&gt;Devon Blandin&lt;/a&gt; / &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/759&quot;&gt;John Pignata&lt;/a&gt; / &lt;a href=&quot;https://github.com/mrb&quot;&gt;Michael Bernstein&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Restore minimum Highline version (&lt;a href=&quot;https://github.com/kjg&quot;&gt;Kevin Glowacz&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Depend on safe_yaml 1.0 or later (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/752&quot;&gt;#753&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Check for session secret in secrets.yml (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/760&quot;&gt;#760&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning on &lt;code&gt;without_protection: true&lt;/code&gt; with hash literal (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/769&quot;&gt;#769&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Respect &lt;code&gt;exit_on_warn&lt;/code&gt; in config file (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/771&quot;&gt;#771&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid outputting false for &lt;code&gt;user_input&lt;/code&gt; in JSON&lt;/li&gt;
&lt;li&gt;Iteratively replace variables&lt;/li&gt;
&lt;li&gt;CallIndex improvements&lt;/li&gt;
&lt;li&gt;Improved tests for the Brakeman module (&lt;a href=&quot;https://github.com/bethanyr&quot;&gt;Bethany Rentz&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Make sure a &lt;code&gt;before_filter&lt;/code&gt; with block is a call (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/763&quot;&gt;#763&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Code Climate Platform&lt;/h3&gt;

&lt;p&gt;Thanks to the folks at &lt;a href=&quot;https://codeclimate.com/&quot;&gt;Code Climate&lt;/a&gt;, this release adds the ability to run Brakeman as an analysis engine on &lt;a href=&quot;https://codeclimate.com/changelog/5653c9b67f7feb0048003051&quot;&gt;Code Climate’s platform&lt;/a&gt;. You can now run Brakeman as part of Code Climate’s hosted analysis, or on your command line with their open source CLI. Brakeman can be integrated with results from your other favorite static analysis tools, giving you a unified view of issues in your code.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/758&quot;&gt;main changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Dependencies&lt;/h3&gt;

&lt;p&gt;Brakeman 3.1.0 relaxed the &lt;a href=&quot;https://github.com/JEG2/highline&quot;&gt;Highline&lt;/a&gt; dependency (to support Highline 1.7.x and up) and Brakeman 3.1.2 added a dependency on &lt;a href=&quot;https://github.com/dtao/safe_yaml&quot;&gt;safe_yaml&lt;/a&gt; without specifying a minimum version. Both of these changes resulted in some issues if combined with an application that depends on older versions of these libraries.&lt;/p&gt;

&lt;p&gt;Highline and safe_yaml now have minimum versions specified.&lt;/p&gt;

&lt;p&gt;(changes &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/762&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/753&quot;&gt;here&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;More Secrets&lt;/h3&gt;

&lt;p&gt;Production session secrets stored in &lt;code&gt;config/secrets.yml&lt;/code&gt; will now raise a warning.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/776&quot;&gt;changes&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Mass Assignment False Positive&lt;/h3&gt;

&lt;p&gt;Previously, Brakeman would warn on any mass assignment using &lt;code&gt;without_protection: true&lt;/code&gt;. &lt;a href=&quot;https://carouselapps.com/2015/11/24/using-brakeman/&quot;&gt;This blog post&lt;/a&gt; noted Brakeman would even warn if the values for mass assignment were a hash literal. This has been fixed.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/773&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Harcode Mode in Config&lt;/h3&gt;

&lt;p&gt;Brakeman now supports turning on &quot;hardcore mode&quot; (setting &lt;code&gt;:exit_on_warn: true&lt;/code&gt;) in a config file. This causes Brakeman return a non-zero exit code if any warnings are found.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/774&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;JSON Output&lt;/h3&gt;

&lt;p&gt;A refactoring caused some values of &lt;code&gt;user_input&lt;/code&gt; in JSON reports to be &lt;code&gt;false&lt;/code&gt; instead of &lt;code&gt;nil&lt;/code&gt;. This has been corrected.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/756&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;More Variable Replacement&lt;/h3&gt;

&lt;p&gt;A long time ago, Brakeman used to do two passes for data flow analysis, just in case one substitution could be replaced with yet another value. The second pass was removed when it turned out not to be that helpful in reality. However, there are some cases where it is helpful. Now Brakeman will attempt substitutions if there are more matches, but with a hard limit of 5 replacements to avoid infinite loops. This will reduce false positives in some situations.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/757&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;CallIndex Improvements&lt;/h3&gt;

&lt;p&gt;Fixed a small bug where &lt;code&gt;params&lt;/code&gt; was not a valid target when searching chained methods, as well as making it possible to search for chains beginning with a method call. Additionally, all the tests for CallIndex were broken and not testing anything.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/766&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Improved Test Coverage&lt;/h3&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/bethanyr&quot;&gt;Bethany Rentz&lt;/a&gt;, &lt;a href=&quot;https://codeclimate.com/github/presidentbeef/brakeman/coverage&quot;&gt;test coverage&lt;/a&gt; was nudged up over 90%. Plenty of low-hanging fruit remains, &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/723&quot;&gt;see this issue&lt;/a&gt; for suggestions of how to contribute!&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/735&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Brakeman Pro&lt;/h3&gt;

&lt;p&gt;Another small announcement: the first public release of &lt;a href=&quot;http://brakemanscanner.org/brakeman_pro/&quot;&gt;Brakeman Pro&lt;/a&gt; (the commercial version of Brakeman) is now available for purchase. If you are looking to financially support development of Brakeman, would like paid support, need a commercial license, or just want a slick GUI, consider checking out &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For some clarification regarding the future of Brakeman and Brakeman Pro, please see &lt;a href=&quot;http://librelist.com/browser//brakeman/2015/2/24/future-of-brakeman/&quot;&gt;this email from earlier in the year&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;57b0edcc289eb74359d2042a38ea519f96f606c89dc879e5fb53971d3d656707  brakeman-3.1.3.gem
85473af3a55c440959ea91f94fe14177ac58aa35b44fbb007c93cd742803eae6  brakeman-min-3.1.3.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed improvements in this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter, joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;, or hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.1.2 Released</title>
    <link href="http://brakemanscanner.org/blog/2015/10/28/brakeman-3-dot-1-2-released/"/>
    <updated>2015-10-28T15:59:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2015/10/28/brakeman-3-dot-1-2-released</id>
    <content type="html">&lt;p&gt;This release is mostly bug fixes and false positive reduction. However, please note fingerprints for inline render warnings will change.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.1.1&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sortable tables in HTML report (David Lanner)&lt;/li&gt;
&lt;li&gt;Add line numbers to class-level warnings&lt;/li&gt;
&lt;li&gt;Warn on SQL query keys, not values in hashes (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/738&quot;&gt;#738&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Set user input value for inline renders&lt;/li&gt;
&lt;li&gt;Avoid warning on inline renders with safe content types&lt;/li&gt;
&lt;li&gt;Treat &lt;code&gt;current_user&lt;/code&gt; like a model (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/744&quot;&gt;#744&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about model &lt;code&gt;find/find_by*&lt;/code&gt; in hrefs&lt;/li&gt;
&lt;li&gt;Handle &lt;code&gt;private def ...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Handle empty interpolation in HAML filters (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/732&quot;&gt;#732&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Catch divide-by-zero in alias processing (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/729&quot;&gt;#729&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Ignore filters that are not method names&lt;/li&gt;
&lt;li&gt;Search for config file relative to application root&lt;/li&gt;
&lt;li&gt;Use SafeYAML to load configuration files&lt;/li&gt;
&lt;li&gt;Allow inspection of recursive Sexps&lt;/li&gt;
&lt;li&gt;Reduce string allocations in &lt;code&gt;Warning#initialize&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Sortable Tables&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dlanner&quot;&gt;David Lanner&lt;/a&gt; added the ability to sort tables in the HTML report by clicking on the column headers.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/726&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Line Numbers for Class Warnings&lt;/h3&gt;

&lt;p&gt;When warning about an entire class (like a model missing &lt;code&gt;attr_accessible&lt;/code&gt;), the warning line number will point to the beginning of the class.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/733&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SQL Query Hashes&lt;/h3&gt;

&lt;p&gt;A long-standing bug in Brakeman caused it to warn about values in query hashes (e.g., &lt;code&gt;User.where(:x =&amp;gt; params[:x])&lt;/code&gt;) when it was intended to warn about user input in the &lt;em&gt;keys&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/740&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Inline Renders&lt;/h3&gt;

&lt;p&gt;Brakeman will now report the &lt;code&gt;render&lt;/code&gt; call as the &lt;code&gt;code&lt;/code&gt; value and the user input as &lt;code&gt;user_input&lt;/code&gt;. Please note the code will look a little different from what Brakeman reports, as render calls are turned into a slightly different AST node internally. This will definitely change fingerprints for these warnings.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/751&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;current_user&lt;/h3&gt;

&lt;p&gt;In a couple places, Brakeman will treat &lt;code&gt;current_user&lt;/code&gt; like a model instance, which it almost always is. This will probably be expanded in future releases.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/749&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Inline Privates&lt;/h3&gt;

&lt;p&gt;Calls to &lt;code&gt;private&lt;/code&gt; using the return value of &lt;code&gt;def&lt;/code&gt; will now work properly:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;private def secret_stuff
# ...
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/731&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Empty HAML Interpolation&lt;/h3&gt;

&lt;p&gt;Empty HAML interpolation inside of filters will no longer cause crashes and will be handled properly.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/750&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Divide-by-Zero&lt;/h3&gt;

&lt;p&gt;Brakeman sometimes divides by zero when it performs simple arithmetic during constant folding. While this is now reported as an error (and used to be, too), someday it should be a warning instead.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/730&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Config File Changes&lt;/h3&gt;

&lt;p&gt;When looking for the &lt;code&gt;config/brakeman.yml&lt;/code&gt; configuration file, Brakeman will now look relative to the application path instead of the working directory.&lt;/p&gt;

&lt;p&gt;Additionally, the &lt;code&gt;SafeYAML&lt;/code&gt; gem is used to prevent code execution for those running Brakeman against untrusted code.&lt;/p&gt;

&lt;p&gt;(changes &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/725&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/741&quot;&gt;here&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;c01f07ccc2490d0421e5974499c57f519aa371bfab5d25ba3b224e7ae9e2c415  brakeman-3.1.2.gem
d820c872cbe7bc8452c9bd8bd46d990ff1c0d53ee621c09f1997270fc978f783  brakeman-min-3.1.2.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs fixed in this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter, joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;, or hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.1.1 Released</title>
    <link href="http://brakemanscanner.org/blog/2015/09/23/brakeman-3-dot-1-1-released/"/>
    <updated>2015-09-23T08:11:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2015/09/23/brakeman-3-dot-1-1-released</id>
    <content type="html">&lt;p&gt;This release includes two new checks and a number of bug fixes.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.1.0&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add check for user input in session keys&lt;/li&gt;
&lt;li&gt;Add optional check for use of MD5 and SHA1&lt;/li&gt;
&lt;li&gt;Fix absolute paths for Windows (&lt;a href=&quot;https://github.com/spcoder&quot;&gt;Cody Frederick&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Allow searching call index methods by regex (&lt;a href=&quot;https://github.com/aianus&quot;&gt;Alex Ianus&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Consider &lt;code&gt;j&lt;/code&gt;/&lt;code&gt;escape_javascript&lt;/code&gt; safe inside Haml JavaScript blocks (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/708&quot;&gt;#708&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Better Haml processing of &lt;code&gt;find_and_preserve&lt;/code&gt; calls&lt;/li&gt;
&lt;li&gt;Fix chained assignment&lt;/li&gt;
&lt;li&gt;Treat &lt;code&gt;a.try(&amp;amp;:b)&lt;/code&gt; like &lt;code&gt;a.b()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add more Arel methods to be ignored in SQL (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/711&quot;&gt;#711&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning when linking to decorated models (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/683&quot;&gt;#683&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Support newer terminal-table releases (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/709&quot;&gt;#709&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Session Manipulation Check&lt;/h3&gt;

&lt;p&gt;As suggested by &lt;a href=&quot;https://twitter.com/joernchen&quot;&gt;Joernchen&lt;/a&gt;, Brakeman will now look for user input in session keys which can lead to session manipulation.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/720&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Optional Check for Weak Hashes&lt;/h3&gt;

&lt;p&gt;An optional check to look for use of MD5 and SHA1 has been added to this release. Run with &lt;code&gt;-t WeakHash&lt;/code&gt; to use just this optional check or &lt;code&gt;-A&lt;/code&gt; to run all checks.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/722&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Windows Paths&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/spcoder&quot;&gt;Cody Frederick&lt;/a&gt; fixed an issue with determining absolute paths on Windows.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/714&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Search for Methods by Regex&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/aianus&quot;&gt;Alex Ianus&lt;/a&gt; re-introduced the ability to search the CallIndex with regular expressions for methods:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tracker.find_call(method: /_something$/)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/710&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Haml Processing&lt;/h3&gt;

&lt;p&gt;Haml users may have noticed warnings with &lt;code&gt;find_and_preserve(Haml::Filters::Javascript.render_with_options(...))&lt;/code&gt; in them. This has been fixed so &lt;code&gt;find_and_preserve&lt;/code&gt; is treated as though it just passes through its arguments. Calls to &lt;code&gt;render_with_options&lt;/code&gt; will be treated as unescaped output.&lt;/p&gt;

&lt;p&gt;Along with this change, &lt;code&gt;j&lt;/code&gt; and &lt;code&gt;escape_javascript&lt;/code&gt; will be considered safe inside &lt;code&gt;:javascript&lt;/code&gt; filters in Haml.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/716&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Chained Assignment&lt;/h3&gt;

&lt;p&gt;Chained assignments like &lt;code&gt;a = b = c = 1&lt;/code&gt; will now be handled correctly. This fixes &lt;a href=&quot;https://stackoverflow.com/questions/11314450/how-to-secure-link-to-variable-cross-site-scripting-vulnerabilities&quot;&gt;a very old issue from 2012&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/718&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Trying More&lt;/h3&gt;

&lt;p&gt;While Brakeman already treated &lt;code&gt;a.try(:b)&lt;/code&gt; like &lt;code&gt;a.b()&lt;/code&gt;, there is a surprising amount of code which does &lt;code&gt;a.try(&amp;amp;:b)&lt;/code&gt;. This is totally unncessary, but Brakeman now handles it as well.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/717&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;More Arel Whitelisting&lt;/h3&gt;

&lt;p&gt;A number of Arel methods have been whitelisted to avoid warning about them inside SQL query building.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/719&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Decorated Models in Links&lt;/h3&gt;

&lt;p&gt;If the Draper gem is used, Brakeman will ignore calls to &lt;code&gt;decorate&lt;/code&gt; in &lt;code&gt;link_to&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/721&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;terminal-table&lt;/h3&gt;

&lt;p&gt;Newer &lt;a href=&quot;https://github.com/tj/terminal-table&quot;&gt;terminal-table&lt;/a&gt; releases are supported now and the dependency has been relaxed.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/712&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cfd1840116c20b0b8932720fdaac09dd4e47091a  brakeman-3.1.1.gem
603389da732d307a014af445a1f312415b65a682  brakeman-min-3.1.1.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter, joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;, or hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
</feed>
