<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>Brakeman - Rails Security Scanner</title>
  <link href="http://brakemanscanner.org/atom.xml" rel="self"/>
  <link href="http://brakemanscanner.org/"/>
  <updated>2015-10-31T12:53:30-07:00</updated>
  <id>http://brakemanscanner.org/</id>
  <author>
    <name>Justin Collins</name>
    
  </author>

  
  <entry>
    <title>Brakeman 3.1.2 Released</title>
    <link href="http://brakemanscanner.org/blog/2015/10/28/brakeman-3-dot-1-2-released/"/>
    <updated>2015-10-28T15:59:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2015/10/28/brakeman-3-dot-1-2-released</id>
    <content type="html">&lt;p&gt;This release is mostly bug fixes and false positive reduction. However, please note fingerprints for inline render warnings will change.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.1.1&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sortable tables in HTML report (David Lanner)&lt;/li&gt;
&lt;li&gt;Add line numbers to class-level warnings&lt;/li&gt;
&lt;li&gt;Warn on SQL query keys, not values in hashes (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/738&quot;&gt;#738&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Set user input value for inline renders&lt;/li&gt;
&lt;li&gt;Avoid warning on inline renders with safe content types&lt;/li&gt;
&lt;li&gt;Treat &lt;code&gt;current_user&lt;/code&gt; like a model (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/744&quot;&gt;#744&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about model &lt;code&gt;find/find_by*&lt;/code&gt; in hrefs&lt;/li&gt;
&lt;li&gt;Handle &lt;code&gt;private def ...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Handle empty interpolation in HAML filters (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/732&quot;&gt;#732&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Catch divide-by-zero in alias processing (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/729&quot;&gt;#729&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Ignore filters that are not method names&lt;/li&gt;
&lt;li&gt;Search for config file relative to application root&lt;/li&gt;
&lt;li&gt;Use SafeYAML to load configuration files&lt;/li&gt;
&lt;li&gt;Allow inspection of recursive Sexps&lt;/li&gt;
&lt;li&gt;Reduce string allocations in &lt;code&gt;Warning#initialize&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Sortable Tables&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dlanner&quot;&gt;David Lanner&lt;/a&gt; added the ability to sort tables in the HTML report by clicking on the column headers.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/726&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Line Numbers for Class Warnings&lt;/h3&gt;

&lt;p&gt;When warning about an entire class (like a model missing &lt;code&gt;attr_accessible&lt;/code&gt;), the warning line number will point to the beginning of the class.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/733&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SQL Query Hashes&lt;/h3&gt;

&lt;p&gt;A long-standing bug in Brakeman caused it to warn about values in query hashes (e.g., &lt;code&gt;User.where(:x =&amp;gt; params[:x])&lt;/code&gt;) when it was intended to warn about user input in the &lt;em&gt;keys&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/740&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Inline Renders&lt;/h3&gt;

&lt;p&gt;Brakeman will now report the &lt;code&gt;render&lt;/code&gt; call as the &lt;code&gt;code&lt;/code&gt; value and the user input as &lt;code&gt;user_input&lt;/code&gt;. Please note the code will look a little different from what Brakeman reports, as render calls are turned into a slightly different AST node internally. This will definitely change fingerprints for these warnings.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/751&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;current_user&lt;/h3&gt;

&lt;p&gt;In a couple places, Brakeman will treat &lt;code&gt;current_user&lt;/code&gt; like a model instance, which it almost always is. This will probably be expanded in future releases.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/749&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Inline Privates&lt;/h3&gt;

&lt;p&gt;Calls to &lt;code&gt;private&lt;/code&gt; using the return value of &lt;code&gt;def&lt;/code&gt; will now work properly:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;private def secret_stuff
# ...
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/731&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Empty HAML Interpolation&lt;/h3&gt;

&lt;p&gt;Empty HAML interpolation inside of filters will no longer cause crashes and will be handled properly.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/750&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Divide-by-Zero&lt;/h3&gt;

&lt;p&gt;Brakeman sometimes divides by zero when it performs simple arithmetic during constant folding. While this is now reported as an error (and used to be, too), someday it should be a warning instead.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/730&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Config File Changes&lt;/h3&gt;

&lt;p&gt;When looking for the &lt;code&gt;config/brakeman.yml&lt;/code&gt; configuration file, Brakeman will now look relative to the application path instead of the working directory.&lt;/p&gt;

&lt;p&gt;Additionally, the &lt;code&gt;SafeYAML&lt;/code&gt; gem is used to prevent code execution for those running Brakeman against untrusted code.&lt;/p&gt;

&lt;p&gt;(changes &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/725&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/741&quot;&gt;here&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;c01f07ccc2490d0421e5974499c57f519aa371bfab5d25ba3b224e7ae9e2c415  brakeman-3.1.2.gem
d820c872cbe7bc8452c9bd8bd46d990ff1c0d53ee621c09f1997270fc978f783  brakeman-min-3.1.2.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs fixed in this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter, joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;, or hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.1.1 Released</title>
    <link href="http://brakemanscanner.org/blog/2015/09/23/brakeman-3-dot-1-1-released/"/>
    <updated>2015-09-23T08:11:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2015/09/23/brakeman-3-dot-1-1-released</id>
    <content type="html">&lt;p&gt;This release includes two new checks and a number of bug fixes.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.1.0&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add check for user input in session keys&lt;/li&gt;
&lt;li&gt;Add optional check for use of MD5 and SHA1&lt;/li&gt;
&lt;li&gt;Fix absolute paths for Windows (&lt;a href=&quot;https://github.com/spcoder&quot;&gt;Cody Frederick&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Allow searching call index methods by regex (&lt;a href=&quot;https://github.com/aianus&quot;&gt;Alex Ianus&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Consider &lt;code&gt;j&lt;/code&gt;/&lt;code&gt;escape_javascript&lt;/code&gt; safe inside Haml JavaScript blocks (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/708&quot;&gt;#708&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Better Haml processing of &lt;code&gt;find_and_preserve&lt;/code&gt; calls&lt;/li&gt;
&lt;li&gt;Fix chained assignment&lt;/li&gt;
&lt;li&gt;Treat &lt;code&gt;a.try(&amp;amp;:b)&lt;/code&gt; like &lt;code&gt;a.b()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add more Arel methods to be ignored in SQL (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/711&quot;&gt;#711&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning when linking to decorated models (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/683&quot;&gt;#683&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Support newer terminal-table releases (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/709&quot;&gt;#709&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Session Manipulation Check&lt;/h3&gt;

&lt;p&gt;As suggested by &lt;a href=&quot;https://twitter.com/joernchen&quot;&gt;Joernchen&lt;/a&gt;, Brakeman will now look for user input in session keys which can lead to session manipulation.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/720&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Optional Check for Weak Hashes&lt;/h3&gt;

&lt;p&gt;An optional check to look for use of MD5 and SHA1 has been added to this release. Run with &lt;code&gt;-t WeakHash&lt;/code&gt; to use just this optional check or &lt;code&gt;-A&lt;/code&gt; to run all checks.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/722&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Windows Paths&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/spcoder&quot;&gt;Cody Frederick&lt;/a&gt; fixed an issue with determining absolute paths on Windows.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/714&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Search for Methods by Regex&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/aianus&quot;&gt;Alex Ianus&lt;/a&gt; re-introduced the ability to search the CallIndex with regular expressions for methods:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tracker.find_call(method: /_something$/)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/710&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Haml Processing&lt;/h3&gt;

&lt;p&gt;Haml users may have noticed warnings with &lt;code&gt;find_and_preserve(Haml::Filters::Javascript.render_with_options(...))&lt;/code&gt; in them. This has been fixed so &lt;code&gt;find_and_preserve&lt;/code&gt; is treated as though it just passes through its arguments. Calls to &lt;code&gt;render_with_options&lt;/code&gt; will be treated as unescaped output.&lt;/p&gt;

&lt;p&gt;Along with this change, &lt;code&gt;j&lt;/code&gt; and &lt;code&gt;escape_javascript&lt;/code&gt; will be considered safe inside &lt;code&gt;:javascript&lt;/code&gt; filters in Haml.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/716&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Chained Assignment&lt;/h3&gt;

&lt;p&gt;Chained assignments like &lt;code&gt;a = b = c = 1&lt;/code&gt; will now be handled correctly. This fixes &lt;a href=&quot;https://stackoverflow.com/questions/11314450/how-to-secure-link-to-variable-cross-site-scripting-vulnerabilities&quot;&gt;a very old issue from 2012&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/718&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Trying More&lt;/h3&gt;

&lt;p&gt;While Brakeman already treated &lt;code&gt;a.try(:b)&lt;/code&gt; like &lt;code&gt;a.b()&lt;/code&gt;, there is a surprising amount of code which does &lt;code&gt;a.try(&amp;amp;:b)&lt;/code&gt;. This is totally unncessary, but Brakeman now handles it as well.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/717&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;More Arel Whitelisting&lt;/h3&gt;

&lt;p&gt;A number of Arel methods have been whitelisted to avoid warning about them inside SQL query building.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/719&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Decorated Models in Links&lt;/h3&gt;

&lt;p&gt;If the Draper gem is used, Brakeman will ignore calls to &lt;code&gt;decorate&lt;/code&gt; in &lt;code&gt;link_to&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/721&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;terminal-table&lt;/h3&gt;

&lt;p&gt;Newer &lt;a href=&quot;https://github.com/tj/terminal-table&quot;&gt;terminal-table&lt;/a&gt; releases are supported now and the dependency has been relaxed.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/712&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cfd1840116c20b0b8932720fdaac09dd4e47091a  brakeman-3.1.1.gem
603389da732d307a014af445a1f312415b65a682  brakeman-min-3.1.1.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter, joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;, or hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.1.0 Released</title>
    <link href="http://brakemanscanner.org/blog/2015/08/30/brakeman-3-dot-1-0-released/"/>
    <updated>2015-08-30T21:46:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2015/08/30/brakeman-3-dot-1-0-released</id>
    <content type="html">&lt;p&gt;There are several changes in this release which may affect consumers of the JSON report as well as anyone relying on the ignore configuration file. Please try out &lt;a href=&quot;https://gist.github.com/presidentbeef/52d5cce0fd26b901179e&quot;&gt;this script&lt;/a&gt; to migrate ignore configurations.&lt;/p&gt;

&lt;p&gt;Additionally, some dependencies have been updated to versions no longer supporting Ruby 1.8. As a consequence, Brakeman no longer runs &quot;out of the box&quot; on Ruby 1.8, although you may be able to use the &lt;code&gt;brakeman-min&lt;/code&gt; gem. No more attempts will be made to support running on Ruby 1.8 in future releases. Please note that does not mean Ruby 1.8 code cannot be analyzed; that still works fine.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.0.5&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Update dependencies to Ruby 1.8 incompatible versions&lt;/li&gt;
&lt;li&gt;Update render path information in JSON reports&lt;/li&gt;
&lt;li&gt;Remove renaming of several &lt;code&gt;Sexp&lt;/code&gt; nodes&lt;/li&gt;
&lt;li&gt;Treat &lt;code&gt;html_safe&lt;/code&gt; like &lt;code&gt;raw&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use railties version if rails gem is missing (&lt;a href=&quot;https://github.com/lucasmazza&quot;&gt;Lucas Mazza&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Warn about unverified SSL mode in &lt;code&gt;Net::HTTP.start&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Expand XSS safe methods&lt;/li&gt;
&lt;li&gt;Avoid warning on path creation methods in &lt;code&gt;link_to&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add support for &lt;code&gt;gems.rb&lt;/code&gt;/&lt;code&gt;gems.locked&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/705&quot;&gt;#705&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix low confidence XSS warning code&lt;/li&gt;
&lt;li&gt;Avoid duplicate &lt;code&gt;eval&lt;/code&gt; warnings&lt;/li&gt;
&lt;li&gt;Convert YAML config keys to symbols (&lt;a href=&quot;https://github.com/KarlGl&quot;&gt;Karl Glaser&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Ruby 1.8 Incompatibility&lt;/h3&gt;

&lt;p&gt;Ruby 1.8.7 has been unsupported by the Ruby core team for over a year now (and that was after it had a six month extension). Several libraries Brakeman depends on have stopped supporting Ruby 1.8. Unfortunately, there is no way to specify depending on different gem versions for different Ruby versions. This left Brakeman in a difficult place - use old libraries (and cause conflicts in Gemfiles...), use new libraries (and lose 1.8 support), or don't declare dependencies (and force users to install dependencies themselves). In the end, it seems most people are okay with dropping Ruby 1.8 support.&lt;/p&gt;

&lt;p&gt;That being said, Brakeman 3.1.0 should run fine on Ruby 1.8 if dependencies are set up manually to be compatible.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/684&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Render Path Improvements&lt;/h3&gt;

&lt;p&gt;Previously, render paths were arrays of strings. The strings represented the locations of calls to &lt;code&gt;render&lt;/code&gt; (implicit or explicit), either in the form &lt;code&gt;&amp;lt;Controller&amp;gt;#&amp;lt;method&amp;gt;&lt;/code&gt; or &lt;code&gt;Template:&amp;lt;template/path&amp;gt;&lt;/code&gt;. While the information was somewhat useful to humans, it was not easily manipulated by computers and it was difficult to link the strings back to application code.&lt;/p&gt;

&lt;p&gt;Now, render paths are arrays of hashes. The hash has a &lt;code&gt;type&lt;/code&gt; key with a value of either &lt;code&gt;controller&lt;/code&gt; or &lt;code&gt;template&lt;/code&gt;. For controllers, the hash includes &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;method&lt;/code&gt;, &lt;code&gt;line&lt;/code&gt;, and &lt;code&gt;file&lt;/code&gt;. For templates, the hash includes &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;line&lt;/code&gt;, and &lt;code&gt;file&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[
  {
    &quot;type&quot;: &quot;controller&quot;,
    &quot;class&quot;: &quot;ProductsController&quot;,
    &quot;method&quot;: &quot;create&quot;,
    &quot;line&quot;: 50,
    &quot;file&quot;: &quot;app/controllers/products_controller.rb&quot;
  },
  {
    &quot;type&quot;: &quot;template&quot;,
    &quot;name&quot;: &quot;products/new&quot;,
    &quot;line&quot;: 2,
    &quot;file&quot;: &quot;app/views/products/new.html.erb&quot;
  }
]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Implicit renders from controller actions point to the line at the end of the method.&lt;/p&gt;

&lt;p&gt;Rendered templates in JSON reports used to include the render location as well. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&quot;location&quot;: {
  &quot;type&quot;: &quot;template&quot;,
  &quot;template&quot;: &quot;home/index (HomeController#index)&quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Since this information is redundant with the render path, it has been removed.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/702&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;S-Expression Names&lt;/h3&gt;

&lt;p&gt;Starting a long time ago, Brakeman rewrote several s-expression names for no reason other than clarity (for example, &lt;code&gt;dstr&lt;/code&gt; becomes &lt;code&gt;string_interp&lt;/code&gt;). However, not all nodes were changed, leading to code that must check for both the original name from RubyParser and Brakeman's name. This leads to messy code and subtle bugs.&lt;/p&gt;

&lt;p&gt;The following node names were removed: &lt;code&gt;string_interp&lt;/code&gt;, &lt;code&gt;string_eval&lt;/code&gt;, &lt;code&gt;methdef&lt;/code&gt;, &lt;code&gt;selfdef&lt;/code&gt;, &lt;code&gt;call_with_block&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;While this seems like a silly internal change, it will unfortunately change any fingerprints containing these node types. A &lt;a href=&quot;https://gist.github.com/presidentbeef/52d5cce0fd26b901179e&quot;&gt;quick script is available&lt;/a&gt; to migrate ignore files without having to manually update the fingerprints.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/701&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;html_safe&lt;/h3&gt;

&lt;p&gt;As we hopefully all know now, &lt;code&gt;html_safe&lt;/code&gt; is not safe, it marks a string so it is &lt;em&gt;not&lt;/em&gt; escaped when output in a template. Since this is essentially the same as calling &lt;code&gt;raw&lt;/code&gt; on a string, Brakeman will treat them both as unescaped output.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/675&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Use railties Version&lt;/h3&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/lucasmazza&quot;&gt;Lucas Mazza&lt;/a&gt;, if an application depends on &lt;code&gt;railties&lt;/code&gt; instead of &lt;code&gt;rails&lt;/code&gt;, Brakeman will now use the gem version of &lt;code&gt;railties&lt;/code&gt; as the Rails version.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/695/files&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SSL Verify Mode&lt;/h3&gt;

&lt;p&gt;As suggested by &lt;a href=&quot;https://github.com/gmcnaughton&quot;&gt;Gordon McNaughton&lt;/a&gt;, Brakeman now warns when SSL certificate verification is turned off in calls to &lt;code&gt;Net::HTTP.start&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/694&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Safe Methods&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;--safe-methods&lt;/code&gt; option (which only applies to XSS warnings) and &lt;code&gt;--url-safe-methods&lt;/code&gt; (which applies to values pass to &lt;code&gt;link_to&lt;/code&gt;) now work on methods that have a target. For example, &lt;code&gt;--url-safe-methods this_is_safe&lt;/code&gt; will ignore &lt;code&gt;link_to util.this_is_safe(params[:x])&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/674&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;More Safe Methods&lt;/h3&gt;

&lt;p&gt;Brakeman warns about user input in the href parameter of &lt;code&gt;link_to&lt;/code&gt; because it is possible to pass in a string starting with &lt;code&gt;javascript:&lt;/code&gt;, which will execute the XSS payload when the victim clicks on it. However, it will no longer warn about methods that look like path helpers or URL generation methods. It will still warn about URL methods on models, since those may be direct user input.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/674&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;gems.rb/gems.locked&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;gems.rb&lt;/code&gt;/&lt;code&gt;gems.locked&lt;/code&gt; are alternative names for &lt;code&gt;Gemfile&lt;/code&gt;/&lt;code&gt;Gemfile.lock&lt;/code&gt;. Brakeman now supports either pair.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/705&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Weak Confidence XSS Warnings&lt;/h3&gt;

&lt;p&gt;A small bug caused weak confidence XSS warnings to have a warning code of &lt;code&gt;5&lt;/code&gt; (which is for unescaped JSON) instead of &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/commit/9fec336e7cbbbb74add9ef9c6c90c65efa0ebcc7&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Duplicate Eval Warnings&lt;/h3&gt;

&lt;p&gt;There should now be fewer duplicate warnings about dangerous calls to &lt;code&gt;eval&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/670/files&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Configuration Keys&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/KarlGl&quot;&gt;Karl Glaser&lt;/a&gt; added a change so Brakeman configuration files may use string or symbol keys in the YAML file. However, it is recommended to use &lt;code&gt;brakeman -C&lt;/code&gt; to generate configurations automatically, because writing YAML by hand is annoying.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/696&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Internal Changes&lt;/h3&gt;

&lt;p&gt;Internally, most of the information Brakeman tracks is kept in hash tables. This is changing, starting with the addition of &lt;code&gt;Controller&lt;/code&gt;, &lt;code&gt;Model&lt;/code&gt;, &lt;code&gt;Template&lt;/code&gt;, and &lt;code&gt;Config&lt;/code&gt; classes.&lt;/p&gt;

&lt;p&gt;Unfortunately, this will probably break any code that relies on Brakeman's internals (such as custom checks).&lt;/p&gt;

&lt;p&gt;Fortunately, in almost all cases it will simplify code and in many cases it just means changing a hash access (like &lt;code&gt;template[:name]&lt;/code&gt;) to a method call (&lt;code&gt;template.name&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/690&quot;&gt;the pull request&lt;/a&gt; for examples.&lt;/p&gt;

&lt;p&gt;Also note this is just the beginning of these internal changes...sorry! Hopefully this leads to improvements and makes it easier to write Brakeman code.&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;236af597e5cbcc0e647c02c4087ceb5965510435  brakeman-3.1.0.gem
fe06faf67e781c4c4dc5ee362918ef2dfd8e1ce2  brakeman-min-3.1.0.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.0.5 Released</title>
    <link href="http://brakemanscanner.org/blog/2015/06/19/brakeman-3-dot-0-5-released/"/>
    <updated>2015-06-19T18:09:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2015/06/19/brakeman-3-dot-0-5-released</id>
    <content type="html">&lt;p&gt;And this is why you don't rush out releases.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.0.4&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fix check for CVE-2015-3227 (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/667&quot;&gt;#667&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Fix CVE-2015-3227 Check&lt;/h3&gt;

&lt;p&gt;Includes information that Rails 3.2.22 is the fix version for anything before Rails 4.0. Fixes warning message when exact Rails version cannot be determined. Fixes link URL to point to the CVE announcement.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/668&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;b78e11b745128ed7f9acd5d0c4f5e0e3a81f4d07  brakeman-min-3.0.5.gem
c62cc782595d4995aa385b6bd96c2485ac932077  brakeman-3.0.5.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.0.4 Released</title>
    <link href="http://brakemanscanner.org/blog/2015/06/18/brakeman-3-dot-0-4-released/"/>
    <updated>2015-06-18T10:50:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2015/06/18/brakeman-3-dot-0-4-released</id>
    <content type="html">&lt;p&gt;This is a small release prompted by Tuesday's CVE announcements. New checks for the CVEs directly in Rails have been added, and can also test for the suggested workarounds. Please consider using &lt;a href=&quot;https://github.com/rubysec/bundler-audit&quot;&gt;bundler-audit&lt;/a&gt; for detecting known vulnerable versions of gems, as Brakeman has only limited coverage.&lt;/p&gt;

&lt;p&gt;Note this release also upgrades the RubyParser dependency. The latest RubyParser has several bug fixes and initial support for new Ruby 2.2 syntax.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.0.3&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add check for CVE-2015-3226 (XSS via JSON keys)&lt;/li&gt;
&lt;li&gt;Add check for CVE-2015-3227 (XML DoS)&lt;/li&gt;
&lt;li&gt;Treat &lt;code&gt;&amp;lt;%==&lt;/code&gt; as unescaped output (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/661&quot;&gt;#661&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Update &lt;code&gt;ruby_parser&lt;/code&gt; dependency to 3.7.0&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Cross Site Scripting in JSON&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/7VlB_pck3hU/3QZrGIaQW6cJ&quot;&gt;CVE-2015-3226&lt;/a&gt; is an issue with converting hashes to JSON. The keys do not properly escape HTML entities, leading to potential cross site scripting vulnerabilities. Brakeman will warn unless the workaround is included in an initializer (essentially verbatim). The warning is high confidence if there is evidence of explicitly converting values to JSON, otherwise medium.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/665&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;XML Denial of Service&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/bahr2JLnxvk/x4EocXnHPp8J&quot;&gt;CVE-2015-3227&lt;/a&gt; is a potential denial of service when parsing deeply nested XML requests. Brakeman will warn about this unless there is an initializer changing the XML parser as described in the CVE. Currently it looks for either &lt;code&gt;LibXML&lt;/code&gt; or &lt;code&gt;Nokogiri&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/666&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Double Equals is Unescaped Output&lt;/h3&gt;

&lt;p&gt;Brakeman will now treat &lt;code&gt;&amp;lt;%== x %&amp;gt;&lt;/code&gt; in ERB templates as unescaped output.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/663&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bf6ae72a0b516ecf65b9165d07e86259ef9fa5d3  brakeman-3.0.4.gem
c1c2ea5402d8a89fe4a645947ec324d0603d3976  brakeman-min-3.0.4.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.0.3 Released</title>
    <link href="http://brakemanscanner.org/blog/2015/04/30/brakeman-3-dot-0-3-released/"/>
    <updated>2015-04-30T09:50:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2015/04/30/brakeman-3-dot-0-3-released</id>
    <content type="html">&lt;p&gt;This is mostly a bug fix release, but does introduce a new warning code for when &lt;code&gt;protect_from_forgery&lt;/code&gt; is not set to raise exceptions in Rails 4.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.0.2&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Warn about &lt;code&gt;protect_from_forgery&lt;/code&gt; without exceptions (&lt;a href=&quot;https://github.com/oreoshake&quot;&gt;Neil Matatall&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add Rake task to exit with error code on warnings (&lt;a href=&quot;https://github.com/masarakki&quot;&gt;masarakki&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Ignore &lt;code&gt;quoted_table_name&lt;/code&gt; in SQL (&lt;a href=&quot;https://github.com/sobrinho&quot;&gt;Gabriel Sobhrinho&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Ignore more Arel methods in SQL (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/604&quot;&gt;#604&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Warn about RCE and file access with &lt;code&gt;open&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Handle &lt;code&gt;Array#include?&lt;/code&gt; guard conditionals (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/604&quot;&gt;#604&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Handle lambdas as filters&lt;/li&gt;
&lt;li&gt;Do not ignore targets of &lt;code&gt;to_s&lt;/code&gt; in SQL (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/638&quot;&gt;#638&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;New CSRF Warning&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/oreoshake&quot;&gt;Neil Matatall&lt;/a&gt; has added a warning for Rails 4 applications that do not pass the &lt;code&gt;with: :exception&lt;/code&gt; option to &lt;code&gt;protect_from_forgery&lt;/code&gt;. The default behavior of clearing out the session (but still processing the request) has lead to vulnerabilities in some applications. GitHub &lt;a href=&quot;https://bounty.github.com/researchers/LukasReschke.html&quot;&gt;recently awarded a bug bounty&lt;/a&gt; for a vulnerability caused by this behavior.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/648&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Additional Rake Task&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/masarakki&quot;&gt;Masarakki&lt;/a&gt; added a Rake task that will exit with an error code if any warnings are found (like &lt;code&gt;brakeman -z&lt;/code&gt;). The task can be run with &lt;code&gt;rake brakeman:check&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;However, please note the use of Rake tasks to run Brakeman is discouraged, since it loads the entire Rails application which is unnecessary and may cause conflicts with Brakeman dependencies.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/637&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Reduce SQL Injection False Positives&lt;/h3&gt;

&lt;p&gt;A patch from &lt;a href=&quot;https://github.com/sobrinho&quot;&gt;Gabriel Sobhrinho&lt;/a&gt; removes warnings about &lt;code&gt;quoted_table_name&lt;/code&gt; in SQL queries.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/647&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;An additional change was made to ignore more Arel methods nested inside of other queries. This should reduce many of the false positives seen with combining Arel and ActiveRecord queries.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/653&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Remote Code Execution in open()&lt;/h3&gt;

&lt;p&gt;As noted in &lt;a href=&quot;http://sakurity.com/blog/2015/02/28/openuri.html&quot;&gt;Egor Homakov's blog post&lt;/a&gt;, &lt;code&gt;open&lt;/code&gt; can actually be used to spawn new processes by starting the argument with a pipe &lt;code&gt;|&lt;/code&gt;. Brakeman will now warn about remote code execution via &lt;code&gt;open&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/643&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Simple Guard Conditions&lt;/h3&gt;

&lt;p&gt;Brakeman should now recognize guard conditions that look exactly like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if [1, 2, &quot;a&quot;, &quot;b&quot;].include? x
  do_something_dangerous_with x
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This may resolve some false positives. If you have code similar to this, please consider &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;opening an issue&lt;/a&gt; and perhaps it can be handled similarly.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/640&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Lambda Filters&lt;/h3&gt;

&lt;p&gt;Filters that use lambdas instead of blocks should now be handled correctly.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/649&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Handle to_s in SQL&lt;/h3&gt;

&lt;p&gt;Values with &lt;code&gt;to_s&lt;/code&gt; called on them were being ignored when checking for SQL injection. This has been fixed.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/639&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;170c3dd6925373b7da2e27fd1decf2957b35dc43  brakeman-3.0.3.gem
f126e305404a61e99f9ddb848996d87325d1485a  brakeman-min-3.0.3.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.0.2 Released</title>
    <link href="http://brakemanscanner.org/blog/2015/03/09/brakeman-3-dot-0-2-released/"/>
    <updated>2015-03-09T14:54:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2015/03/09/brakeman-3-dot-0-2-released</id>
    <content type="html">&lt;p&gt;This is entirely a bugfix release, no new features. However, the fixes may cause line numbers and warning fingerprints to change.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.0.1&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fix HTML reports with GitHub repos (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/624&quot;&gt;#624&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Handle processing of explictly shadowed block arguments (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/612&quot;&gt;#612&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix CSV output when there are no warnings (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/615&quot;&gt;#615&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Update &lt;code&gt;ruby_parser&lt;/code&gt; to ~&gt; 3.6.2&lt;/li&gt;
&lt;li&gt;Treat &lt;code&gt;primary_key&lt;/code&gt;, &lt;code&gt;table_name_prefix&lt;/code&gt;, &lt;code&gt;table_name_suffix&lt;/code&gt; as safe in SQL&lt;/li&gt;
&lt;li&gt;Fix using &lt;code&gt;--compare&lt;/code&gt; and &lt;code&gt;--add-checks-path&lt;/code&gt; together&lt;/li&gt;
&lt;li&gt;Alias process methods called in class scope on models&lt;/li&gt;
&lt;li&gt;Avoid warning about mass assignment with string literals&lt;/li&gt;
&lt;li&gt;Only report original regex DoS locations&lt;/li&gt;
&lt;li&gt;Report correct file for &lt;code&gt;simple_format&lt;/code&gt; usage CVE warning&lt;/li&gt;
&lt;li&gt;Ignore case value in XSS checks&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;HTML Reports with GitHub Repo&lt;/h3&gt;

&lt;p&gt;HTML reports were sometimes causing an error when linking to a GitHub repo.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/625&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Shadowed Block Arguments&lt;/h3&gt;

&lt;p&gt;There was an error handling explicitly shadowed block arguments like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;some_array.each do |item; x, y|
  # Stuff
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/613&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;CSV Output&lt;/h3&gt;

&lt;p&gt;Empty tables caused the CSV report to fail.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/616&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;RubyParser Update&lt;/h3&gt;

&lt;p&gt;Brakeman has been very behind on RubyParser versions due to a line number issue which is nearly always present in HAML templates. As a workaround, Brakeman now strips newline literals from HAML templates. While this does cause some line numbers to be off, but typically newline literals are caused by HAML formatting. Removing them allows Brakeman to use the latest RubyParser.&lt;/p&gt;

&lt;p&gt;Brakeman now requires RubyParser 3.6.2 as a minimum.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/620&quot;&gt;HAML changes&lt;/a&gt;, &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/621&quot;&gt;dependency change&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;More SQL-safe Methods&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about &lt;code&gt;primary_key&lt;/code&gt;, &lt;code&gt;table_name_prefix&lt;/code&gt;, and &lt;code&gt;table_name_suffix&lt;/code&gt; in SQL.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/635&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Compare with External Checks&lt;/h3&gt;

&lt;p&gt;Fix an issue when using &lt;code&gt;--compare&lt;/code&gt; and &lt;code&gt;--add-checks-path&lt;/code&gt; together.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/635&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Process Class-Scope Method Calls&lt;/h3&gt;

&lt;p&gt;Previously, Brakeman would process method calls at the class scope (e.g., &lt;code&gt;belongs_to&lt;/code&gt;) in models and then throw away the call. This meant the call never received data flow analysis. This was particularly noticeable when those calls involved blocks. This has been fixed and has improved results, especially where constants are used.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/634&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Mass Assignment with Literals&lt;/h3&gt;

&lt;p&gt;Brakeman no longer warns about mass assignment if the arguments are a string or symbol. In those cases it probably isn't an ActiveRecord subclass in any case.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/631&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Reduce Regex DoS Duplicates&lt;/h3&gt;

&lt;p&gt;Duplicate regular expression denial of service warnings were being reported due to data flow analysis.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/627&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;File for simple_format CVE&lt;/h3&gt;

&lt;p&gt;Warnings regarding the old &lt;code&gt;simple_format&lt;/code&gt; CVE will now point to the file where &lt;code&gt;simple_format&lt;/code&gt; was called, not the Gemfile.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/623/files&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Ignore Case Value&lt;/h3&gt;

&lt;p&gt;Do not report about XSS regarding the value used in &lt;code&gt;case&lt;/code&gt; expressions.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/619&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;87413b544b5eae0cac9f037e2b62b1fe3f0fee5e  brakeman-3.0.2.gem
cfcf3080a992ca173c64dd98fe239e8bd9bb0eaa  brakeman-min-3.0.2.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.0.1 Released</title>
    <link href="http://brakemanscanner.org/blog/2015/01/22/brakeman-3-dot-0-1-released/"/>
    <updated>2015-01-22T18:38:00-08:00</updated>
    <id>http://brakemanscanner.org/blog/2015/01/22/brakeman-3-dot-0-1-released</id>
    <content type="html">&lt;p&gt;This is a small release, but may change some fingerprints of warnings in libraries. Also, the Slim dependency has been removed due to conflicts. See below for details.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Remove Slim dependency (&lt;a href=&quot;https://github.com/cwest&quot;&gt;Casey West&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Properly process libraries (&lt;a href=&quot;https://github.com/ptoomey3&quot;&gt;Patrick Toomey&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;--add-libs-path&lt;/code&gt; for additional libraries (&lt;a href=&quot;https://github.com/ptoomey3&quot;&gt;Patrick Toomey&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Allow for controllers/models/templates in directories under &lt;code&gt;app/&lt;/code&gt; (&lt;a href=&quot;https://github.com/nealharris&quot;&gt;Neal Harris&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid &lt;code&gt;protect_from_forgery&lt;/code&gt; warning unless &lt;code&gt;ApplicationController&lt;/code&gt; inherits from &lt;code&gt;ActionController::Base&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/573&quot;&gt;#573&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Properly format command interpolation (again)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Slim Gem Dependency Removed&lt;/h3&gt;

&lt;p&gt;Since &lt;a href=&quot;https://github.com/slim-template/slim-rails/releases/tag/3.0.1&quot;&gt;Rails 4.2 requires Slim 3.0.1&lt;/a&gt; and &lt;a href=&quot;https://github.com/slim-template/slim/blob/bb7ca78c1ea9629d8b57a06fcb99c938c9d7640e/CHANGES#L8&quot;&gt;Slim 3.0 dropped support for Ruby 1.8.7&lt;/a&gt;, there is no way to satisfy dependencies for Slim, Rails 4.2, and retain support for Ruby 1.8.7 when Brakeman is added as a dependency in a &lt;code&gt;Gemfile&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The only acceptable solution is to not include Slim as a dependency at all and let users sort it out for themselves. Sorry for the unfortunate situation, but there is no way to add Brakeman to a &lt;code&gt;Gemfile&lt;/code&gt; and avoid Bundler attempting to resolve Brakeman's dependencies against the application's dependencies, despite there being no relation.&lt;/p&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/cwest&quot;&gt;Casey West&lt;/a&gt; for working through solutions for this issue.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/602&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Library Processing&lt;/h3&gt;

&lt;p&gt;Libraries were added to the call index (which meant they were scanned during checks) in the 3.0.0 release, but there were still not being processed like most other code. This led to some checks not finding issues they should have. &lt;a href=&quot;https://github.com/ptoomey3&quot;&gt;Patrick Toomey&lt;/a&gt; pointed this out and contributed a fix.&lt;/p&gt;

&lt;p&gt;This change may affect existing warning fingerprints for warnings in libraries. Apologies for the inconvenience.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/605&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Allow Additional Library Paths&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ptoomey3&quot;&gt;Patrick Toomey&lt;/a&gt; also added a new option &lt;code&gt;--add-libs-path&lt;/code&gt; to treat more paths as if they were in &lt;code&gt;lib/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/606&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Scan Application Subdirectories&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nealharris&quot;&gt;Neal Harris&lt;/a&gt; contributed a change to support applications with multiple applications under &lt;code&gt;app/&lt;/code&gt;, such as &lt;code&gt;app/cool_team/controllers/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/607&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Avoid CSRF Warning for APIs&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about missing &lt;code&gt;protect_from_forgery&lt;/code&gt; if &lt;code&gt;ApplicationController&lt;/code&gt; does not inherit from &lt;code&gt;ActionController::Base&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/573&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Command Interpolation Format Fix&lt;/h3&gt;

&lt;p&gt;Previous release had an incomplete fix for this. There should be no impact to warning fingerprints.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/608&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.0.0 Released</title>
    <link href="http://brakemanscanner.org/blog/2015/01/02/brakeman-3-dot-0-0-released/"/>
    <updated>2015-01-02T17:09:00-08:00</updated>
    <id>http://brakemanscanner.org/blog/2015/01/02/brakeman-3-dot-0-0-released</id>
    <content type="html">&lt;p&gt;This is a major version release of Brakeman which introduces some backwards-incompatible changes. Very likely this release will cause many changes in reports, including fingerprints on existing warnings.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 2.6.3&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--exit-on-warn --compare&lt;/code&gt; only returns error code on new warnings (&lt;a href=&quot;https://github.com/jeffyip&quot;&gt;Jeff Yip&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Sort warnings by fingerprint in JSON report (&lt;a href=&quot;https://github.com/jeffyip&quot;&gt;Jeff Yip&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;CVEs report correct line and file name (Gemfile/Gemfile.lock) (&lt;a href=&quot;https://github.com/pwnetrationguru&quot;&gt;Rob Fletcher&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Change &lt;code&gt;--separate-models&lt;/code&gt; to be the default&lt;/li&gt;
&lt;li&gt;Local variables are no longer formatted as &lt;code&gt;(local var)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Actually skip skipped before filters&lt;/li&gt;
&lt;li&gt;Remove &quot;fake filters&quot; from warning fingerpints&lt;/li&gt;
&lt;li&gt;Index calls in &lt;code&gt;lib/&lt;/code&gt; files&lt;/li&gt;
&lt;li&gt;Handle symmetric multiple assignment&lt;/li&gt;
&lt;li&gt;Do not branch for self attribute assignment &lt;code&gt;x = x.y&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/552&quot;&gt;#552&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Move Symbol DoS to optional checks&lt;/li&gt;
&lt;li&gt;Add check for cross site scripting via inline renders&lt;/li&gt;
&lt;li&gt;Add check for CVE-2014-7829&lt;/li&gt;
&lt;li&gt;Fix parsing of &lt;code&gt;&amp;lt;%==&lt;/code&gt; in ERB&lt;/li&gt;
&lt;li&gt;Fix output format of command interpolation&lt;/li&gt;
&lt;li&gt;Fix CVE for CVE-2011-2932&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Exit Code When Comparing&lt;/h3&gt;

&lt;p&gt;When using &lt;code&gt;--exit-on-warn --compare&lt;/code&gt;, Brakeman will only return a non-zero exit code when there are new warnings. Previous behavior was to return non-zero exit code if there were any differences between reports (including fixed warnings).&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/588&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Sort Warnings in JSON Report&lt;/h3&gt;

&lt;p&gt;Warnings are now sorted by their fingerprint in the JSON report to provide more stable output.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/587&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Report Line Numbers for CVEs&lt;/h3&gt;

&lt;p&gt;Previously, CVE warnings typically pointed to &lt;code&gt;Gemfile&lt;/code&gt; with no line number information. Now CVEs should point to &lt;code&gt;Gemfile&lt;/code&gt; or &lt;code&gt;Gemfile.lock&lt;/code&gt; as appropriate and include the line number for the vulnerable gem dependency.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/557&quot;&gt;changes&lt;/a&gt; and &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/569&quot;&gt;more changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Mass Assignment Warnings Default to per Model&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;--separate-models&lt;/code&gt; option is now on by default. This means warnings about missing &lt;code&gt;attr_accessible&lt;/code&gt; will be reported for each model instead of rolling them into a single warning.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/586&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Local Variable Format&lt;/h3&gt;

&lt;p&gt;Local variables are no longer formatted as &lt;code&gt;(local var)&lt;/code&gt; in warning output.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/594&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Skip Skipped Filters&lt;/h3&gt;

&lt;p&gt;Before filters which are skipped are now actually skipped during data flow analysis.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/592&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Fake Filter Change&lt;/h3&gt;

&lt;p&gt;Before filters defined as blocks (instead of methods) are internally represented as methods with random names prepended by &lt;code&gt;fake_filter&lt;/code&gt;. Since the method names were not stable, any warnings inside the filters would have inconsistent fingerprints. Now warnings inside of before filters will always be reported with &lt;code&gt;before_filter&lt;/code&gt; as the method name.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/572&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Index Calls in Libraries&lt;/h3&gt;

&lt;p&gt;Classes defined in &lt;code&gt;lib/&lt;/code&gt; files will now be included in the method call index and searched for vulnerabilities. As these files were already being processed, this has not added any significant overhead in testing.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/571&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Handle Multiple Assignment&lt;/h3&gt;

&lt;p&gt;Simple symmetric multiple assignments (also called &quot;parallel assignment&quot;) like &lt;code&gt;x, y = 1, 2&lt;/code&gt; are now handled like normal assignments.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/577&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Avoid Branching on Self Assignment&lt;/h3&gt;

&lt;p&gt;Brakeman no longer creates new union values for self assignment of attributes.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/578&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Symbol DoS is an Optional Check&lt;/h3&gt;

&lt;p&gt;In this release the check for denial of service via symbol creation has been changed to an optional check. Memory exhaustion by creating lots of new symbols is an unlikely attack and easily mitigated by having at least two web servers. Additionally&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/570&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Warn on Inline XSS&lt;/h3&gt;

&lt;p&gt;Unescaped user input in &lt;code&gt;render :text&lt;/code&gt; or &lt;code&gt;render :inline&lt;/code&gt; should now generate warnings.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/598&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;CVE-2014-7829&lt;/h3&gt;

&lt;p&gt;Brakeman will warn about &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/23fiuwb1NBA/MQVM1-5GkPMJ&quot;&gt;CVE-2014-7829&lt;/a&gt; (file existence disclosure) for applications using affected versions of Rails and setting &lt;code&gt;config.serve_static_assets = true&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/600&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;ERB Parsing Fix&lt;/h3&gt;

&lt;p&gt;Parsing &lt;code&gt;&amp;lt;%==&lt;/code&gt; in ERB templates no longer causes errors.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/589&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Command Interpolation Format Fix&lt;/h3&gt;

&lt;p&gt;Brakeman was formatting&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;`#{x}`
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;as&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;`x`
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This has been fixed.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/596&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;CVE-2011-2932&lt;/h3&gt;

&lt;p&gt;The ancient CVE-2011-2932 was being mis-reported as CVE-2011-2931. Hopefully this affects no one.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/575&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Certificate Update&lt;/h3&gt;

&lt;p&gt;The certificate used to sign the Brakeman gem expired in December. A new certificate is available &lt;a href=&quot;https://raw.githubusercontent.com/presidentbeef/brakeman/master/brakeman-public_cert.pem&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This command can be used to add the new certificate:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem cert --add &amp;lt;(curl -Ls https://raw.github.com/presidentbeef/brakeman/master/brakeman-public_cert.pem)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;4180238f8de503e7ad0f2ca952ea38ccc1c6530b  brakeman-3.0.0.gem
b5cefd6f14edb57f12d1fe9fcc0fb24e05a05aaf  brakeman-min-3.0.0.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 2.6.3 Released</title>
    <link href="http://brakemanscanner.org/blog/2014/10/13/brakeman-2-dot-6-3-released/"/>
    <updated>2014-10-13T16:03:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2014/10/13/brakeman-2-dot-6-3-released</id>
    <content type="html">&lt;p&gt;This is mostly a bug fix release, but does include new support for optional checks along with an optional check for unscoped calls to &lt;code&gt;find&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 2.6.2&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add framework for optional checks&lt;/li&gt;
&lt;li&gt;Add optional check for unscoped find queries (&lt;a href=&quot;https://github.com/mastahyeti&quot;&gt;Ben Toews&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix stack overflow for cycles in class ancestors (&lt;a href=&quot;https://github.com/jeffrafter&quot;&gt;Jeff Rafter&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix stack overflow in &lt;code&gt;ProcessHelper#class_name&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/553&quot;&gt;#553&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Whitelist &lt;code&gt;exists&lt;/code&gt; arel method from SQL injection check&lt;/li&gt;
&lt;li&gt;Avoid warning about Symbol DoS on safe parameters as method targets&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Optional Checks&lt;/h3&gt;

&lt;p&gt;Brakeman now supports loading checks that are not run by default. These &quot;nondefault&quot; checks may have high false positive rates or introduce significant slowdowns. Optional checks should be treated as experimental and may experience more breaking changes than default checks.&lt;/p&gt;

&lt;p&gt;To run &lt;em&gt;all&lt;/em&gt; checks, use &lt;code&gt;-A&lt;/code&gt;. To list only the optional checks, try &lt;code&gt;--optional-checks&lt;/code&gt;. Optional checks are also listed in &lt;code&gt;--checks&lt;/code&gt;. As usual, checks may be specified using &lt;code&gt;-t&lt;/code&gt; or &lt;code&gt;--test&lt;/code&gt;. At this time there is no way to easily run the default checks plus some optional checks.&lt;/p&gt;

&lt;p&gt;On the code side, optional checks are the same except &lt;code&gt;Brakeman::Checks.add self&lt;/code&gt; becomes &lt;code&gt;Brakeman::Checks.add_optional self&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/555&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Unscoped Queries&lt;/h3&gt;

&lt;p&gt;The first optional check to be added to Brakeman comes from &lt;a href=&quot;https://github.com/mastahyeti&quot;&gt;Ben Toews&lt;/a&gt;. This check looks for calls to &lt;code&gt;find&lt;/code&gt; (or similar methods) directly on models that have a &lt;code&gt;belongs_to&lt;/code&gt; relationship.&lt;/p&gt;

&lt;p&gt;As this is an optional check, use &lt;code&gt;-A&lt;/code&gt; to include it in a scan or &lt;code&gt;-t UnscopedFind&lt;/code&gt; to run it by itself.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/469&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Fix Loops in Class Ancestors&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jeffrafter&quot;&gt;Jeff Rafter&lt;/a&gt; added a fix for stack overflows (infinite loops) when a class has (or appears to have) a cycle in its superclasses.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/543&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Fix Stack Overflow&lt;/h3&gt;

&lt;p&gt;This release fixes an issue with another infinite loop when looking up the class name in a self-referential variable name, which comes up in some situations. Fixing this bug also fixed some XSS false positives for safe model attribute methods (like &lt;code&gt;id&lt;/code&gt;) but unfortunately also revealed some dynamic render false positives.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/560&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Whitelist Arel Method&lt;/h3&gt;

&lt;p&gt;Brakeman does not warn on most uses of Arel, but was warning about SQL injection from the &lt;code&gt;exists&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/566&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Less Symbol DoS&lt;/h3&gt;

&lt;p&gt;Brakeman should no longer warn about Symbol DoS when symbolizing &lt;code&gt;params[:controller]&lt;/code&gt; and &lt;code&gt;params[:action]&lt;/code&gt; even when there are intermediate method calls, like &lt;code&gt;params[:action].to_s.to_sym&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/564&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ceb689e3a6efd7e28483828de3441ec1fad501c1  brakeman-2.6.3.gem
334a7820c05bfeb31e0e9d8123f45daef64eb102  brakeman-min-2.6.3.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman is Four Years Old!</title>
    <link href="http://brakemanscanner.org/blog/2014/08/27/brakeman-is-four-years-old/"/>
    <updated>2014-08-27T02:41:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2014/08/27/brakeman-is-four-years-old</id>
    <content type="html">&lt;p&gt;Brakeman was first &lt;a href=&quot;https://github.com/presidentbeef/brakeman/commit/cd1663fb22bbe2e1097bac8f9ee96fcdadc07fd2&quot;&gt;publicly released&lt;/a&gt; four years ago today!&lt;/p&gt;

&lt;p&gt;In those four years, Brakeman has gradually become a widely-used static analysis security tool for Ruby on Rails, leaving other web frameworks jealous.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p&gt;Is there something like Rails’ brakeman gem (automated security checks) for Django?&lt;/p&gt;&amp;mdash; Fabio Akita (@AkitaOnRails) &lt;a href=&quot;https://twitter.com/AkitaOnRails/statuses/409037162987155457&quot;&gt;December 6, 2013&lt;/a&gt;&lt;/blockquote&gt;


&lt;script async src=&quot;http://brakemanscanner.org//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;




&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://twitter.com/nodesecurity&quot;&gt;@nodesecurity&lt;/a&gt; do you know of an equivalent module in &lt;a href=&quot;https://twitter.com/hashtag/nodejs?src=hash&quot;&gt;#nodejs&lt;/a&gt; to the &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; gem?&lt;/p&gt;&amp;mdash; Erik Isaksen (@eisaksen) &lt;a href=&quot;https://twitter.com/eisaksen/statuses/423965742883950592&quot;&gt;January 16, 2014&lt;/a&gt;&lt;/blockquote&gt;


&lt;script async src=&quot;http://brakemanscanner.org//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;




&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p&gt;Is there something like &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; that would check security of an Ubuntu server? /cc &lt;a href=&quot;https://twitter.com/roidrage&quot;&gt;@roidrage&lt;/a&gt; &lt;a href=&quot;https://twitter.com/zuzur&quot;&gt;@zuzur&lt;/a&gt; &lt;a href=&quot;https://twitter.com/envygeeks&quot;&gt;@envygeeks&lt;/a&gt; &lt;a href=&quot;https://twitter.com/postmodern_mod3&quot;&gt;@postmodern_mod3&lt;/a&gt; &lt;a href=&quot;https://twitter.com/gcouprie&quot;&gt;@gcouprie&lt;/a&gt;&lt;/p&gt;&amp;mdash; Thibaut Barrère (@thibaut_barrere) &lt;a href=&quot;https://twitter.com/thibaut_barrere/statuses/302394306277285889&quot;&gt;February 15, 2013&lt;/a&gt;&lt;/blockquote&gt;


&lt;script async src=&quot;http://brakemanscanner.org//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


&lt;p&gt;Brakeman is used in all kinds of organizations, from hobby projects to open source applications to start-ups to large corporations. If your organization uses Brakeman, &lt;a href=&quot;http://brakemanscanner.org/brakeman_users/&quot;&gt;please consider being listed&lt;/a&gt;!&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p&gt;congrats to the @brakemanscanner project on their 1.0 release today, we appreciate your work within &lt;a href=&quot;https://twitter.com/twitter&quot;&gt;@twitter&lt;/a&gt; &lt;a href=&quot;http://t.co/SHjQM5k2&quot;&gt;http://t.co/SHjQM5k2&lt;/a&gt;&lt;/p&gt;&amp;mdash; Twitter Open Source (@TwitterOSS) &lt;a href=&quot;https://twitter.com/TwitterOSS/statuses/144865822941265920&quot;&gt;December 8, 2011&lt;/a&gt;&lt;/blockquote&gt;


&lt;script async src=&quot;http://brakemanscanner.org//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


&lt;p&gt;Brakeman also helps power &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/Brakeman-as-a-Service&quot;&gt;several SaaS offerings&lt;/a&gt;!&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p&gt;Rails Security Monitor is powered by &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; which we &amp;lt;3 and contribute to. We hope fans Brakeman fans will like it: &lt;a href=&quot;http://t.co/2yI8S20l&quot;&gt;http://t.co/2yI8S20l&lt;/a&gt;&lt;/p&gt;&amp;mdash; Bryan Helmkamp (@brynary) &lt;a href=&quot;https://twitter.com/brynary/statuses/301070119176642560&quot;&gt;February 11, 2013&lt;/a&gt;&lt;/blockquote&gt;


&lt;script async src=&quot;http://brakemanscanner.org//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


&lt;p&gt;Did you know Brakeman even won a Ruby award?&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p&gt;Thanks &lt;a href=&quot;https://twitter.com/yukihiro_matz&quot;&gt;@yukihiro_matz&lt;/a&gt; and other judges! This is an awesome trophy and I&amp;#39;m honored to receive it. &lt;a href=&quot;http://t.co/Dz1W8b1qof&quot;&gt;pic.twitter.com/Dz1W8b1qof&lt;/a&gt;&lt;/p&gt;&amp;mdash; Justin Collins (@presidentbeef) &lt;a href=&quot;https://twitter.com/presidentbeef/statuses/321756142449598464&quot;&gt;April 9, 2013&lt;/a&gt;&lt;/blockquote&gt;


&lt;script async src=&quot;http://brakemanscanner.org//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


&lt;p&gt;Because Brakeman is so old, it still supports Rails 2.3 (2009!) and Ruby 1.8.7 (2008!) while usually adding support for new releases fairly quickly, making it useful for nearly any Rails application. If it doesn't work for you - &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;please file an issue&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Many thanks to the many people who have contributed to Brakeman. All contributions - patches, bug reports, documentation updates, promoting Brakeman, or even just asking questions - are sincerely appreciated. Lots of gratitude to the open source projects underlying Brakeman and their maintainers, especially &lt;a href=&quot;https://twitter.com/the_zenspider&quot;&gt;Ryan Davis&lt;/a&gt;. And a big thank you to the companies who have funded Brakeman's development!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;4 years&lt;/li&gt;
&lt;li&gt;39 contributors&lt;/li&gt;
&lt;li&gt;69 releases&lt;/li&gt;
&lt;li&gt;181 closed issues&lt;/li&gt;
&lt;li&gt;2,043 commits&lt;/li&gt;
&lt;li&gt;700,000+ gem downloads&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Here’s to four more years?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By the way - stickers have returned! Send your name and address (yes, international is fine) to &lt;a href='mail&amp;#116;o&amp;#58;st%69&amp;#99;&amp;#107;%65&amp;#37;72s&amp;#64;bra&amp;#107;&amp;#101;&amp;#109;&amp;#97;&amp;#37;&amp;#54;&amp;#69;&amp;#46;or&amp;#103;'&gt;stic&amp;#107;ers&amp;#64;brakeman&amp;#46;org&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 2.6.2 Released</title>
    <link href="http://brakemanscanner.org/blog/2014/08/18/brakeman-2-dot-6-2-released/"/>
    <updated>2014-08-18T09:15:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2014/08/18/brakeman-2-dot-6-2-released</id>
    <content type="html">&lt;p&gt;This release is mostly bug fixes and updates, but does include two new options.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 2.6.1:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add check for CVE-2014-3514&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;--add-checks-path&lt;/code&gt; option for external checks (Clint Gibler)&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;-4&lt;/code&gt; option to force Rails 4 mode&lt;/li&gt;
&lt;li&gt;Fix SQL injection detection in deep nested string building&lt;/li&gt;
&lt;li&gt;Check entire call for &lt;code&gt;send&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/523&quot;&gt;#523&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Check for .gitignore of secrets in subdirectories (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/519&quot;&gt;#519&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about symbolizing safe parameters (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/536&quot;&gt;#536&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix block statment endings in Erubis (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/518&quot;&gt;#518&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Update ruby2ruby dependency to 2.1.1&lt;/li&gt;
&lt;li&gt;Expand app path in one place instead of all over (Jeff Rafter)&lt;/li&gt;
&lt;li&gt;Fix undefined variable in controller processing error (Jason Barnabe)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Mass Assignment Bypass (CVE-2014-3514)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/M4chq5Sb540/CC1Fh0Y_NWwJ&quot;&gt;CVE-2014-3514&lt;/a&gt; describes an issue where  &lt;code&gt;create_with&lt;/code&gt; does not implement strong parameters, allowing mass assignment in Rails 4.x. For vulnerable versions, Brakeman warns about instances of &lt;code&gt;create_with&lt;/code&gt; or a generic warning if no uses are found.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/540&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;External Check Option&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/clintgibler&quot;&gt;Clint Gibler&lt;/a&gt; has added the &lt;code&gt;--add-checks-path&lt;/code&gt; option to provide an path to search for additional checks. This is useful if you wish to write your own custom rules for Brakeman to run.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/532&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Option to Force Rails 4&lt;/h3&gt;

&lt;p&gt;If the Rails version for an application cannot be determined automatically for some reason, the &lt;code&gt;-4&lt;/code&gt; option will force Brakeman to treat it like a Rails 4 application.&lt;/p&gt;

&lt;p&gt;Included with this change are some fixes when a Rails 4 app is detected but the exact version number cannot be determined. This may change the output for some scans.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/527&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SQL Injection in Nested Strings&lt;/h3&gt;

&lt;p&gt;This release fixes some SQL injection detection when there is lots of string building mixing concatenation and interpolation. These changes may also affect which value Brakeman warns about within the string.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/528&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Better Send Call Detection&lt;/h3&gt;

&lt;p&gt;Previously, Brakeman was ignored calls to &lt;code&gt;send&lt;/code&gt; when they were nested inside a chain of calls. This has been fixed.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/524&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Ignored Secrets&lt;/h3&gt;

&lt;p&gt;Brakeman now checks subdirectories for &lt;code&gt;.gitignore&lt;/code&gt; files which determing if the secrets configuration is being ignored.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/521&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Symbolizing Safe Paramaters&lt;/h3&gt;

&lt;p&gt;Since &lt;code&gt;params[:controller]&lt;/code&gt; and &lt;code&gt;params[:action]&lt;/code&gt; are quite difficult (possibly impossible) to DoS, Brakeman will not warn about symbolizing them.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/538&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Erubis Fixes&lt;/h3&gt;

&lt;p&gt;Some ERB templates were not parsing correctly due to how Brakeman was handling the end of blocks. This should be resolved now.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/520&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Ruby2Ruby Dependency Updated&lt;/h3&gt;

&lt;p&gt;Brakeman now depends on the latest version of Ruby2Ruby due to the &lt;a href=&quot;https://github.com/seattlerb/ruby2ruby/commit/a1576d12cb1e5e379875548abfd441c6e3095f4a&quot;&gt;fix here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/537&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Expand App Path Once&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;Jeff Rafter&lt;/a&gt; refactored a bunch of code which was converting the application path to an absolute path and instead moved it to one (okay, maybe two) spots. This should not affect any reports.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/534&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Error in Controller Processing&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/JasonBarnabe&quot;&gt;Jason Barnabe&lt;/a&gt; fixed an error...in the error handling when processing controllers.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/517&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;f225541559d2fbe5374d481b6105b66053f9710a  brakeman-2.6.2.gem
67882d467b6a8fc6e504b6dcb9605f79a0c6a22c  brakeman-min-2.6.2.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 2.6.1 Released</title>
    <link href="http://brakemanscanner.org/blog/2014/07/02/brakeman-2-dot-6-1-released/"/>
    <updated>2014-07-02T12:30:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2014/07/02/brakeman-2-dot-6-1-released</id>
    <content type="html">&lt;p&gt;This is a tiny release in response to today's CVEs.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 2.6.0&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add check for CVE-2014-3482 and CVE-2014-3483&lt;/li&gt;
&lt;li&gt;Add support for keyword arguments in blocks (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/511&quot;&gt;#511&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Remove unused warning codes (&lt;a href=&quot;https://github.com/bfish510&quot;&gt;Bill Fischer&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Check for PostgresSQL Injection CVEs&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://groups.google.com/forum/#!msg/rubyonrails-security/wDxePLJGZdI/WP7EasCJTA4J&quot;&gt;CVE-2014-3482 and CVE-2014-3483&lt;/a&gt; are SQL injection issues when using the PostgresSQL backend with bitstring and range data types. Brakeman will warn about affected versions of Rails which include the &quot;pg&quot; gem in the Gemfile.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/515&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Support Keyword Arguments to Blocks&lt;/h3&gt;

&lt;p&gt;Brakeman now handles keyword arguments to blocks as local variables in the block scope instead of throwing an error.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/513&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Removal of Warning Codes&lt;/h3&gt;

&lt;p&gt;Warnings codes for &lt;code&gt;CVE_2013_6415&lt;/code&gt; and &lt;code&gt;CVE_2013_6415_call&lt;/code&gt; have been removed, as they are unused. This should not affect anyone.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/514&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;5b7b5572efe769cfa38178e94952be05670e6fd4  brakeman-2.6.1.gem
fecdb07a5e1a83af02843fbd554472f980e04f91  brakeman-min-2.6.1.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 2.6.0 Released</title>
    <link href="http://brakemanscanner.org/blog/2014/06/06/brakeman-2-dot-6-0-released/"/>
    <updated>2014-06-06T09:04:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2014/06/06/brakeman-2-dot-6-0-released</id>
    <content type="html">&lt;p&gt;This release introduces significant changes to how and when files are parsed, which may introduce changes in existing warnings and errors.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 2.5.0&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Improve default route detection in Rails 3/4 (&lt;a href=&quot;https://github.com/jjarmoc&quot;&gt;Jeff Jarmoc&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Handle controllers and models split across files (&lt;a href=&quot;https://github.com/ptoomey3&quot;&gt;Patrick Toomey&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix handling of &lt;code&gt;protected_attributes&lt;/code&gt; gem in Rails 4 (&lt;a href=&quot;https://github.com/phene&quot;&gt;Geoffrey Hichborn&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add check for CVE-2014-0130&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;find_by&lt;/code&gt;/&lt;code&gt;find_by!&lt;/code&gt; to SQLi check for Rails 4&lt;/li&gt;
&lt;li&gt;Do not branch values for &lt;code&gt;+=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Parse most files upfront instead of on demand&lt;/li&gt;
&lt;li&gt;Fix CheckRender with nested render calls (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/484&quot;&gt;#484&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix detection of &lt;code&gt;:host&lt;/code&gt; setting in redirects (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/506&quot;&gt;#506&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Ignore more model methods in redirects&lt;/li&gt;
&lt;li&gt;Update to use RubyParser 3.5.0 (&lt;a href=&quot;https://github.com/ptoomey3&quot;&gt;Patrick Toomey&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Improved Default Route Detection&lt;/h3&gt;

&lt;p&gt;In addition to Jeff Jarmoc's &lt;a href=&quot;http://matasano.com/research/AnatomyOfRailsVuln-CVE-2014-0130.pdf&quot;&gt;awesome research&lt;/a&gt; on CVE-2014-0130, he contributed much-needed improvements to detecting use of &lt;code&gt;:action&lt;/code&gt; and &lt;code&gt;*action&lt;/code&gt; in routes for Rails 3/4. This may result in more default routes warnings.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/493&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Multiple Files for Controllers and Models&lt;/h3&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/ptoomey3&quot;&gt;Patrick Toomey&lt;/a&gt;) contributed improvements which allow Brakeman to process controllers and models which may be defined in multiple files. The changes also improve how Brakeman handles controllers and models inside modules. This may alter some warnings and how some files are processed. Also, controllers and models may be associated with multiple files instead of just one.&lt;/p&gt;

&lt;p&gt;(changes &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/492&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/482&quot;&gt;here&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Protected Attributes Gem&lt;/h3&gt;

&lt;p&gt;Thanks to (&lt;a href=&quot;https://github.com/phene&quot;&gt;Geoffrey Hichborn&lt;/a&gt;), Brakeman will now treat Rails 4 apps which use the &lt;a href=&quot;https://github.com/rails/protected_attributes&quot;&gt;protected_attributes gem&lt;/a&gt; like a Rails 3 app in regards to mass assignment.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/491&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Check for CVE-2014-0130&lt;/h3&gt;

&lt;p&gt;Besides warning about more types of default routes in this release, Brakeman will also warn about &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/NkKc7vTW70o/NxW_PDBSG3AJ&quot;&gt;CVE-2014-0130&lt;/a&gt; explicitly. If the application uses default routes, the warning will be high confidence, otherwise medium. Note Brakeman will categorize this issue as &quot;Remote Code Execution&quot;, since &lt;a href=&quot;(http://matasano.com/research/AnatomyOfRailsVuln-CVE-2014-0130.pdf&quot;&gt;Jeff Jarmoc demonstrated&lt;/a&gt; rendering arbitrary files can lead to interpreting those files as ERB.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/502&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SQL Injection in Find By&lt;/h3&gt;

&lt;p&gt;Rails 4 added the &lt;code&gt;find_by&lt;/code&gt;/&lt;code&gt;find_by!&lt;/code&gt; methods which just call &lt;code&gt;where(*args).take&lt;/code&gt; and are therefore vulnerable to the same issues as &lt;code&gt;where&lt;/code&gt;. This release will check these methods for SQL injection now.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/504&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;No Branching for +=&lt;/h3&gt;

&lt;p&gt;Code which used &lt;code&gt;+=&lt;/code&gt; heavily in combination with many branches lead to very poor performance. The resulting information from the branches was rarely useful. However, since &lt;code&gt;+=&lt;/code&gt; is buidling up a value (as opposed to replacing it), simply ignoring branches does not lose any of the values involved. Thus, the same vulnerabilities should be able to be detected even when losing flow sensitivity for &lt;code&gt;+=&lt;/code&gt; assignments. For details, &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/499&quot;&gt;see the changes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This change has improved processing on some files from over 30 minutes to under 1 second. If some files were processing slowly or had to be ignored previously, consider trying again with this release.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/499&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Parsing Files Upfront&lt;/h3&gt;

&lt;p&gt;This release changes when files are parsed. Previously, files were read and parsed as they were processed. Now most files are read and parsed near the beginning of the scan instead. This has allowed for some internal cleanup and easier future changes. However, some bugs were fixed regarding sorting files which may cause warnings to change.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/501/&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Nested Renders&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;CheckRender&lt;/code&gt; had a bug when processing a &lt;code&gt;render&lt;/code&gt; call which contained another call to &lt;code&gt;render&lt;/code&gt;. This has been fixed.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/485&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Redirects with Chained Calls&lt;/h3&gt;

&lt;p&gt;The last release added support for checking if a &lt;code&gt;redirect_to&lt;/code&gt; argument was setting the &lt;code&gt;:host&lt;/code&gt; option. However, it did not work with chained calls like the &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/506&quot;&gt;one reported here&lt;/a&gt;. Now it should.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/507&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Redirects to Models&lt;/h3&gt;

&lt;p&gt;More Rails 4 methods have been added and support for chained methods has been improved to prevent false positives when redirecting to a model instance.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/489&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;RubyParser Upgrade&lt;/h3&gt;

&lt;p&gt;The RubyParser dependency has been upgraded to 3.5.0 for Ruby 2.1 support. There are some issues with newlines and line number accuracy in newer versions (it is better for some code and worse for others) which has prevented further upgrades at the moment.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/497&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;0aae141108d92040f3553557a31ad117ac1c2ea6  brakeman-2.6.0.gem
70c2353f31d4d04ba8d95c871062db31d5c6e981  brakeman-min-2.6.0.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 2.5.0 Released</title>
    <link href="http://brakemanscanner.org/blog/2014/04/30/brakeman-2-dot-5-0-released/"/>
    <updated>2014-04-30T09:52:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2014/04/30/brakeman-2-dot-5-0-released</id>
    <content type="html">&lt;p&gt;This release includes a number of false positive fixes, more Rails 4 support, a new check for regular expression denial of service, and Markdown output formatting.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 2.4.3&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add GitHub-flavored Markdown output format (&lt;a href=&quot;https://github.com/gregose&quot;&gt;Greg Ose&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add check for regex denial of service (&lt;a href=&quot;https://github.com/mastahyeti&quot;&gt;Ben Toews&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix false positives when &lt;code&gt;sanitize&lt;/code&gt; is used in SQL (&lt;a href=&quot;https://github.com/jeffyip&quot;&gt;Jeff Yip&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;String#intern&lt;/code&gt; and &lt;code&gt;Hash#symbolize_keys&lt;/code&gt; DoS check (&lt;a href=&quot;https://github.com/jrusnack&quot;&gt;Jan Rusnacko&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add support for Rails 4 &lt;code&gt;before_actions&lt;/code&gt; and friends&lt;/li&gt;
&lt;li&gt;Add support for RailsLTS 2.3.18.7 and 2.3.18.8&lt;/li&gt;
&lt;li&gt;Check for &lt;code&gt;protected_attributes&lt;/code&gt; gem (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/475&quot;&gt;#475&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix SQLi detection in chain calls in scopes (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/471&quot;&gt;#471&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix false positive when &lt;code&gt;:host&lt;/code&gt; is specified in redirect (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/464&quot;&gt;#464&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Check all arguments in &lt;code&gt;Model.select&lt;/code&gt; for SQLi&lt;/li&gt;
&lt;li&gt;Move SQLi CVE checks to &lt;code&gt;CheckSQLCVEs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Handle more non-literals in routes (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/461&quot;&gt;#461&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Markdown Output Format&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gregose&quot;&gt;Greg Ose&lt;/a&gt; added the option to output to GitHub-flavored markdown (&lt;code&gt;-f markdown&lt;/code&gt; or &lt;code&gt;-o report.md&lt;/code&gt;). Additionally, the &lt;code&gt;--github-repo&lt;/code&gt; option can be used to link the files in the report to a specific GitHub repository. &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/463&quot;&gt;See here for details&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/463&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Regex Denial of Service&lt;/h3&gt;

&lt;p&gt;A new check for dangerous interpolation in regular expressions was contributed by &lt;a href=&quot;https://github.com/mastahyeti&quot;&gt;Ben Toews&lt;/a&gt;. This will generate &quot;Denial of Service&quot; warnings if user input is interpolated into regular expressions.&lt;/p&gt;

&lt;p&gt;For example, this will generate a warning:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/#{params[:name]}/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/454&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Avoid Warning on Sanitized SQL&lt;/h3&gt;

&lt;p&gt;Brakeman should no longer warn about SQL values wrapped in &lt;code&gt;sanitize&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/commit/cd9093d890b7a16f117d11a0ae6af281ecbb648d&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;More Symbol Denial of Service Methods&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;String#intern&lt;/code&gt; and &lt;code&gt;Hash#symbolize_key&lt;/code&gt; were added to the symbol denial of service check by &lt;a href=&quot;https://github.com/jrusnack&quot;&gt;Jan Rusnacko&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/470&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Rails 4 Before Actions&lt;/h3&gt;

&lt;p&gt;Rails 4 added a bunch of aliases for &lt;code&gt;before_filter&lt;/code&gt; and related methods, and Brakeman now recognizes these methods for adding and skipping filters.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/480&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Latest RailsLTS Version&lt;/h3&gt;

&lt;p&gt;This release adds support for the latest RailsLTS 2.3.18.x versions and will not warn on &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/CdoMUVpsRmQ/iFRwR1xPym8J&quot;&gt;CVE-2012-1099&lt;/a&gt; and &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/tfp6gZCtzr4/j8LUHmu7fIEJ&quot;&gt;CVE-2014-0081&lt;/a&gt; for applications using the appropriate RailsLTS versions.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/481&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Protected Attributes Gem&lt;/h3&gt;

&lt;p&gt;Brakeman now treats applications using the &lt;code&gt;protected_attributes&lt;/code&gt; gem as if mass assignment is enabled by default and &lt;code&gt;attr_accessible&lt;/code&gt; is necessary to protect models.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/477&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SQL Injection in Scopes&lt;/h3&gt;

&lt;p&gt;There was a bug which caused Brakeman not warn about SQL injection in chained calls inside scope blocks (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/471&quot;&gt;example here&lt;/a&gt;). Additionally, scope calls were not being handled for Rails 4.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/472&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Hosts in Redirects&lt;/h3&gt;

&lt;p&gt;Brakeman should no longer warn about instances of &lt;code&gt;redirect_to&lt;/code&gt; when &lt;code&gt;:host&lt;/code&gt; is explicitly specified.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/465&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SQL Injection in All Select Arguments&lt;/h3&gt;

&lt;p&gt;Brakeman was only checking the first argument to &lt;code&gt;Model.select&lt;/code&gt; for SQL injection, but the method can take multiple arguments. This release corrects this to check all of the arguments.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/468&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SQL Injection CVEs Moved to Separate Check&lt;/h3&gt;

&lt;p&gt;All the checks for SQL injection CVEs have been moved from &lt;code&gt;CheckSQL&lt;/code&gt; to &lt;code&gt;CheckSQLCVEs&lt;/code&gt;. This should only have an effect for users explicitly specifying to run or skip &lt;code&gt;CheckSQL&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/478&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;More Routing Fixes&lt;/h3&gt;

&lt;p&gt;More instances of non-literals in routes will be ignored instead of raising exceptions. In general, information from &lt;code&gt;routes.rb&lt;/code&gt; is not used except to warn about default routes (unless &lt;code&gt;--no-assume-routes&lt;/code&gt; is used).&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/462&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;fc8a7991e9351f8d5e26a59acf54422a638f4866  brakeman-2.5.0.gem
48f974aaf40957a325ee778d3d700fd29aa526bf  brakeman-min-2.5.0.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 2.4.3 Released</title>
    <link href="http://brakemanscanner.org/blog/2014/03/22/brakeman-2-dot-4-3-released/"/>
    <updated>2014-03-22T17:49:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2014/03/22/brakeman-2-dot-4-3-released</id>
    <content type="html">&lt;p&gt;A new gem version has been released because the 2.4.2 gem was not signed. No other changes were introduced.&lt;/p&gt;

&lt;h3&gt;Signed Gems&lt;/h3&gt;

&lt;p&gt;As a reminder, the Brakeman gems are (supposed to be) signed and can be verified with &lt;a href=&quot;https://github.com/presidentbeef/brakeman/blob/master/brakeman-public_cert.pem&quot;&gt;this certificate&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To verify on installation:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem cert --add &amp;lt;(curl -Ls https://raw.github.com/presidentbeef/brakeman/master/brakeman-public_cert.pem)
gem install brakeman -P MediumSecurity
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&quot;HighSecurity&quot; requires all dependencies to be signed as well, which is unlikely.&lt;/p&gt;

&lt;p&gt;There is some weirdness around &lt;code&gt;-P MediumSecurity&lt;/code&gt; currently. The simplest solution seems to be:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem install brakeman   # Install Brakeman and all dependencies
gem uninstall brakeman # Remove the Brakeman gem
gem install brakeman -P MediumSecurity  # Install Brakeman gem and check signature
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;16b4890fa8ee6bad1d429a12bf3f0cb8e76cb2d8  brakeman-2.4.3.gem
be5743d77140e64b75eefc53f8697f767ab370d9  brakeman-min-2.4.3.gem 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 2.4.2 Released</title>
    <link href="http://brakemanscanner.org/blog/2014/03/20/brakeman-2-dot-4-2-released/"/>
    <updated>2014-03-20T22:37:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2014/03/20/brakeman-2-dot-4-2-released</id>
    <content type="html">&lt;p&gt;This release is only internal changes and bug fixes, but some scans may see significant time and memory improvements.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 2.4.1&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Skip identically rendered templates&lt;/li&gt;
&lt;li&gt;Improve HAML template processing&lt;/li&gt;
&lt;li&gt;Only track original template output locations&lt;/li&gt;
&lt;li&gt;Reuse duplicate call location information&lt;/li&gt;
&lt;li&gt;Fix duplicate warnings about sanitize CVE&lt;/li&gt;
&lt;li&gt;Remove &lt;code&gt;rescue Exception&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Drop Identical Templates&lt;/h3&gt;

&lt;p&gt;For a long time now Brakeman has skipped processing templates if the template had already been processed with an identical environment. However, there are many times when a template is rendered with different environments but the actual output is the same. Brakeman now drops these templates (they are rendered, then discarded if they are duplicates). This reduces peak memory overhead, sometimes drastically. It can also speed up call indexing and vulnerability checks since fewer templates are searched.&lt;/p&gt;

&lt;p&gt;The location and render path of template warnings may change slightly due to this change. Also, the rendered template debug output will no longer include all rendered templates since duplicates will not be tracked.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/442&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Better HAML Processing&lt;/h3&gt;

&lt;p&gt;HAML templates will be processed more accurately with this release.&lt;/p&gt;

&lt;p&gt;For example, a template like this&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#content
  .nav
    = @navigation_menu
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;used to produce output like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+-------------------------------------------------------------------------------------------------+
| Output                                                                                          |
+-------------------------------------------------------------------------------------------------+
| [Output] &quot;&amp;lt;div id='content'&amp;gt;; &amp;lt;div class='nav'&amp;gt;; #{[Escaped] @navigation_menu}; &amp;lt;/div&amp;gt;;&amp;lt;/div&amp;gt;;&quot; |
+-------------------------------------------------------------------------------------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;but now it will look like this instead&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+-----------------------------------+
| Output                            |
+-----------------------------------+
| [Escaped Output] @navigation_menu |
+-----------------------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Besides looking much nicer, this improves warnings and reduces how much code Brakeman has to search. Additionally, these &lt;code&gt;push_text&lt;/code&gt; methods can often interpolate multiple values into the output string, which were not being properly detected as output. This is fixed now.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/441&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Duplicate Template Outputs&lt;/h3&gt;

&lt;p&gt;Aliased values in templates were being counted multiple times as output. This did not affect warnings generated, but it did create duplicate output values to check and extraneous debug output.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/443&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Call Location Reuse&lt;/h3&gt;

&lt;p&gt;For large applications, many calls in the call index actually have the same location (class+method or template). Instead of creating a new location hash for each call, the locations are cached and reused.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/444&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Sanitize CVE Duplicates&lt;/h3&gt;

&lt;p&gt;Don't worry - &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/zAAU7vGTPvI/1vZDWXqBuXgJ&quot;&gt;CVE-2013-1857&lt;/a&gt; is one year old this week. But Brakeman was not properly preventing duplicate warnings for it. Hopefully this was affecting exactly no one.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/445&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Narrower Exception Handling&lt;/h3&gt;

&lt;p&gt;All instances of &lt;code&gt;rescue Exception&lt;/code&gt; were removed from Brakeman and replaced with bare &lt;code&gt;rescue&lt;/code&gt;s to catch &lt;code&gt;StandardError&lt;/code&gt; and subclasses. &lt;code&gt;Exception&lt;/code&gt; has some unfortunate subclasses, such as &lt;code&gt;NoMemoryError&lt;/code&gt; and &lt;code&gt;Interrupt&lt;/code&gt; which Brakeman should not be rescuing.&lt;/p&gt;

&lt;p&gt;This does mean there may be some newly unhandled exceptions. Please report these so they can be rescued properly.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/446&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;02842dc497bf22b5b427cfd02635c005c4fc4fd4  brakeman-2.4.2.gem
4893cedbcb015e96c82f4777b00a49ca8d0ae22f  brakeman-min-2.4.2.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 2.4.1 Released</title>
    <link href="http://brakemanscanner.org/blog/2014/02/19/brakeman-2-dot-4-1-released/"/>
    <updated>2014-02-19T10:53:00-08:00</updated>
    <id>http://brakemanscanner.org/blog/2014/02/19/brakeman-2-dot-4-1-released</id>
    <content type="html">&lt;p&gt;This release only adds checks for the latest CVEs, no other changes.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 2.4.0&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add check for CVE-2014-0080&lt;/li&gt;
&lt;li&gt;Add check for CVE-2014-0081, replaces CVE-2013-6415&lt;/li&gt;
&lt;li&gt;Add check for CVE-2014-0082&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;CVE-2014-0080&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/Wu96YkTUR6s/pPLBMZrlwvYJ&quot;&gt;CVE-2014-0080&lt;/a&gt; is a SQL injection issue only affects applications using PostgreSQL with Rails 4.x. If Brakeman detects the &lt;code&gt;pg&lt;/code&gt; gem and an affected version, it will warn about this CVE.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/447&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;CVE-2014-0081&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/tfp6gZCtzr4/j8LUHmu7fIEJ&quot;&gt;CVE-2014-0081&lt;/a&gt; is a vulnerability in &lt;code&gt;number_to_currency&lt;/code&gt;, &lt;code&gt;number_to_percentage&lt;/code&gt;, and &lt;code&gt;number_to_human&lt;/code&gt;. Values passed in as options may not be properly escaped. It affects all previous versions of Rails.&lt;/p&gt;

&lt;p&gt;Brakeman will warn on unsafe uses of these methods. If no unsafe calls are found, it will generate a generic medium confidence warning.&lt;/p&gt;

&lt;p&gt;Warnings for CVE-2014-0081 replace warnings for CVE-2013-6415, which was about just &lt;code&gt;number_to_currency&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/448&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;CVE-2014-0082&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/LMxO_3_eCuc/ozGBEhKaJbIJ&quot;&gt;CVE-2014-0082&lt;/a&gt; is a potential symbol denial of service problem when handling &lt;code&gt;render :text&lt;/code&gt; in Rails 3.x.&lt;/p&gt;

&lt;p&gt;Brakeman will only warn about this CVE if it detects use of &lt;code&gt;render :text&lt;/code&gt; in affected versions.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/449&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;e9fb5439d5a322b4a9c9611d75d994e7df83d4d2  brakeman-2.4.1.gem
b84ad90a7ec9b6e6bbce8fc69c50d1d8b3214d0f  brakeman-min-2.4.1.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter or joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 2.4.0 Released</title>
    <link href="http://brakemanscanner.org/blog/2014/02/05/brakeman-2-dot-4-0-released/"/>
    <updated>2014-02-05T01:15:00-08:00</updated>
    <id>http://brakemanscanner.org/blog/2014/02/05/brakeman-2-dot-4-0-released</id>
    <content type="html">&lt;p&gt;This is a fairly big release with some significant changes (especially for SQL injection warnings), so please test carefully. Existing warnings and fingerprints may change.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 2.3.1:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fingerprint attribute warnings individually (&lt;a href=&quot;https://github.com/ctaintor&quot;&gt;Case Taintor&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add check for uses of &lt;code&gt;OpenSSL::SSL::VERIFY_NONE&lt;/code&gt; (&lt;a href=&quot;https://github.com/abedra/&quot;&gt;Aaron Bedra&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Detect SQL injection raw SQL queries using &lt;code&gt;connection&lt;/code&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/434&quot;&gt;#434&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix false positives when SQL methods are not called on AR models (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/423&quot;&gt;#423&lt;/a&gt;, &lt;a href=&quot;https://github.com/abedra/&quot;&gt;Aaron Bedra&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Reduce false positives for SQL injection in string building&lt;/li&gt;
&lt;li&gt;More accurate user input marking for SQL injection warnings&lt;/li&gt;
&lt;li&gt;Detect SQL injection in &lt;code&gt;delete_all&lt;/code&gt;/&lt;code&gt;destroy_all&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add support for Rails LTS versions (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/422&quot;&gt;#422&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Parse exact versions from Gemfile.lock for all gems (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/431&quot;&gt;#431&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Ignore generators in &lt;code&gt;lib/&lt;/code&gt; directory&lt;/li&gt;
&lt;li&gt;No longer raise exceptions if a class name cannot be determined&lt;/li&gt;
&lt;li&gt;Update to RubyParser 3.4.0&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Attribute Warning Fingerprints&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ctaintor&quot;&gt;Case Taintor&lt;/a&gt; noted that ignoring one warning about dangerous mass assignable attributes ignored all such warnings for the same model. Then he fixed it, yay!&lt;/p&gt;

&lt;p&gt;Please note this means fingerprints for warnings about &quot;dangerous attributes&quot; in &lt;code&gt;attr_accessible&lt;/code&gt; will change. If you are currently ignoring some of these warnings, you will need to re-ignore them.&lt;/p&gt;

&lt;p&gt;Also, the messages for these warnings have changed and the attribute name will now be in the &quot;code&quot; value in JSON reports.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/416&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Check for SSL Verification&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/abedra/&quot;&gt;Aaron Bedra&lt;/a&gt; has contributed a new check for instances of &lt;code&gt;verify_mode&lt;/code&gt; on HTTPS connections being set to &lt;code&gt;OpenSSL::SSL::VERIFY_NONE&lt;/code&gt;. This bypasses any checks OpenSSL has for verifying the SSL certificate is legitimate, allowing easy man-in-the-middle attacks.&lt;/p&gt;

&lt;p&gt;This new check has a new warning type (&quot;SSL Verification Bypass&quot;) and warning code (71).&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/419&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SQL Injection in Raw Queries&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;ActiveRecord::Core#connection&lt;/code&gt; or &lt;code&gt;ActiveRecord::Base.connection&lt;/code&gt; or &lt;code&gt;ActiveRecord::Base#connection&lt;/code&gt; can be used to send queries directly to the database connection without any protection. There are several ways of doing this, most of which are hopefully now covered by Brakeman.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/438&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Fewer SQL Injection False Positives&lt;/h3&gt;

&lt;p&gt;Many changes were made in this release to reduce false positives related to SQL injection warnings and to improve the accuracy of reported issues.&lt;/p&gt;

&lt;p&gt;First, &lt;a href=&quot;https://github.com/abedra/&quot;&gt;Aaron Bedra&lt;/a&gt; fixed Brakeman to not warn about query-like methods that were innocently called on non-ActiveRecord objects. (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/426&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;For example, this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;find_by_sql(&quot;SELECT * FROM stuff WHERE thing = &quot; + self.class.sanitize_sql(thing))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;would have generated a warning which indicated &lt;code&gt;&quot;SELECT * FROM stuff WHERE thing = &quot; + self.class.sanitize_sql(thing)&lt;/code&gt; was a dangerous value. Now it will not warn at all.&lt;/p&gt;

&lt;p&gt;As another example, code like this&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;options = {}

if params[:sort_order] == 'ascending'
  sort_order = 'ASC'
else
  sort_order = 'DESC'
end

options[:order] = 'updated_at ' + sort_order
Test.all(options)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;would create a warning about &lt;code&gt;(&quot;updated_at &quot; + (&quot;ASC&quot; or &quot;DESC&quot;))&lt;/code&gt;. Now Brakeman will recognize that these are all just strings and not warn.&lt;/p&gt;

&lt;p&gt;Many warnings will also just be more accurate:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;query = &quot;SELECT sum(stuff) &quot; +
      &quot;FROM (SELECT other_stuff FROM #{table} WHERE id = #{id}) &quot; +
      &quot;AS item, bgs &quot; +
      &quot;WHERE ST_Contains(item.geometry, bgs.the_point);&quot;

Test.find_by_sql(query)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This used to warn on the entire query! Now it will just warn about &lt;code&gt;table&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;#to_s&lt;/code&gt; calls are ignored now and their targets considered instead.&lt;/p&gt;

&lt;p&gt;Additionally, Brakeman should no longer warn about method calls ending in &lt;code&gt;_id&lt;/code&gt;, since those generally refer to foreign keys. Note, however, that local variables ending in &lt;code&gt;_id&lt;/code&gt; will still produce warnings.&lt;/p&gt;

&lt;p&gt;In general, fingerprints should not change for existing warnings, since the &lt;code&gt;user_input&lt;/code&gt; value is not included in the fingerprint.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/440&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SQL Injection in Deletions&lt;/h3&gt;

&lt;p&gt;Brakeman will now look for SQL injection in &lt;code&gt;delete_all&lt;/code&gt; and &lt;code&gt;destroy_all&lt;/code&gt; which allow raw SQL strings.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/438&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Support for Rails LTS&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://railslts.com/&quot;&gt;RailsLTS&lt;/a&gt; provides security patch backporting to Rails 2.3.18. They now &lt;a href=&quot;http://makandracards.com/railslts/21809-how-to-find-out-your-current-rails-lts-version&quot;&gt;include an internal version number&lt;/a&gt; in &lt;code&gt;Gemfile.lock&lt;/code&gt;, which allows Brakeman to avoid warning about fixed vulnerabilities in applications using RailsLTS.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/437&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Gemfile Parsing&lt;/h3&gt;

&lt;p&gt;Previously, Brakeman only checked &lt;code&gt;Gemfile.lock&lt;/code&gt; for specific gems. Now it &quot;parses&quot; the entire file and can track all gem versions. (&lt;a href=&quot;https://github.com/rubysec/bundler-audit&quot;&gt;bundler-audit&lt;/a&gt; is recommended for checking gems for vulnerable versions.) This helps when Brakeman is checking for gem usage but the gem is an indirect dependency.&lt;/p&gt;

&lt;p&gt;Also, a minor issue was fixed for those &lt;code&gt;Gemfile&lt;/code&gt;s that do weird things and call &lt;code&gt;gem&lt;/code&gt; with non-string arguments.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/432&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Generators are Ignored&lt;/h3&gt;

&lt;p&gt;Any path in &lt;code&gt;lib/&lt;/code&gt; containing &lt;code&gt;generators&lt;/code&gt; will now be ignored. This is mainly because there are &lt;code&gt;.rb&lt;/code&gt; files in there that are actually templates, but Brakeman tries to parse them and fails because they aren't really Ruby.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/427&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Exceptions for Class Names&lt;/h3&gt;

&lt;p&gt;Previously, Brakeman actually raised and caught exceptions if a class name could not be determined from a &lt;code&gt;Sexp&lt;/code&gt;. Now it just returns &lt;code&gt;nil&lt;/code&gt;. This should remove some errors and possibly make some scans faster.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/417&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;RubyParser Update&lt;/h3&gt;

&lt;p&gt;The RubyParser dependency has been updated to 3.4.0. This release is &lt;em&gt;much&lt;/em&gt; faster, along with &lt;a href=&quot;http://blog.zenspider.com/releases/2014/02/ruby_parser-version-3-4-0-has-been-released.html&quot;&gt;lots of other good changes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, please note that line numbers for warnings involving heredocs may change. They will be slightly closer, but not exactly accurate.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/commit/29239377a79bafbaddfa7664e1570d4c1f3982b5&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;p&gt;c9d840b6fca08f61b3abbd1fa109cf66be19fccc  brakeman-2.4.0.gem
5bad89c43f7ab78bd40dfd6f71aac3d034ccaa0a  brakeman-min-2.4.0.gem&lt;/p&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter or joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 2.3.1 Released</title>
    <link href="http://brakemanscanner.org/blog/2013/12/12/brakeman-2-dot-3-1-released/"/>
    <updated>2013-12-12T23:24:00-08:00</updated>
    <id>http://brakemanscanner.org/blog/2013/12/12/brakeman-2-dot-3-1-released</id>
    <content type="html">&lt;p&gt;Two minor bugs were fixed in this release. Please see the &lt;a href=&quot;http://brakemanscanner.org/blog/2013/12/11/brakeman-2-dot-3-0-released/&quot;&gt;2.3.0 release post&lt;/a&gt; if you are upgrading from an earlier version.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/415&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 2.3.0&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fix check for CVE-2013-4491 (i18n XSS) to detect workaround&lt;/li&gt;
&lt;li&gt;Fix link for CVE-2013-6415 (number_to_currency)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;i18n XSS Workaround&lt;/h3&gt;

&lt;p&gt;Brakeman 2.3.0 included a check for the &lt;a href=&quot;https://groups.google.com/d/msg/ruby-security-ann/pLrh6DUw998/bLFEyIO4k_EJ&quot;&gt;official i18n XSS workaround&lt;/a&gt;, but it was commented out during testing and unfortunately left that way.&lt;/p&gt;

&lt;h3&gt;CVE-2013-6415 Link&lt;/h3&gt;

&lt;p&gt;The link provided for &lt;a href=&quot;https://groups.google.com/d/msg/ruby-security-ann/9WiRn2nhfq0/2K2KRB4LwCMJ&quot;&gt;CVE-2013-6415&lt;/a&gt; in Brakeman 2.3.0 was copy-pasted from an older check. This has been fixed.&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;469b209a4c72f5a1133d696575caeee1675837e7  brakeman-2.3.1.gem
827e1cdefba543f59ed5070aaa3f587d8c7d9513  brakeman-min-2.3.1.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt; or following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter.&lt;/p&gt;
</content>
  </entry>
  
</feed>
