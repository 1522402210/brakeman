<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>Brakeman - Rails Security Scanner</title>
  <link href="http://brakemanscanner.org/atom.xml" rel="self"/>
  <link href="http://brakemanscanner.org/"/>
  <updated>2016-06-29T16:19:44-07:00</updated>
  <id>http://brakemanscanner.org/</id>
  <author>
    <name>Justin Collins</name>
    
  </author>

  
  <entry>
    <title>Brakeman 3.3.2 Released</title>
    <link href="http://brakemanscanner.org/blog/2016/06/10/brakeman-3-dot-3-2-released/"/>
    <updated>2016-06-10T08:49:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2016/06/10/brakeman-3-dot-3-2-released</id>
    <content type="html">&lt;p&gt;This is a bug fix release.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.3.2&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fix performance regression in global constant tracking&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Brakeman 3.3.0 introduced a new feature to track constant values across the application. This helped reduce false positives, for example when checking a value against a constant array of values. However, the lookup of constant values was very slow for moderate to large numbers of constants. In some test cases it added up to a minute of scan time. This has been resolved along with some changes to how dynamic constant names are handled.&lt;/p&gt;

&lt;p&gt;Additionally, the &lt;code&gt;--faster&lt;/code&gt; option will turn off global constant tracking entirely.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/891&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;58bb2179de2bd479d32dc2d2018e40caf478916e283ea88089fe0bcb30a55e6c  brakeman-3.3.2.gem
4f72ff02a163d78244554c4a26ea35e88d76dd6b60c3d21573db8518abcba6fc  brakeman-min-3.3.2.gem
c0beeabe95aa693a5273bd48922028f48a190940b18c795813bd0f96068452b4  brakeman-lib-3.3.2.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to the reporters of the performance issue in the 3.3.0 release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;

&lt;p&gt;For commercial support, please consider &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.3.1 Released</title>
    <link href="http://brakemanscanner.org/blog/2016/06/03/brakeman-3-dot-3-1-released/"/>
    <updated>2016-06-03T08:15:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2016/06/03/brakeman-3-dot-3-1-released</id>
    <content type="html">&lt;p&gt;&lt;em&gt;Changes since 3.3.1&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Improved line number accuracy in ERB templates (&lt;a href=&quot;https://github.com/ptoomey3&quot;&gt;Patrick Toomey&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Allow multiple line regex in &lt;code&gt;validates_format_of&lt;/code&gt; (&lt;a href=&quot;https://github.com/c0va23&quot;&gt;Dmitrij Fedorenko&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid overwriting instance/class methods with same name (&lt;a href=&quot;https://github.com/imtayadeway&quot;&gt;Tim Wade&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;--force-scan&lt;/code&gt; option (&lt;a href=&quot;https://github.com/oreoshake&quot;&gt;Neil Matatall&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Only consider &lt;code&gt;if&lt;/code&gt; branches in templates&lt;/li&gt;
&lt;li&gt;Support more safe &lt;code&gt;&amp;amp;.&lt;/code&gt; operations&lt;/li&gt;
&lt;li&gt;Avoid warning about SQL injection with &lt;code&gt;quoted_primary_key&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/884&quot;&gt;#884&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Delay loading vendored gems and modifying load path&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;brakeman-lib&lt;/code&gt; gem&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;ERB Template Line Numbers&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ptoomey3&quot;&gt;Patrick Toomey&lt;/a&gt; contributed a series of patches to bring Brakeman's handling of ERB/Erubis templates in line with the Rails implementation. This has the effect of correcting some line numbers and fixed processing of &lt;code&gt;case&lt;/code&gt; statements in templates.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/878&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Multiline Regex Validation&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/c0va23&quot;&gt;Dmitrij Fedorenko&lt;/a&gt; added a change to support multiline extended regular expressions for model validations.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/885&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Class Methods&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/imtayadeway&quot;&gt;Tim Wade&lt;/a&gt; fixed an issue where class methods and instance methods with the same name on the same class would overwrite each other. This may cause a few warning fingerprints to change, since all method names are now stored as symbols (some were strings before).&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/881&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Force Scan&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/oreoshake&quot;&gt;Neil Matatall&lt;/a&gt; added the &lt;code&gt;--force-scan&lt;/code&gt; option to force Brakeman to scan an application even if it doesn't look like a Rails app.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/879&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Branches in Templates&lt;/h3&gt;

&lt;p&gt;When looking at template output, Brakeman will no longer treat the conditional as output, just the branches. This helps find more potential instances of cross-site scripting.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;%= params[:x].html_safe unless this_is_a_bad_idea? %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now Brakeman will just consider the &lt;code&gt;params[:x].html_safe&lt;/code&gt; value which is clearly dangerous.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/883/&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;More Safe Calls&lt;/h3&gt;

&lt;p&gt;Brakeman can now handle more instances of the &quot;safe call&quot; or &quot;lonely&quot; operator such as &lt;code&gt;a&amp;amp;.b ||= 1&lt;/code&gt; and &lt;code&gt;x&amp;amp;.y += z 1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/887&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Quoted Primary Key&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about use of &lt;code&gt;quoted_primary_key&lt;/code&gt; in SQL strings.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/888&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Delayed Load Path Modification&lt;/h3&gt;

&lt;p&gt;Brakeman 3.3.0 started vendoring all its dependencies to avoid conflicts with application dependencies. However, if Brakeman is included in a Gemfile without &lt;code&gt;require: false&lt;/code&gt;, it will still modify the load path and potentially cause conflicts.&lt;/p&gt;

&lt;p&gt;This version delays loading any dependencies until Brakeman actually runs. This is almost like having &lt;code&gt;require: false&lt;/code&gt; automatically.&lt;/p&gt;

&lt;p&gt;Please keep in mind it is really not recommended to include Brakeman in Gemfiles unless it is actually being used as a library. Otherwise it's like mixing your browser's dependencies with your applications. It doesn't make sense.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/889&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;brakeman-lib&lt;/h3&gt;

&lt;p&gt;For those who don't want Brakeman to bundle and vendor its own dependencies, the &lt;a href=&quot;https://rubygems.org/gems/brakeman-lib&quot;&gt;brakeman-lib&lt;/a&gt; gem is identical to the &lt;code&gt;brakeman&lt;/code&gt; gem but without the bundling. Consider using it if the bundling and modified load paths are causing issues.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/commit/fa310a9b736d858a929715802d98b1a3f0887569&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;RailsConf Security Talks&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/presidentbeef&quot;&gt;Justin Collins&lt;/a&gt; gave &lt;a href=&quot;https://www.youtube.com/watch?v=DHHHnPwSY5I&amp;amp;feature=youtu.be&amp;amp;t=55m6s&quot;&gt;a lightning talk&lt;/a&gt; about Brakeman and &lt;a href=&quot;https://www.youtube.com/watch?v=3P9naxOfUC4&amp;amp;feature=youtu.be&quot;&gt;a regular talk&lt;/a&gt; about real-world examples of vulnerabilities Rails won't save you from.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/secretmike&quot;&gt;Mike Milner&lt;/a&gt; spoke about &lt;a href=&quot;https://youtu.be/UoiCylwUoq4&quot;&gt;the security breaches of 2015&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/JessRudder&quot;&gt;Jessica Rudder&lt;/a&gt; talked through &lt;a href=&quot;https://youtu.be/2GHWAYys1is&quot;&gt;examples of SQL injection&lt;/a&gt; in ActiveRecord.&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;5c22721c8b486fa9d283cabf65c7e77b2f7428056d4d907b7f74a91dd112616a  brakeman-3.3.1.gem
7aa57ed8b42c0cadef09214f5544424659ab3972912137fad37da1a052d8a792  brakeman-lib-3.3.1.gem
95e68202493d8c504ad72276c8bfa46abb1c78c309bc2b80b433a6220f3722eb  brakeman-min-3.3.1.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed improvements in this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion. Please note the mailing list is no longer in use and has apparently not been delivering mail for some time.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.3.0 Released</title>
    <link href="http://brakemanscanner.org/blog/2016/05/05/brakeman-3-dot-3-0-released/"/>
    <updated>2016-05-05T09:49:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2016/05/05/brakeman-3-dot-3-0-released</id>
    <content type="html">&lt;p&gt;Brakeman 3.3.0 introduces a new packaging method for Brakeman which vendors all dependencies and does not include any gem dependencies in the gemspec. Please test and provide feedback if it does not work as expected.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.2.1&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bundle all dependencies in gem&lt;/li&gt;
&lt;li&gt;Return exit code &lt;code&gt;4&lt;/code&gt; if no Rails application is detected (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/869&quot;&gt;#869&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add optional check for secrets in source code (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/201&quot;&gt;#201&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Track constants globally&lt;/li&gt;
&lt;li&gt;Skip if branches with &lt;code&gt;Rails.env.test?&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/862&quot;&gt;#862&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Skip processing obviously false if branches (more broadly)&lt;/li&gt;
&lt;li&gt;Handle HAML &lt;code&gt;find_and_preserve&lt;/code&gt; with a block (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/837&quot;&gt;#837&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Process &lt;code&gt;Array#first&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Allow non-Hash arguments in &lt;code&gt;protect_from_forgery&lt;/code&gt; (&lt;a href=&quot;https://github.com/jsyeo&quot;&gt;Jason Yeo&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about &lt;code&gt;u&lt;/code&gt; helper (&lt;a href=&quot;https://github.com/cdollins&quot;&gt;Chad Dollins&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about mass assignment and SQL injection with &lt;code&gt;params.slice&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/866&quot;&gt;#866&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about &lt;code&gt;slice&lt;/code&gt; in &lt;code&gt;redirect_to&lt;/code&gt; and &lt;code&gt;link_to&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/832&quot;&gt;#832&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning on &lt;code&gt;popen&lt;/code&gt; with array (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/851&quot;&gt;#851&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;[Code Climate engine] When possible, output to /dev/stdout (&lt;a href=&quot;https://github.com/GordonDiggs&quot;&gt;Gordon Diggs&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;[Code Climate engine] Remove nil entries from &lt;code&gt;include_paths&lt;/code&gt; (&lt;a href=&quot;https://github.com/GordonDiggs&quot;&gt;Gordon Diggs&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;[Code Climate engine] Report end lines for issues (&lt;a href=&quot;https://github.com/GordonDiggs&quot;&gt;Gordon Diggs&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Dependency Bundling&lt;/h3&gt;

&lt;p&gt;In its gem form, Brakeman no longer declares any external dependencies. Its dependencies are bundled with the gem itself. This should prevent the conflicts which sometimes occur when Brakeman is declared as a dependency of a Rails application. The disadvantage is you will no longer be able to update Brakeman dependencies (like RubyParser) without updating Brakeman itself.&lt;/p&gt;

&lt;p&gt;As this is a new way of distributing Brakeman, please report any issues that may arise.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/845&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;New Exit Code&lt;/h3&gt;

&lt;p&gt;A new exit code has been added for the case when Brakeman does not detect a Rails application.&lt;/p&gt;

&lt;p&gt;For reference, these are Brakeman's current exit codes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt; - Normal exit&lt;/li&gt;
&lt;li&gt;&lt;code&gt;3&lt;/code&gt; - Warnings found (with &lt;code&gt;-z&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;4&lt;/code&gt; - No Rails application detected&lt;/li&gt;
&lt;li&gt;&lt;code&gt;255&lt;/code&gt; - Error&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/870&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Secrets Check&lt;/h3&gt;

&lt;p&gt;A new optional check has been added to look for hard-coded secrets in the source code. It will warn when constants like &lt;code&gt;PASSWORD&lt;/code&gt; are assigned string literals. To run the new check, use &lt;code&gt;-t Secrets&lt;/code&gt; or &lt;code&gt;-A&lt;/code&gt; to run all checks including optional ones.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/861&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Constant Values&lt;/h3&gt;

&lt;p&gt;This release includes initial support for tracking and matching constants across the application. For example, if a model contains a constant &lt;code&gt;Model::KEYS&lt;/code&gt; which is used elsewhere, Brakeman should be able to track this value. This helps prevents false positives when safe values have been declared as constants.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/855&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Skipping Test Code&lt;/h3&gt;

&lt;p&gt;Brakeman will now ignore &lt;code&gt;if&lt;/code&gt; branches that check &lt;code&gt;Rails.env.test?&lt;/code&gt;. Additionally, branch skipping behavior (e.g. &lt;code&gt;if false...&lt;/code&gt;) has been expanded to most of Brakeman's processing instead of just in data flow analysis.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/868&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;HAML &lt;code&gt;find_and_preserve&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Brakeman will now handle uses of &lt;code&gt;find_and_preserve&lt;/code&gt; in HAML with a block.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/839&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Array#first&lt;/h3&gt;

&lt;p&gt;Calls to &lt;code&gt;Array#first&lt;/code&gt; will be replaced with the first value in the array when known.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/856&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Forgery Option&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jsyeo&quot;&gt;Jason Yeo&lt;/a&gt; provided a fix for when Brakeman encounters a non-Hash argument to &lt;code&gt;protect_from_forgery&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/849&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;&lt;code&gt;u&lt;/code&gt; Helper&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cdollins&quot;&gt;Chad Dollins&lt;/a&gt; fixed XSS false positives when the &lt;code&gt;u&lt;/code&gt; alias for &lt;code&gt;url_encode&lt;/code&gt; is used.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/863&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Fewer &lt;code&gt;slice&lt;/code&gt; False Positives&lt;/h3&gt;

&lt;p&gt;Brakeman should no longer warn when using &lt;code&gt;params.slice&lt;/code&gt; in mass assignment, SQL injection, links, and open redirects.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/867&quot;&gt;changes&lt;/a&gt; and &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/871&quot;&gt;other changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Safe popen&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about uses of &lt;code&gt;popen&lt;/code&gt; when the argument is an array, in which case the arguments are escaped.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/854&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Code Climate Engine&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GordonDiggs&quot;&gt;Gordon Diggs&lt;/a&gt; provided several improvements to the Code Climate Engine in this release:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Remove &lt;code&gt;nil&lt;/code&gt; entries from the &lt;code&gt;include_paths&lt;/code&gt; option&lt;/li&gt;
&lt;li&gt;Force output to stdout when possible&lt;/li&gt;
&lt;li&gt;Report end lines to conform with spec&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;c01ec64d35218887fc5ea2ae8babc88e9e0e7cc3c161b020725d2b17c4189858  brakeman-3.3.0.gem
f1adce1a696799342dc9f50b51975024060360dc9018358c5d8e34c1c4681bd1  brakeman-min-3.3.0.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed improvements in this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion. Please note the mailing list is no longer in use and has apparently not been delivering mail for some time.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.2.1 Released</title>
    <link href="http://brakemanscanner.org/blog/2016/02/24/brakeman-3-dot-2-1-released/"/>
    <updated>2016-02-24T21:36:00-08:00</updated>
    <id>http://brakemanscanner.org/blog/2016/02/24/brakeman-3-dot-2-1-released</id>
    <content type="html">&lt;p&gt;&lt;em&gt;Changes since 3.2.0&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Remove &lt;code&gt;multi_json&lt;/code&gt; dependency from &lt;code&gt;bin/brakeman&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;As pointed out by &lt;a href=&quot;https://github.com/bf4&quot;&gt;Benjamin Fleischer&lt;/a&gt;, there was a lingering use of &lt;code&gt;multi_json&lt;/code&gt; in &lt;code&gt;bin/brakeman&lt;/code&gt;. This only caused a problem when using the &lt;code&gt;--compare&lt;/code&gt; option.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/831&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;4a7e7a6e9ad9fed22f727fb8d471de145f55d97465b4dfb4935e3e8379667425  brakeman-min-3.2.1.gem
901202b04b1cae0a781b5a6bae2db3eecd35e9f0a044fbfaa31cac63ab636449  brakeman-3.2.1.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion. Please note the mailing list is no longer in use and has apparently not been delivering mail for some time.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.2.0 Released</title>
    <link href="http://brakemanscanner.org/blog/2016/02/24/brakeman-3-dot-2-0-released/"/>
    <updated>2016-02-24T15:46:00-08:00</updated>
    <id>http://brakemanscanner.org/blog/2016/02/24/brakeman-3-dot-2-0-released</id>
    <content type="html">&lt;p&gt;This release sheds a couple dependencies and adds support for new Ruby 2.3 syntax.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.1.5&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Support calls using &lt;code&gt;&amp;amp;.&lt;/code&gt; operator (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/796&quot;&gt;#796&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Handle CoffeeScript in HAML (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/813&quot;&gt;#813&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid render warnings about &lt;code&gt;params[:action]&lt;/code&gt;/&lt;code&gt;params[:controller]&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/812&quot;&gt;#812&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Only update ignore config file on changes (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/824&quot;&gt;#824&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Sort ignore config file&lt;/li&gt;
&lt;li&gt;Index calls in class bodies but outside methods (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/814&quot;&gt;#814&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Skip Symbol DoS check on Rails 5&lt;/li&gt;
&lt;li&gt;Fix finding calls with &lt;code&gt;targets: nil&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Remove &lt;code&gt;fastercsv&lt;/code&gt; dependency&lt;/li&gt;
&lt;li&gt;Remove &lt;code&gt;multi-json&lt;/code&gt; dependecy&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Ruby 2.3 Lonely Operator&lt;/h3&gt;

&lt;p&gt;With the update of RubyParser to 3.8.1 (and Ruby2Ruby to 2.3), Brakeman now supports the new &lt;code&gt;&amp;amp;.&lt;/code&gt; operator and should treat it like a regular method call.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/827&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;CoffeeScript in HAML&lt;/h3&gt;

&lt;p&gt;This release handles CoffeeScript embedded in HAML better and should reduce some false positives.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/817&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Render Warnings on Safe Parameters&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn on &lt;code&gt;render params[:action]&lt;/code&gt; or &lt;code&gt;render params[:controller]&lt;/code&gt;, as those values are not able to be controlled by an attacker.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/816&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;'Ignore' Configuration Changes&lt;/h3&gt;

&lt;p&gt;The &quot;ignore config&quot; files generated by Brakeman are now sorted and will only update on changes, instead of always writing a new file.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/828&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Index Calls Outside Methods&lt;/h3&gt;

&lt;p&gt;Calls that are outside methods (but inside class bodies) can now be found in Brakeman checks.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/815&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Skip Symbol DoS with Rails 5&lt;/h3&gt;

&lt;p&gt;Rails 5 requires Ruby &gt;= 2.2.2, which now garbage collects symbols. If the &lt;code&gt;SymbolDoS&lt;/code&gt; check is run on a Rails 5 application (it's already optional), it will no longer warn.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/829&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Dependency Removal&lt;/h3&gt;

&lt;p&gt;Since Ruby 1.8 is no longer supported, this release removes the legacy &lt;code&gt;fastercsv&lt;/code&gt; and &lt;code&gt;multi-json&lt;/code&gt; dependencies.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/822&quot;&gt;fastercsv&lt;/a&gt;, &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/818&quot;&gt;multi-json&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;d1d1468fcca0ec5dd99c53af2018b781a8efe06483190aef9d13b1abcbb7e2a0  brakeman-min-3.2.0.gem
07023148564668cc39911eec0354ca03774be1f8a03d66162f53a5dde44bb502  brakeman-3.2.0.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed improvements in this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion. Please note the mailing list is no longer in use and has apparently not been delivering mail for some time.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.1.5 Released</title>
    <link href="http://brakemanscanner.org/blog/2016/01/28/brakeman-3-dot-1-5-released/"/>
    <updated>2016-01-28T08:26:00-08:00</updated>
    <id>http://brakemanscanner.org/blog/2016/01/28/brakeman-3-dot-1-5-released</id>
    <content type="html">&lt;p&gt;This release adds warnings for the latest Rails CVEs.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.1.4&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Warn about RCE with &lt;code&gt;render params&lt;/code&gt; (CVE-2016-0752)&lt;/li&gt;
&lt;li&gt;Add check for &lt;code&gt;strip_tags&lt;/code&gt; XSS (CVE-2015-7579)&lt;/li&gt;
&lt;li&gt;Add check for &lt;code&gt;sanitize&lt;/code&gt; XSS (CVE-2015-7578/80)&lt;/li&gt;
&lt;li&gt;Add check for basic auth timing attack (CVE-2015-7576)&lt;/li&gt;
&lt;li&gt;Add check for &lt;code&gt;reject_if&lt;/code&gt; proc bypass (CVE-2015-7577)&lt;/li&gt;
&lt;li&gt;Add check for denial of service via routes (CVE-2015-7581)&lt;/li&gt;
&lt;li&gt;Add check for mime-type denial of service (CVE-2016-0751)&lt;/li&gt;
&lt;li&gt;Check for implicit integer comparison in dynamic finders&lt;/li&gt;
&lt;li&gt;Support directories better with &lt;code&gt;--only-files&lt;/code&gt; and &lt;code&gt;--skip-files&lt;/code&gt; (&lt;a href=&quot;https://github.com/ptoomey3&quot;&gt;Patrick Toomey&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix CodeClimate construction of &lt;code&gt;--only-files&lt;/code&gt; (&lt;a href=&quot;https://github.com/wfleming&quot;&gt;Will Fleming&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about &lt;code&gt;permit&lt;/code&gt; in SQL (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/669&quot;&gt;669&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning on user input in comparisons&lt;/li&gt;
&lt;li&gt;Handle guards using &lt;code&gt;detect&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/376&quot;&gt;376&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Handle module names with self methods (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/785&quot;&gt;#785&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add session manipulation documentation (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/791&quot;&gt;#791&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add initial Rails 5 support&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Render Remote Code Execution&lt;/h3&gt;

&lt;p&gt;First up, &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/335P1DcLG00/OfB9_LhbFQAJ&quot;&gt;CVE-2016-0752&lt;/a&gt; allows an attacker to render files outside of the application path as well as &lt;a href=&quot;https://nvisium.com/blog/2016/01/26/rails-dynamic-render-to-rce-cve-2016-0752/&quot;&gt;execute arbitrary code&lt;/a&gt;. Passing in &lt;code&gt;params&lt;/code&gt; values directly is &lt;a href=&quot;https://twitter.com/joernchen/status/456822118500823040&quot;&gt;especially dangerous&lt;/a&gt;. Brakeman has warned about passing user input to &lt;code&gt;render&lt;/code&gt; since it was first released as &quot;dynamic render path&quot; warnings. For calls to &lt;code&gt;render&lt;/code&gt; that directly pass in &lt;code&gt;params&lt;/code&gt;, it has been changed to a remote code execution warning in affected versions.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/807&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Sanitization XSS&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/OU9ugTZcbjc/PjEP46pbFQAJ&quot;&gt;CVE-2015-7579&lt;/a&gt;, &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/807&quot;&gt;CVE-2015-7578&lt;/a&gt;, and &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/uh--W4TDwmI/m_CVZtdbFQAJ&quot;&gt;CVE-2015-7580&lt;/a&gt; are vulnerabilities in &lt;code&gt;rails-html-sanitizer&lt;/code&gt; affecting the &lt;code&gt;strip_tags&lt;/code&gt; and &lt;code&gt;sanitize&lt;/code&gt; methods. Brakeman will mark uses of &lt;code&gt;strip_tags&lt;/code&gt; and &lt;code&gt;sanitize&lt;/code&gt; with &lt;code&gt;raw&lt;/code&gt; or &lt;code&gt;html_safe&lt;/code&gt; as high confidence warnings. Since these methods might be used in support gems, Brakeman will also generate a generic warning for the CVEs in apps using vulnerable versions of &lt;code&gt;rails-html-sanitizer&lt;/code&gt;..&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/805&quot;&gt;changes&lt;/a&gt; plus &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/806&quot;&gt;these&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Basic Auth Timing Attack&lt;/h3&gt;

&lt;p&gt;The implementation of &lt;code&gt;http_basic_authenticate_with&lt;/code&gt; did not use constant-time comparison when checking passwords, allowing timing attacks as described in &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/ANv0HDHEC3k/mt7wNGxbFQAJ&quot;&gt;CVE-2015-7576&lt;/a&gt;. Brakeman will warn about affected applications using &lt;code&gt;http_basic_authenticate_with&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/800&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Bypass Record Deletion Filtering&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/cawsWcQ6c8g/tegZtYdbFQAJ&quot;&gt;CVE-2015-7577&lt;/a&gt; is a bug where the &lt;code&gt;reject_if&lt;/code&gt; option to &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; will not be called if &lt;code&gt;allow_destroy&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;. Brakeman will warn on applications which meet all of these criteria and do not include the workaround in an initializer.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/804&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Wildcard Route Denial of Service&lt;/h3&gt;

&lt;p&gt;Brakeman will warn about &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/dthJ5wL69JE/YzPnFelbFQAJ&quot;&gt;CVE-2015-7581&lt;/a&gt; when it detects routes containing &lt;code&gt;':controller'&lt;/code&gt; wildcards on affected versions of Rails. These routes can be abused to cause a denial of service.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/808&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Mime-type Denial of Service&lt;/h3&gt;

&lt;p&gt;Sending many different mime-types via &lt;code&gt;Accept&lt;/code&gt; headers can cause a denial of service. Brakeman will warn about &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/9oLY_FCzvoc/w9oI9XxbFQAJ&quot;&gt;CVE-2016-0751&lt;/a&gt; in affected versions of Rails unless the workaround is present.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/801&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;MySQL Implicit Integer Conversion&lt;/h3&gt;

&lt;p&gt;As &lt;a href=&quot;http://www.phenoelit.org/blog/archives/2013/02/05/mysql_madness_and_rails/&quot;&gt;described here&lt;/a&gt;, MySQL will convert string values to match integer input - often leading to &lt;code&gt;0=0&lt;/code&gt; comparisons in queries which will always return true. Brakeman will warn when an application uses MySQL and &lt;code&gt;find_by_*&lt;/code&gt; dynamic finders on potentially sensitive fields like &lt;code&gt;password&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/798&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Better Directory Support When Skipping Files&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ptoomey3&quot;&gt;Patrick Toomey&lt;/a&gt; provided a patch to better explicitly match directories with &lt;code&gt;--only-files&lt;/code&gt; and &lt;code&gt;--skip-files&lt;/code&gt;. See the &lt;a href=&quot;https://github.com/presidentbeef/brakeman/blob/82de21d7c85acd8980ae7c4b86d77207f73b3444/OPTIONS.md#scanning-options&quot;&gt;updated options&lt;/a&gt; for details.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Please note use of &lt;code&gt;--only-files&lt;/code&gt; is strongly discouraged. Brakeman is designed to scan entire applications.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/764&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;CodeClimate File Restriction&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;include_paths&lt;/code&gt; configuration for the CodeClimate engine has been updated by &lt;a href=&quot;https://github.com/wfleming&quot;&gt;Will Fleming&lt;/a&gt; to handle spaces and other special characters.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/803/&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Permit &lt;code&gt;permit&lt;/code&gt; in SQL&lt;/h3&gt;

&lt;p&gt;Surprisingly, it is safe and effective to use &lt;code&gt;params.permit&lt;/code&gt; in SQL queries, as it will always return a hash of values which will be interpreted as parameterized values. Brakeman will no longer warn about uses of &lt;code&gt;permit&lt;/code&gt; in SQL queries.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/795&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;User Input in Comparisons&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about user input in comparisons, such as &lt;code&gt;'x' == params[:x]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/793&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Detect &lt;code&gt;detect&lt;/code&gt; Guard Statements&lt;/h3&gt;

&lt;p&gt;Fixing a &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/376&quot;&gt;bug&lt;/a&gt; filed almost 2.5 years ago, Brakeman will now recognize &lt;code&gt;Array#detect&lt;/code&gt;/&lt;code&gt;Array#find&lt;/code&gt; being used to whitelist values.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if safe_name = [:A, :B, :C].detect { |v| v == params[:v] }
  safe_name.constantize
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/794/&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Self Methods with Modules&lt;/h3&gt;

&lt;p&gt;Definitions of self methods inside nested modules was broken and is now fixed.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/792&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Session Manipulation Documentation&lt;/h3&gt;

&lt;p&gt;Documentation for session manipulation warnings has now been added to &lt;a href=&quot;http://brakemanscanner.org/docs/warning_types/session_manipulation/&quot;&gt;the Brakeman site&lt;/a&gt; and for the CodeClimate engine.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/791&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Rails 5 Support&lt;/h3&gt;

&lt;p&gt;Initial support for Rails 5 has been added to Brakeman, including a &lt;code&gt;-5&lt;/code&gt; option to force Rails 5 mode. However, no special analysis or warnings specific to Rails 5 have been implemented yet.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/799&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;CVE-2016-0753?&lt;/h3&gt;

&lt;p&gt;This release does not include a warning for &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/6jQVC1geukQ/8oYETcxbFQAJ&quot;&gt;CVE-2016-0753&lt;/a&gt;. The vulnerability appears to require using &lt;code&gt;permit!&lt;/code&gt; which Brakeman already warns about, or else passing in hashes that are not query parameters which Brakeman would not be able to detect as dangerous or benign.&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;fa9528859d4baa8cd4fbe67f634cd3741ee85d553bf59c4b2315a5ccb2976835  brakeman-3.1.5.gem
3248084efe71fcbb0c65b36e71ff0c06e65ac6bce1817a6f9d38ae0657a95bde  brakeman-min-3.1.5.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed improvements in this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter or hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt;. Please note the mailing list is no longer in use and has apparently not been delivering mail for some time.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.1.4 Released</title>
    <link href="http://brakemanscanner.org/blog/2015/12/22/brakeman-3-dot-1-4-released/"/>
    <updated>2015-12-22T10:41:00-08:00</updated>
    <id>http://brakemanscanner.org/blog/2015/12/22/brakeman-3-dot-1-4-released</id>
    <content type="html">&lt;p&gt;Brakeman Pi!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.1.3&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Emit Brakeman's native fingerprints for Code Climate engine (&lt;a href=&quot;https://github.com/noahd1&quot;&gt;Noah Davis&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Ignore &lt;code&gt;secrets.yml&lt;/code&gt; if in .gitignore (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/777&quot;&gt;#777&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Work around &lt;code&gt;safe_yaml&lt;/code&gt; error (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/778&quot;&gt;#778&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Increase test coverage for option parsing (&lt;a href=&quot;https://github.com/Zanadar&quot;&gt;Zander Mackie&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Clean up Ruby warnings (&lt;a href=&quot;https://github.com/andyw8&quot;&gt;Andy Waite&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Code Climate Fingerprints&lt;/h3&gt;

&lt;p&gt;The output format for Code Climate has been updated to include warning fingerprints as generated by Brakeman.&lt;/p&gt;

&lt;h3&gt;Ignored secrets.yml&lt;/h3&gt;

&lt;p&gt;If &lt;code&gt;secrets.yml&lt;/code&gt; is ignored via &lt;code&gt;.gitignore&lt;/code&gt;, Brakeman will ignore it, too.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/781&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Safe YAML Error&lt;/h3&gt;

&lt;p&gt;For some people, in some cases, &lt;code&gt;date&lt;/code&gt; is not loaded prior to loading &lt;code&gt;safe_yaml&lt;/code&gt;. This release ensures &lt;code&gt;date&lt;/code&gt; is loaded before using SafeYAML and only loads &lt;code&gt;safe_yaml&lt;/code&gt; on demand.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/782&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Test Coverage and Warning Cleanup&lt;/h3&gt;

&lt;p&gt;Thanks to Zander Mackie for improving test coverage (up to 91.24%) by writing tests for the command line options and thanks to Andy Waite for cleaning up various Ruby warnings.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/780&quot;&gt;test changes&lt;/a&gt;, &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/784&quot;&gt;warning fixes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;d53103d40a7ddf6ee2737770ecd0353b945a757d0fab6c50cde1eefba31f6197  brakeman-3.1.4.gem
a67d7c96090bc3b8193cf3b5db7af62ce719b9277d1b818ec6e9f96a52ad0caa  brakeman-min-3.1.4.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed improvements in this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter, joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;, or hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.1.3 Released</title>
    <link href="http://brakemanscanner.org/blog/2015/12/02/brakeman-3-dot-1-3-released/"/>
    <updated>2015-12-02T09:23:00-08:00</updated>
    <id>http://brakemanscanner.org/blog/2015/12/02/brakeman-3-dot-1-3-released</id>
    <content type="html">&lt;p&gt;This is a small bug fix release, except for one major new feature: &lt;a href=&quot;https://codeclimate.com/changelog/5653c9b67f7feb0048003051&quot;&gt;Brakeman is now available as an engine on the new Code Climate platform&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.1.2&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add Code Climate output format (&lt;a href=&quot;https://github.com/ABaldwinHunter&quot;&gt;Ashley Baldwin-Hunter&lt;/a&gt; / &lt;a href=&quot;https://github.com/dblandin&quot;&gt;Devon Blandin&lt;/a&gt; / &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/759&quot;&gt;John Pignata&lt;/a&gt; / &lt;a href=&quot;https://github.com/mrb&quot;&gt;Michael Bernstein&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Restore minimum Highline version (&lt;a href=&quot;https://github.com/kjg&quot;&gt;Kevin Glowacz&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Depend on safe_yaml 1.0 or later (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/752&quot;&gt;#753&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Check for session secret in secrets.yml (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/760&quot;&gt;#760&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning on &lt;code&gt;without_protection: true&lt;/code&gt; with hash literal (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/769&quot;&gt;#769&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Respect &lt;code&gt;exit_on_warn&lt;/code&gt; in config file (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/771&quot;&gt;#771&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid outputting false for &lt;code&gt;user_input&lt;/code&gt; in JSON&lt;/li&gt;
&lt;li&gt;Iteratively replace variables&lt;/li&gt;
&lt;li&gt;CallIndex improvements&lt;/li&gt;
&lt;li&gt;Improved tests for the Brakeman module (&lt;a href=&quot;https://github.com/bethanyr&quot;&gt;Bethany Rentz&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Make sure a &lt;code&gt;before_filter&lt;/code&gt; with block is a call (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/763&quot;&gt;#763&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Code Climate Platform&lt;/h3&gt;

&lt;p&gt;Thanks to the folks at &lt;a href=&quot;https://codeclimate.com/&quot;&gt;Code Climate&lt;/a&gt;, this release adds the ability to run Brakeman as an analysis engine on &lt;a href=&quot;https://codeclimate.com/changelog/5653c9b67f7feb0048003051&quot;&gt;Code Climate’s platform&lt;/a&gt;. You can now run Brakeman as part of Code Climate’s hosted analysis, or on your command line with their open source CLI. Brakeman can be integrated with results from your other favorite static analysis tools, giving you a unified view of issues in your code.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/758&quot;&gt;main changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Dependencies&lt;/h3&gt;

&lt;p&gt;Brakeman 3.1.0 relaxed the &lt;a href=&quot;https://github.com/JEG2/highline&quot;&gt;Highline&lt;/a&gt; dependency (to support Highline 1.7.x and up) and Brakeman 3.1.2 added a dependency on &lt;a href=&quot;https://github.com/dtao/safe_yaml&quot;&gt;safe_yaml&lt;/a&gt; without specifying a minimum version. Both of these changes resulted in some issues if combined with an application that depends on older versions of these libraries.&lt;/p&gt;

&lt;p&gt;Highline and safe_yaml now have minimum versions specified.&lt;/p&gt;

&lt;p&gt;(changes &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/762&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/753&quot;&gt;here&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;More Secrets&lt;/h3&gt;

&lt;p&gt;Production session secrets stored in &lt;code&gt;config/secrets.yml&lt;/code&gt; will now raise a warning.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/776&quot;&gt;changes&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Mass Assignment False Positive&lt;/h3&gt;

&lt;p&gt;Previously, Brakeman would warn on any mass assignment using &lt;code&gt;without_protection: true&lt;/code&gt;. &lt;a href=&quot;https://carouselapps.com/2015/11/24/using-brakeman/&quot;&gt;This blog post&lt;/a&gt; noted Brakeman would even warn if the values for mass assignment were a hash literal. This has been fixed.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/773&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Harcode Mode in Config&lt;/h3&gt;

&lt;p&gt;Brakeman now supports turning on &quot;hardcore mode&quot; (setting &lt;code&gt;:exit_on_warn: true&lt;/code&gt;) in a config file. This causes Brakeman return a non-zero exit code if any warnings are found.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/774&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;JSON Output&lt;/h3&gt;

&lt;p&gt;A refactoring caused some values of &lt;code&gt;user_input&lt;/code&gt; in JSON reports to be &lt;code&gt;false&lt;/code&gt; instead of &lt;code&gt;nil&lt;/code&gt;. This has been corrected.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/756&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;More Variable Replacement&lt;/h3&gt;

&lt;p&gt;A long time ago, Brakeman used to do two passes for data flow analysis, just in case one substitution could be replaced with yet another value. The second pass was removed when it turned out not to be that helpful in reality. However, there are some cases where it is helpful. Now Brakeman will attempt substitutions if there are more matches, but with a hard limit of 5 replacements to avoid infinite loops. This will reduce false positives in some situations.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/757&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;CallIndex Improvements&lt;/h3&gt;

&lt;p&gt;Fixed a small bug where &lt;code&gt;params&lt;/code&gt; was not a valid target when searching chained methods, as well as making it possible to search for chains beginning with a method call. Additionally, all the tests for CallIndex were broken and not testing anything.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/766&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Improved Test Coverage&lt;/h3&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/bethanyr&quot;&gt;Bethany Rentz&lt;/a&gt;, &lt;a href=&quot;https://codeclimate.com/github/presidentbeef/brakeman/coverage&quot;&gt;test coverage&lt;/a&gt; was nudged up over 90%. Plenty of low-hanging fruit remains, &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/723&quot;&gt;see this issue&lt;/a&gt; for suggestions of how to contribute!&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/735&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Brakeman Pro&lt;/h3&gt;

&lt;p&gt;Another small announcement: the first public release of &lt;a href=&quot;http://brakemanscanner.org/brakeman_pro/&quot;&gt;Brakeman Pro&lt;/a&gt; (the commercial version of Brakeman) is now available for purchase. If you are looking to financially support development of Brakeman, would like paid support, need a commercial license, or just want a slick GUI, consider checking out &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For some clarification regarding the future of Brakeman and Brakeman Pro, please see &lt;a href=&quot;http://librelist.com/browser//brakeman/2015/2/24/future-of-brakeman/&quot;&gt;this email from earlier in the year&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;57b0edcc289eb74359d2042a38ea519f96f606c89dc879e5fb53971d3d656707  brakeman-3.1.3.gem
85473af3a55c440959ea91f94fe14177ac58aa35b44fbb007c93cd742803eae6  brakeman-min-3.1.3.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed improvements in this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter, joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;, or hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.1.2 Released</title>
    <link href="http://brakemanscanner.org/blog/2015/10/28/brakeman-3-dot-1-2-released/"/>
    <updated>2015-10-28T15:59:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2015/10/28/brakeman-3-dot-1-2-released</id>
    <content type="html">&lt;p&gt;This release is mostly bug fixes and false positive reduction. However, please note fingerprints for inline render warnings will change.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.1.1&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sortable tables in HTML report (David Lanner)&lt;/li&gt;
&lt;li&gt;Add line numbers to class-level warnings&lt;/li&gt;
&lt;li&gt;Warn on SQL query keys, not values in hashes (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/738&quot;&gt;#738&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Set user input value for inline renders&lt;/li&gt;
&lt;li&gt;Avoid warning on inline renders with safe content types&lt;/li&gt;
&lt;li&gt;Treat &lt;code&gt;current_user&lt;/code&gt; like a model (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/744&quot;&gt;#744&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about model &lt;code&gt;find/find_by*&lt;/code&gt; in hrefs&lt;/li&gt;
&lt;li&gt;Handle &lt;code&gt;private def ...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Handle empty interpolation in HAML filters (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/732&quot;&gt;#732&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Catch divide-by-zero in alias processing (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/729&quot;&gt;#729&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Ignore filters that are not method names&lt;/li&gt;
&lt;li&gt;Search for config file relative to application root&lt;/li&gt;
&lt;li&gt;Use SafeYAML to load configuration files&lt;/li&gt;
&lt;li&gt;Allow inspection of recursive Sexps&lt;/li&gt;
&lt;li&gt;Reduce string allocations in &lt;code&gt;Warning#initialize&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Sortable Tables&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dlanner&quot;&gt;David Lanner&lt;/a&gt; added the ability to sort tables in the HTML report by clicking on the column headers.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/726&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Line Numbers for Class Warnings&lt;/h3&gt;

&lt;p&gt;When warning about an entire class (like a model missing &lt;code&gt;attr_accessible&lt;/code&gt;), the warning line number will point to the beginning of the class.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/733&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SQL Query Hashes&lt;/h3&gt;

&lt;p&gt;A long-standing bug in Brakeman caused it to warn about values in query hashes (e.g., &lt;code&gt;User.where(:x =&amp;gt; params[:x])&lt;/code&gt;) when it was intended to warn about user input in the &lt;em&gt;keys&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/740&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Inline Renders&lt;/h3&gt;

&lt;p&gt;Brakeman will now report the &lt;code&gt;render&lt;/code&gt; call as the &lt;code&gt;code&lt;/code&gt; value and the user input as &lt;code&gt;user_input&lt;/code&gt;. Please note the code will look a little different from what Brakeman reports, as render calls are turned into a slightly different AST node internally. This will definitely change fingerprints for these warnings.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/751&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;current_user&lt;/h3&gt;

&lt;p&gt;In a couple places, Brakeman will treat &lt;code&gt;current_user&lt;/code&gt; like a model instance, which it almost always is. This will probably be expanded in future releases.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/749&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Inline Privates&lt;/h3&gt;

&lt;p&gt;Calls to &lt;code&gt;private&lt;/code&gt; using the return value of &lt;code&gt;def&lt;/code&gt; will now work properly:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;private def secret_stuff
# ...
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/731&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Empty HAML Interpolation&lt;/h3&gt;

&lt;p&gt;Empty HAML interpolation inside of filters will no longer cause crashes and will be handled properly.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/750&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Divide-by-Zero&lt;/h3&gt;

&lt;p&gt;Brakeman sometimes divides by zero when it performs simple arithmetic during constant folding. While this is now reported as an error (and used to be, too), someday it should be a warning instead.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/730&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Config File Changes&lt;/h3&gt;

&lt;p&gt;When looking for the &lt;code&gt;config/brakeman.yml&lt;/code&gt; configuration file, Brakeman will now look relative to the application path instead of the working directory.&lt;/p&gt;

&lt;p&gt;Additionally, the &lt;code&gt;SafeYAML&lt;/code&gt; gem is used to prevent code execution for those running Brakeman against untrusted code.&lt;/p&gt;

&lt;p&gt;(changes &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/725&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/741&quot;&gt;here&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;c01f07ccc2490d0421e5974499c57f519aa371bfab5d25ba3b224e7ae9e2c415  brakeman-3.1.2.gem
d820c872cbe7bc8452c9bd8bd46d990ff1c0d53ee621c09f1997270fc978f783  brakeman-min-3.1.2.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs fixed in this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter, joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;, or hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.1.1 Released</title>
    <link href="http://brakemanscanner.org/blog/2015/09/23/brakeman-3-dot-1-1-released/"/>
    <updated>2015-09-23T08:11:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2015/09/23/brakeman-3-dot-1-1-released</id>
    <content type="html">&lt;p&gt;This release includes two new checks and a number of bug fixes.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.1.0&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add check for user input in session keys&lt;/li&gt;
&lt;li&gt;Add optional check for use of MD5 and SHA1&lt;/li&gt;
&lt;li&gt;Fix absolute paths for Windows (&lt;a href=&quot;https://github.com/spcoder&quot;&gt;Cody Frederick&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Allow searching call index methods by regex (&lt;a href=&quot;https://github.com/aianus&quot;&gt;Alex Ianus&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Consider &lt;code&gt;j&lt;/code&gt;/&lt;code&gt;escape_javascript&lt;/code&gt; safe inside Haml JavaScript blocks (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/708&quot;&gt;#708&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Better Haml processing of &lt;code&gt;find_and_preserve&lt;/code&gt; calls&lt;/li&gt;
&lt;li&gt;Fix chained assignment&lt;/li&gt;
&lt;li&gt;Treat &lt;code&gt;a.try(&amp;amp;:b)&lt;/code&gt; like &lt;code&gt;a.b()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add more Arel methods to be ignored in SQL (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/711&quot;&gt;#711&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning when linking to decorated models (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/683&quot;&gt;#683&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Support newer terminal-table releases (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/709&quot;&gt;#709&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Session Manipulation Check&lt;/h3&gt;

&lt;p&gt;As suggested by &lt;a href=&quot;https://twitter.com/joernchen&quot;&gt;Joernchen&lt;/a&gt;, Brakeman will now look for user input in session keys which can lead to session manipulation.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/720&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Optional Check for Weak Hashes&lt;/h3&gt;

&lt;p&gt;An optional check to look for use of MD5 and SHA1 has been added to this release. Run with &lt;code&gt;-t WeakHash&lt;/code&gt; to use just this optional check or &lt;code&gt;-A&lt;/code&gt; to run all checks.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/722&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Windows Paths&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/spcoder&quot;&gt;Cody Frederick&lt;/a&gt; fixed an issue with determining absolute paths on Windows.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/714&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Search for Methods by Regex&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/aianus&quot;&gt;Alex Ianus&lt;/a&gt; re-introduced the ability to search the CallIndex with regular expressions for methods:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tracker.find_call(method: /_something$/)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/710&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Haml Processing&lt;/h3&gt;

&lt;p&gt;Haml users may have noticed warnings with &lt;code&gt;find_and_preserve(Haml::Filters::Javascript.render_with_options(...))&lt;/code&gt; in them. This has been fixed so &lt;code&gt;find_and_preserve&lt;/code&gt; is treated as though it just passes through its arguments. Calls to &lt;code&gt;render_with_options&lt;/code&gt; will be treated as unescaped output.&lt;/p&gt;

&lt;p&gt;Along with this change, &lt;code&gt;j&lt;/code&gt; and &lt;code&gt;escape_javascript&lt;/code&gt; will be considered safe inside &lt;code&gt;:javascript&lt;/code&gt; filters in Haml.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/716&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Chained Assignment&lt;/h3&gt;

&lt;p&gt;Chained assignments like &lt;code&gt;a = b = c = 1&lt;/code&gt; will now be handled correctly. This fixes &lt;a href=&quot;https://stackoverflow.com/questions/11314450/how-to-secure-link-to-variable-cross-site-scripting-vulnerabilities&quot;&gt;a very old issue from 2012&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/718&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Trying More&lt;/h3&gt;

&lt;p&gt;While Brakeman already treated &lt;code&gt;a.try(:b)&lt;/code&gt; like &lt;code&gt;a.b()&lt;/code&gt;, there is a surprising amount of code which does &lt;code&gt;a.try(&amp;amp;:b)&lt;/code&gt;. This is totally unncessary, but Brakeman now handles it as well.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/717&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;More Arel Whitelisting&lt;/h3&gt;

&lt;p&gt;A number of Arel methods have been whitelisted to avoid warning about them inside SQL query building.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/719&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Decorated Models in Links&lt;/h3&gt;

&lt;p&gt;If the Draper gem is used, Brakeman will ignore calls to &lt;code&gt;decorate&lt;/code&gt; in &lt;code&gt;link_to&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/721&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;terminal-table&lt;/h3&gt;

&lt;p&gt;Newer &lt;a href=&quot;https://github.com/tj/terminal-table&quot;&gt;terminal-table&lt;/a&gt; releases are supported now and the dependency has been relaxed.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/712&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cfd1840116c20b0b8932720fdaac09dd4e47091a  brakeman-3.1.1.gem
603389da732d307a014af445a1f312415b65a682  brakeman-min-3.1.1.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter, joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;, or hanging out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.1.0 Released</title>
    <link href="http://brakemanscanner.org/blog/2015/08/30/brakeman-3-dot-1-0-released/"/>
    <updated>2015-08-30T21:46:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2015/08/30/brakeman-3-dot-1-0-released</id>
    <content type="html">&lt;p&gt;There are several changes in this release which may affect consumers of the JSON report as well as anyone relying on the ignore configuration file. Please try out &lt;a href=&quot;https://gist.github.com/presidentbeef/52d5cce0fd26b901179e&quot;&gt;this script&lt;/a&gt; to migrate ignore configurations.&lt;/p&gt;

&lt;p&gt;Additionally, some dependencies have been updated to versions no longer supporting Ruby 1.8. As a consequence, Brakeman no longer runs &quot;out of the box&quot; on Ruby 1.8, although you may be able to use the &lt;code&gt;brakeman-min&lt;/code&gt; gem. No more attempts will be made to support running on Ruby 1.8 in future releases. Please note that does not mean Ruby 1.8 code cannot be analyzed; that still works fine.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.0.5&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Update dependencies to Ruby 1.8 incompatible versions&lt;/li&gt;
&lt;li&gt;Update render path information in JSON reports&lt;/li&gt;
&lt;li&gt;Remove renaming of several &lt;code&gt;Sexp&lt;/code&gt; nodes&lt;/li&gt;
&lt;li&gt;Treat &lt;code&gt;html_safe&lt;/code&gt; like &lt;code&gt;raw&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use railties version if rails gem is missing (&lt;a href=&quot;https://github.com/lucasmazza&quot;&gt;Lucas Mazza&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Warn about unverified SSL mode in &lt;code&gt;Net::HTTP.start&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Expand XSS safe methods&lt;/li&gt;
&lt;li&gt;Avoid warning on path creation methods in &lt;code&gt;link_to&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add support for &lt;code&gt;gems.rb&lt;/code&gt;/&lt;code&gt;gems.locked&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/705&quot;&gt;#705&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix low confidence XSS warning code&lt;/li&gt;
&lt;li&gt;Avoid duplicate &lt;code&gt;eval&lt;/code&gt; warnings&lt;/li&gt;
&lt;li&gt;Convert YAML config keys to symbols (&lt;a href=&quot;https://github.com/KarlGl&quot;&gt;Karl Glaser&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Ruby 1.8 Incompatibility&lt;/h3&gt;

&lt;p&gt;Ruby 1.8.7 has been unsupported by the Ruby core team for over a year now (and that was after it had a six month extension). Several libraries Brakeman depends on have stopped supporting Ruby 1.8. Unfortunately, there is no way to specify depending on different gem versions for different Ruby versions. This left Brakeman in a difficult place - use old libraries (and cause conflicts in Gemfiles...), use new libraries (and lose 1.8 support), or don't declare dependencies (and force users to install dependencies themselves). In the end, it seems most people are okay with dropping Ruby 1.8 support.&lt;/p&gt;

&lt;p&gt;That being said, Brakeman 3.1.0 should run fine on Ruby 1.8 if dependencies are set up manually to be compatible.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/684&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Render Path Improvements&lt;/h3&gt;

&lt;p&gt;Previously, render paths were arrays of strings. The strings represented the locations of calls to &lt;code&gt;render&lt;/code&gt; (implicit or explicit), either in the form &lt;code&gt;&amp;lt;Controller&amp;gt;#&amp;lt;method&amp;gt;&lt;/code&gt; or &lt;code&gt;Template:&amp;lt;template/path&amp;gt;&lt;/code&gt;. While the information was somewhat useful to humans, it was not easily manipulated by computers and it was difficult to link the strings back to application code.&lt;/p&gt;

&lt;p&gt;Now, render paths are arrays of hashes. The hash has a &lt;code&gt;type&lt;/code&gt; key with a value of either &lt;code&gt;controller&lt;/code&gt; or &lt;code&gt;template&lt;/code&gt;. For controllers, the hash includes &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;method&lt;/code&gt;, &lt;code&gt;line&lt;/code&gt;, and &lt;code&gt;file&lt;/code&gt;. For templates, the hash includes &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;line&lt;/code&gt;, and &lt;code&gt;file&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[
  {
    &quot;type&quot;: &quot;controller&quot;,
    &quot;class&quot;: &quot;ProductsController&quot;,
    &quot;method&quot;: &quot;create&quot;,
    &quot;line&quot;: 50,
    &quot;file&quot;: &quot;app/controllers/products_controller.rb&quot;
  },
  {
    &quot;type&quot;: &quot;template&quot;,
    &quot;name&quot;: &quot;products/new&quot;,
    &quot;line&quot;: 2,
    &quot;file&quot;: &quot;app/views/products/new.html.erb&quot;
  }
]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Implicit renders from controller actions point to the line at the end of the method.&lt;/p&gt;

&lt;p&gt;Rendered templates in JSON reports used to include the render location as well. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&quot;location&quot;: {
  &quot;type&quot;: &quot;template&quot;,
  &quot;template&quot;: &quot;home/index (HomeController#index)&quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Since this information is redundant with the render path, it has been removed.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/702&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;S-Expression Names&lt;/h3&gt;

&lt;p&gt;Starting a long time ago, Brakeman rewrote several s-expression names for no reason other than clarity (for example, &lt;code&gt;dstr&lt;/code&gt; becomes &lt;code&gt;string_interp&lt;/code&gt;). However, not all nodes were changed, leading to code that must check for both the original name from RubyParser and Brakeman's name. This leads to messy code and subtle bugs.&lt;/p&gt;

&lt;p&gt;The following node names were removed: &lt;code&gt;string_interp&lt;/code&gt;, &lt;code&gt;string_eval&lt;/code&gt;, &lt;code&gt;methdef&lt;/code&gt;, &lt;code&gt;selfdef&lt;/code&gt;, &lt;code&gt;call_with_block&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;While this seems like a silly internal change, it will unfortunately change any fingerprints containing these node types. A &lt;a href=&quot;https://gist.github.com/presidentbeef/52d5cce0fd26b901179e&quot;&gt;quick script is available&lt;/a&gt; to migrate ignore files without having to manually update the fingerprints.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/701&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;html_safe&lt;/h3&gt;

&lt;p&gt;As we hopefully all know now, &lt;code&gt;html_safe&lt;/code&gt; is not safe, it marks a string so it is &lt;em&gt;not&lt;/em&gt; escaped when output in a template. Since this is essentially the same as calling &lt;code&gt;raw&lt;/code&gt; on a string, Brakeman will treat them both as unescaped output.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/675&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Use railties Version&lt;/h3&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/lucasmazza&quot;&gt;Lucas Mazza&lt;/a&gt;, if an application depends on &lt;code&gt;railties&lt;/code&gt; instead of &lt;code&gt;rails&lt;/code&gt;, Brakeman will now use the gem version of &lt;code&gt;railties&lt;/code&gt; as the Rails version.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/695/files&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SSL Verify Mode&lt;/h3&gt;

&lt;p&gt;As suggested by &lt;a href=&quot;https://github.com/gmcnaughton&quot;&gt;Gordon McNaughton&lt;/a&gt;, Brakeman now warns when SSL certificate verification is turned off in calls to &lt;code&gt;Net::HTTP.start&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/694&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Safe Methods&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;--safe-methods&lt;/code&gt; option (which only applies to XSS warnings) and &lt;code&gt;--url-safe-methods&lt;/code&gt; (which applies to values pass to &lt;code&gt;link_to&lt;/code&gt;) now work on methods that have a target. For example, &lt;code&gt;--url-safe-methods this_is_safe&lt;/code&gt; will ignore &lt;code&gt;link_to util.this_is_safe(params[:x])&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/674&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;More Safe Methods&lt;/h3&gt;

&lt;p&gt;Brakeman warns about user input in the href parameter of &lt;code&gt;link_to&lt;/code&gt; because it is possible to pass in a string starting with &lt;code&gt;javascript:&lt;/code&gt;, which will execute the XSS payload when the victim clicks on it. However, it will no longer warn about methods that look like path helpers or URL generation methods. It will still warn about URL methods on models, since those may be direct user input.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/674&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;gems.rb/gems.locked&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;gems.rb&lt;/code&gt;/&lt;code&gt;gems.locked&lt;/code&gt; are alternative names for &lt;code&gt;Gemfile&lt;/code&gt;/&lt;code&gt;Gemfile.lock&lt;/code&gt;. Brakeman now supports either pair.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/705&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Weak Confidence XSS Warnings&lt;/h3&gt;

&lt;p&gt;A small bug caused weak confidence XSS warnings to have a warning code of &lt;code&gt;5&lt;/code&gt; (which is for unescaped JSON) instead of &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/commit/9fec336e7cbbbb74add9ef9c6c90c65efa0ebcc7&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Duplicate Eval Warnings&lt;/h3&gt;

&lt;p&gt;There should now be fewer duplicate warnings about dangerous calls to &lt;code&gt;eval&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/670/files&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Configuration Keys&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/KarlGl&quot;&gt;Karl Glaser&lt;/a&gt; added a change so Brakeman configuration files may use string or symbol keys in the YAML file. However, it is recommended to use &lt;code&gt;brakeman -C&lt;/code&gt; to generate configurations automatically, because writing YAML by hand is annoying.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/696&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Internal Changes&lt;/h3&gt;

&lt;p&gt;Internally, most of the information Brakeman tracks is kept in hash tables. This is changing, starting with the addition of &lt;code&gt;Controller&lt;/code&gt;, &lt;code&gt;Model&lt;/code&gt;, &lt;code&gt;Template&lt;/code&gt;, and &lt;code&gt;Config&lt;/code&gt; classes.&lt;/p&gt;

&lt;p&gt;Unfortunately, this will probably break any code that relies on Brakeman's internals (such as custom checks).&lt;/p&gt;

&lt;p&gt;Fortunately, in almost all cases it will simplify code and in many cases it just means changing a hash access (like &lt;code&gt;template[:name]&lt;/code&gt;) to a method call (&lt;code&gt;template.name&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/690&quot;&gt;the pull request&lt;/a&gt; for examples.&lt;/p&gt;

&lt;p&gt;Also note this is just the beginning of these internal changes...sorry! Hopefully this leads to improvements and makes it easier to write Brakeman code.&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;236af597e5cbcc0e647c02c4087ceb5965510435  brakeman-3.1.0.gem
fe06faf67e781c4c4dc5ee362918ef2dfd8e1ce2  brakeman-min-3.1.0.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.0.5 Released</title>
    <link href="http://brakemanscanner.org/blog/2015/06/19/brakeman-3-dot-0-5-released/"/>
    <updated>2015-06-19T18:09:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2015/06/19/brakeman-3-dot-0-5-released</id>
    <content type="html">&lt;p&gt;And this is why you don't rush out releases.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.0.4&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fix check for CVE-2015-3227 (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/667&quot;&gt;#667&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Fix CVE-2015-3227 Check&lt;/h3&gt;

&lt;p&gt;Includes information that Rails 3.2.22 is the fix version for anything before Rails 4.0. Fixes warning message when exact Rails version cannot be determined. Fixes link URL to point to the CVE announcement.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/668&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;b78e11b745128ed7f9acd5d0c4f5e0e3a81f4d07  brakeman-min-3.0.5.gem
c62cc782595d4995aa385b6bd96c2485ac932077  brakeman-3.0.5.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.0.4 Released</title>
    <link href="http://brakemanscanner.org/blog/2015/06/18/brakeman-3-dot-0-4-released/"/>
    <updated>2015-06-18T10:50:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2015/06/18/brakeman-3-dot-0-4-released</id>
    <content type="html">&lt;p&gt;This is a small release prompted by Tuesday's CVE announcements. New checks for the CVEs directly in Rails have been added, and can also test for the suggested workarounds. Please consider using &lt;a href=&quot;https://github.com/rubysec/bundler-audit&quot;&gt;bundler-audit&lt;/a&gt; for detecting known vulnerable versions of gems, as Brakeman has only limited coverage.&lt;/p&gt;

&lt;p&gt;Note this release also upgrades the RubyParser dependency. The latest RubyParser has several bug fixes and initial support for new Ruby 2.2 syntax.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.0.3&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add check for CVE-2015-3226 (XSS via JSON keys)&lt;/li&gt;
&lt;li&gt;Add check for CVE-2015-3227 (XML DoS)&lt;/li&gt;
&lt;li&gt;Treat &lt;code&gt;&amp;lt;%==&lt;/code&gt; as unescaped output (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/661&quot;&gt;#661&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Update &lt;code&gt;ruby_parser&lt;/code&gt; dependency to 3.7.0&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Cross Site Scripting in JSON&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/7VlB_pck3hU/3QZrGIaQW6cJ&quot;&gt;CVE-2015-3226&lt;/a&gt; is an issue with converting hashes to JSON. The keys do not properly escape HTML entities, leading to potential cross site scripting vulnerabilities. Brakeman will warn unless the workaround is included in an initializer (essentially verbatim). The warning is high confidence if there is evidence of explicitly converting values to JSON, otherwise medium.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/665&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;XML Denial of Service&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/bahr2JLnxvk/x4EocXnHPp8J&quot;&gt;CVE-2015-3227&lt;/a&gt; is a potential denial of service when parsing deeply nested XML requests. Brakeman will warn about this unless there is an initializer changing the XML parser as described in the CVE. Currently it looks for either &lt;code&gt;LibXML&lt;/code&gt; or &lt;code&gt;Nokogiri&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/666&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Double Equals is Unescaped Output&lt;/h3&gt;

&lt;p&gt;Brakeman will now treat &lt;code&gt;&amp;lt;%== x %&amp;gt;&lt;/code&gt; in ERB templates as unescaped output.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/663&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bf6ae72a0b516ecf65b9165d07e86259ef9fa5d3  brakeman-3.0.4.gem
c1c2ea5402d8a89fe4a645947ec324d0603d3976  brakeman-min-3.0.4.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.0.3 Released</title>
    <link href="http://brakemanscanner.org/blog/2015/04/30/brakeman-3-dot-0-3-released/"/>
    <updated>2015-04-30T09:50:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2015/04/30/brakeman-3-dot-0-3-released</id>
    <content type="html">&lt;p&gt;This is mostly a bug fix release, but does introduce a new warning code for when &lt;code&gt;protect_from_forgery&lt;/code&gt; is not set to raise exceptions in Rails 4.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.0.2&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Warn about &lt;code&gt;protect_from_forgery&lt;/code&gt; without exceptions (&lt;a href=&quot;https://github.com/oreoshake&quot;&gt;Neil Matatall&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add Rake task to exit with error code on warnings (&lt;a href=&quot;https://github.com/masarakki&quot;&gt;masarakki&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Ignore &lt;code&gt;quoted_table_name&lt;/code&gt; in SQL (&lt;a href=&quot;https://github.com/sobrinho&quot;&gt;Gabriel Sobhrinho&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Ignore more Arel methods in SQL (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/604&quot;&gt;#604&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Warn about RCE and file access with &lt;code&gt;open&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Handle &lt;code&gt;Array#include?&lt;/code&gt; guard conditionals (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/604&quot;&gt;#604&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Handle lambdas as filters&lt;/li&gt;
&lt;li&gt;Do not ignore targets of &lt;code&gt;to_s&lt;/code&gt; in SQL (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/638&quot;&gt;#638&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;New CSRF Warning&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/oreoshake&quot;&gt;Neil Matatall&lt;/a&gt; has added a warning for Rails 4 applications that do not pass the &lt;code&gt;with: :exception&lt;/code&gt; option to &lt;code&gt;protect_from_forgery&lt;/code&gt;. The default behavior of clearing out the session (but still processing the request) has lead to vulnerabilities in some applications. GitHub &lt;a href=&quot;https://bounty.github.com/researchers/LukasReschke.html&quot;&gt;recently awarded a bug bounty&lt;/a&gt; for a vulnerability caused by this behavior.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/648&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Additional Rake Task&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/masarakki&quot;&gt;Masarakki&lt;/a&gt; added a Rake task that will exit with an error code if any warnings are found (like &lt;code&gt;brakeman -z&lt;/code&gt;). The task can be run with &lt;code&gt;rake brakeman:check&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;However, please note the use of Rake tasks to run Brakeman is discouraged, since it loads the entire Rails application which is unnecessary and may cause conflicts with Brakeman dependencies.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/637&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Reduce SQL Injection False Positives&lt;/h3&gt;

&lt;p&gt;A patch from &lt;a href=&quot;https://github.com/sobrinho&quot;&gt;Gabriel Sobhrinho&lt;/a&gt; removes warnings about &lt;code&gt;quoted_table_name&lt;/code&gt; in SQL queries.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/647&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;An additional change was made to ignore more Arel methods nested inside of other queries. This should reduce many of the false positives seen with combining Arel and ActiveRecord queries.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/653&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Remote Code Execution in open()&lt;/h3&gt;

&lt;p&gt;As noted in &lt;a href=&quot;http://sakurity.com/blog/2015/02/28/openuri.html&quot;&gt;Egor Homakov's blog post&lt;/a&gt;, &lt;code&gt;open&lt;/code&gt; can actually be used to spawn new processes by starting the argument with a pipe &lt;code&gt;|&lt;/code&gt;. Brakeman will now warn about remote code execution via &lt;code&gt;open&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/643&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Simple Guard Conditions&lt;/h3&gt;

&lt;p&gt;Brakeman should now recognize guard conditions that look exactly like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if [1, 2, &quot;a&quot;, &quot;b&quot;].include? x
  do_something_dangerous_with x
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This may resolve some false positives. If you have code similar to this, please consider &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;opening an issue&lt;/a&gt; and perhaps it can be handled similarly.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/640&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Lambda Filters&lt;/h3&gt;

&lt;p&gt;Filters that use lambdas instead of blocks should now be handled correctly.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/649&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Handle to_s in SQL&lt;/h3&gt;

&lt;p&gt;Values with &lt;code&gt;to_s&lt;/code&gt; called on them were being ignored when checking for SQL injection. This has been fixed.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/639&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;170c3dd6925373b7da2e27fd1decf2957b35dc43  brakeman-3.0.3.gem
f126e305404a61e99f9ddb848996d87325d1485a  brakeman-min-3.0.3.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.0.2 Released</title>
    <link href="http://brakemanscanner.org/blog/2015/03/09/brakeman-3-dot-0-2-released/"/>
    <updated>2015-03-09T14:54:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2015/03/09/brakeman-3-dot-0-2-released</id>
    <content type="html">&lt;p&gt;This is entirely a bugfix release, no new features. However, the fixes may cause line numbers and warning fingerprints to change.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 3.0.1&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fix HTML reports with GitHub repos (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/624&quot;&gt;#624&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Handle processing of explictly shadowed block arguments (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/612&quot;&gt;#612&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix CSV output when there are no warnings (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/615&quot;&gt;#615&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Update &lt;code&gt;ruby_parser&lt;/code&gt; to ~&gt; 3.6.2&lt;/li&gt;
&lt;li&gt;Treat &lt;code&gt;primary_key&lt;/code&gt;, &lt;code&gt;table_name_prefix&lt;/code&gt;, &lt;code&gt;table_name_suffix&lt;/code&gt; as safe in SQL&lt;/li&gt;
&lt;li&gt;Fix using &lt;code&gt;--compare&lt;/code&gt; and &lt;code&gt;--add-checks-path&lt;/code&gt; together&lt;/li&gt;
&lt;li&gt;Alias process methods called in class scope on models&lt;/li&gt;
&lt;li&gt;Avoid warning about mass assignment with string literals&lt;/li&gt;
&lt;li&gt;Only report original regex DoS locations&lt;/li&gt;
&lt;li&gt;Report correct file for &lt;code&gt;simple_format&lt;/code&gt; usage CVE warning&lt;/li&gt;
&lt;li&gt;Ignore case value in XSS checks&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;HTML Reports with GitHub Repo&lt;/h3&gt;

&lt;p&gt;HTML reports were sometimes causing an error when linking to a GitHub repo.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/625&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Shadowed Block Arguments&lt;/h3&gt;

&lt;p&gt;There was an error handling explicitly shadowed block arguments like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;some_array.each do |item; x, y|
  # Stuff
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/613&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;CSV Output&lt;/h3&gt;

&lt;p&gt;Empty tables caused the CSV report to fail.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/616&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;RubyParser Update&lt;/h3&gt;

&lt;p&gt;Brakeman has been very behind on RubyParser versions due to a line number issue which is nearly always present in HAML templates. As a workaround, Brakeman now strips newline literals from HAML templates. While this does cause some line numbers to be off, but typically newline literals are caused by HAML formatting. Removing them allows Brakeman to use the latest RubyParser.&lt;/p&gt;

&lt;p&gt;Brakeman now requires RubyParser 3.6.2 as a minimum.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/620&quot;&gt;HAML changes&lt;/a&gt;, &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/621&quot;&gt;dependency change&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;More SQL-safe Methods&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about &lt;code&gt;primary_key&lt;/code&gt;, &lt;code&gt;table_name_prefix&lt;/code&gt;, and &lt;code&gt;table_name_suffix&lt;/code&gt; in SQL.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/635&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Compare with External Checks&lt;/h3&gt;

&lt;p&gt;Fix an issue when using &lt;code&gt;--compare&lt;/code&gt; and &lt;code&gt;--add-checks-path&lt;/code&gt; together.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/635&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Process Class-Scope Method Calls&lt;/h3&gt;

&lt;p&gt;Previously, Brakeman would process method calls at the class scope (e.g., &lt;code&gt;belongs_to&lt;/code&gt;) in models and then throw away the call. This meant the call never received data flow analysis. This was particularly noticeable when those calls involved blocks. This has been fixed and has improved results, especially where constants are used.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/634&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Mass Assignment with Literals&lt;/h3&gt;

&lt;p&gt;Brakeman no longer warns about mass assignment if the arguments are a string or symbol. In those cases it probably isn't an ActiveRecord subclass in any case.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/631&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Reduce Regex DoS Duplicates&lt;/h3&gt;

&lt;p&gt;Duplicate regular expression denial of service warnings were being reported due to data flow analysis.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/627&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;File for simple_format CVE&lt;/h3&gt;

&lt;p&gt;Warnings regarding the old &lt;code&gt;simple_format&lt;/code&gt; CVE will now point to the file where &lt;code&gt;simple_format&lt;/code&gt; was called, not the Gemfile.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/623/files&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Ignore Case Value&lt;/h3&gt;

&lt;p&gt;Do not report about XSS regarding the value used in &lt;code&gt;case&lt;/code&gt; expressions.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/619&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;87413b544b5eae0cac9f037e2b62b1fe3f0fee5e  brakeman-3.0.2.gem
cfcf3080a992ca173c64dd98fe239e8bd9bb0eaa  brakeman-min-3.0.2.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.0.1 Released</title>
    <link href="http://brakemanscanner.org/blog/2015/01/22/brakeman-3-dot-0-1-released/"/>
    <updated>2015-01-22T18:38:00-08:00</updated>
    <id>http://brakemanscanner.org/blog/2015/01/22/brakeman-3-dot-0-1-released</id>
    <content type="html">&lt;p&gt;This is a small release, but may change some fingerprints of warnings in libraries. Also, the Slim dependency has been removed due to conflicts. See below for details.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Remove Slim dependency (&lt;a href=&quot;https://github.com/cwest&quot;&gt;Casey West&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Properly process libraries (&lt;a href=&quot;https://github.com/ptoomey3&quot;&gt;Patrick Toomey&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;--add-libs-path&lt;/code&gt; for additional libraries (&lt;a href=&quot;https://github.com/ptoomey3&quot;&gt;Patrick Toomey&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Allow for controllers/models/templates in directories under &lt;code&gt;app/&lt;/code&gt; (&lt;a href=&quot;https://github.com/nealharris&quot;&gt;Neal Harris&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid &lt;code&gt;protect_from_forgery&lt;/code&gt; warning unless &lt;code&gt;ApplicationController&lt;/code&gt; inherits from &lt;code&gt;ActionController::Base&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/573&quot;&gt;#573&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Properly format command interpolation (again)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Slim Gem Dependency Removed&lt;/h3&gt;

&lt;p&gt;Since &lt;a href=&quot;https://github.com/slim-template/slim-rails/releases/tag/3.0.1&quot;&gt;Rails 4.2 requires Slim 3.0.1&lt;/a&gt; and &lt;a href=&quot;https://github.com/slim-template/slim/blob/bb7ca78c1ea9629d8b57a06fcb99c938c9d7640e/CHANGES#L8&quot;&gt;Slim 3.0 dropped support for Ruby 1.8.7&lt;/a&gt;, there is no way to satisfy dependencies for Slim, Rails 4.2, and retain support for Ruby 1.8.7 when Brakeman is added as a dependency in a &lt;code&gt;Gemfile&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The only acceptable solution is to not include Slim as a dependency at all and let users sort it out for themselves. Sorry for the unfortunate situation, but there is no way to add Brakeman to a &lt;code&gt;Gemfile&lt;/code&gt; and avoid Bundler attempting to resolve Brakeman's dependencies against the application's dependencies, despite there being no relation.&lt;/p&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/cwest&quot;&gt;Casey West&lt;/a&gt; for working through solutions for this issue.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/602&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Library Processing&lt;/h3&gt;

&lt;p&gt;Libraries were added to the call index (which meant they were scanned during checks) in the 3.0.0 release, but there were still not being processed like most other code. This led to some checks not finding issues they should have. &lt;a href=&quot;https://github.com/ptoomey3&quot;&gt;Patrick Toomey&lt;/a&gt; pointed this out and contributed a fix.&lt;/p&gt;

&lt;p&gt;This change may affect existing warning fingerprints for warnings in libraries. Apologies for the inconvenience.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/605&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Allow Additional Library Paths&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ptoomey3&quot;&gt;Patrick Toomey&lt;/a&gt; also added a new option &lt;code&gt;--add-libs-path&lt;/code&gt; to treat more paths as if they were in &lt;code&gt;lib/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/606&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Scan Application Subdirectories&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nealharris&quot;&gt;Neal Harris&lt;/a&gt; contributed a change to support applications with multiple applications under &lt;code&gt;app/&lt;/code&gt;, such as &lt;code&gt;app/cool_team/controllers/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/607&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Avoid CSRF Warning for APIs&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about missing &lt;code&gt;protect_from_forgery&lt;/code&gt; if &lt;code&gt;ApplicationController&lt;/code&gt; does not inherit from &lt;code&gt;ActionController::Base&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/573&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Command Interpolation Format Fix&lt;/h3&gt;

&lt;p&gt;Previous release had an incomplete fix for this. There should be no impact to warning fingerprints.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/608&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 3.0.0 Released</title>
    <link href="http://brakemanscanner.org/blog/2015/01/02/brakeman-3-dot-0-0-released/"/>
    <updated>2015-01-02T17:09:00-08:00</updated>
    <id>http://brakemanscanner.org/blog/2015/01/02/brakeman-3-dot-0-0-released</id>
    <content type="html">&lt;p&gt;This is a major version release of Brakeman which introduces some backwards-incompatible changes. Very likely this release will cause many changes in reports, including fingerprints on existing warnings.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 2.6.3&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--exit-on-warn --compare&lt;/code&gt; only returns error code on new warnings (&lt;a href=&quot;https://github.com/jeffyip&quot;&gt;Jeff Yip&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Sort warnings by fingerprint in JSON report (&lt;a href=&quot;https://github.com/jeffyip&quot;&gt;Jeff Yip&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;CVEs report correct line and file name (Gemfile/Gemfile.lock) (&lt;a href=&quot;https://github.com/pwnetrationguru&quot;&gt;Rob Fletcher&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Change &lt;code&gt;--separate-models&lt;/code&gt; to be the default&lt;/li&gt;
&lt;li&gt;Local variables are no longer formatted as &lt;code&gt;(local var)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Actually skip skipped before filters&lt;/li&gt;
&lt;li&gt;Remove &quot;fake filters&quot; from warning fingerpints&lt;/li&gt;
&lt;li&gt;Index calls in &lt;code&gt;lib/&lt;/code&gt; files&lt;/li&gt;
&lt;li&gt;Handle symmetric multiple assignment&lt;/li&gt;
&lt;li&gt;Do not branch for self attribute assignment &lt;code&gt;x = x.y&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/552&quot;&gt;#552&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Move Symbol DoS to optional checks&lt;/li&gt;
&lt;li&gt;Add check for cross site scripting via inline renders&lt;/li&gt;
&lt;li&gt;Add check for CVE-2014-7829&lt;/li&gt;
&lt;li&gt;Fix parsing of &lt;code&gt;&amp;lt;%==&lt;/code&gt; in ERB&lt;/li&gt;
&lt;li&gt;Fix output format of command interpolation&lt;/li&gt;
&lt;li&gt;Fix CVE for CVE-2011-2932&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Exit Code When Comparing&lt;/h3&gt;

&lt;p&gt;When using &lt;code&gt;--exit-on-warn --compare&lt;/code&gt;, Brakeman will only return a non-zero exit code when there are new warnings. Previous behavior was to return non-zero exit code if there were any differences between reports (including fixed warnings).&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/588&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Sort Warnings in JSON Report&lt;/h3&gt;

&lt;p&gt;Warnings are now sorted by their fingerprint in the JSON report to provide more stable output.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/587&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Report Line Numbers for CVEs&lt;/h3&gt;

&lt;p&gt;Previously, CVE warnings typically pointed to &lt;code&gt;Gemfile&lt;/code&gt; with no line number information. Now CVEs should point to &lt;code&gt;Gemfile&lt;/code&gt; or &lt;code&gt;Gemfile.lock&lt;/code&gt; as appropriate and include the line number for the vulnerable gem dependency.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/557&quot;&gt;changes&lt;/a&gt; and &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/569&quot;&gt;more changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Mass Assignment Warnings Default to per Model&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;--separate-models&lt;/code&gt; option is now on by default. This means warnings about missing &lt;code&gt;attr_accessible&lt;/code&gt; will be reported for each model instead of rolling them into a single warning.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/586&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Local Variable Format&lt;/h3&gt;

&lt;p&gt;Local variables are no longer formatted as &lt;code&gt;(local var)&lt;/code&gt; in warning output.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/594&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Skip Skipped Filters&lt;/h3&gt;

&lt;p&gt;Before filters which are skipped are now actually skipped during data flow analysis.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/592&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Fake Filter Change&lt;/h3&gt;

&lt;p&gt;Before filters defined as blocks (instead of methods) are internally represented as methods with random names prepended by &lt;code&gt;fake_filter&lt;/code&gt;. Since the method names were not stable, any warnings inside the filters would have inconsistent fingerprints. Now warnings inside of before filters will always be reported with &lt;code&gt;before_filter&lt;/code&gt; as the method name.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/572&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Index Calls in Libraries&lt;/h3&gt;

&lt;p&gt;Classes defined in &lt;code&gt;lib/&lt;/code&gt; files will now be included in the method call index and searched for vulnerabilities. As these files were already being processed, this has not added any significant overhead in testing.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/571&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Handle Multiple Assignment&lt;/h3&gt;

&lt;p&gt;Simple symmetric multiple assignments (also called &quot;parallel assignment&quot;) like &lt;code&gt;x, y = 1, 2&lt;/code&gt; are now handled like normal assignments.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/577&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Avoid Branching on Self Assignment&lt;/h3&gt;

&lt;p&gt;Brakeman no longer creates new union values for self assignment of attributes.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/578&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Symbol DoS is an Optional Check&lt;/h3&gt;

&lt;p&gt;In this release the check for denial of service via symbol creation has been changed to an optional check. Memory exhaustion by creating lots of new symbols is an unlikely attack and easily mitigated by having at least two web servers. Additionally&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/570&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Warn on Inline XSS&lt;/h3&gt;

&lt;p&gt;Unescaped user input in &lt;code&gt;render :text&lt;/code&gt; or &lt;code&gt;render :inline&lt;/code&gt; should now generate warnings.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/598&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;CVE-2014-7829&lt;/h3&gt;

&lt;p&gt;Brakeman will warn about &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/23fiuwb1NBA/MQVM1-5GkPMJ&quot;&gt;CVE-2014-7829&lt;/a&gt; (file existence disclosure) for applications using affected versions of Rails and setting &lt;code&gt;config.serve_static_assets = true&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/600&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;ERB Parsing Fix&lt;/h3&gt;

&lt;p&gt;Parsing &lt;code&gt;&amp;lt;%==&lt;/code&gt; in ERB templates no longer causes errors.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/589&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Command Interpolation Format Fix&lt;/h3&gt;

&lt;p&gt;Brakeman was formatting&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;`#{x}`
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;as&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;`x`
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This has been fixed.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/596&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;CVE-2011-2932&lt;/h3&gt;

&lt;p&gt;The ancient CVE-2011-2932 was being mis-reported as CVE-2011-2931. Hopefully this affects no one.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/575&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Certificate Update&lt;/h3&gt;

&lt;p&gt;The certificate used to sign the Brakeman gem expired in December. A new certificate is available &lt;a href=&quot;https://raw.githubusercontent.com/presidentbeef/brakeman/master/brakeman-public_cert.pem&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This command can be used to add the new certificate:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem cert --add &amp;lt;(curl -Ls https://raw.github.com/presidentbeef/brakeman/master/brakeman-public_cert.pem)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;4180238f8de503e7ad0f2ca952ea38ccc1c6530b  brakeman-3.0.0.gem
b5cefd6f14edb57f12d1fe9fcc0fb24e05a05aaf  brakeman-min-3.0.0.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 2.6.3 Released</title>
    <link href="http://brakemanscanner.org/blog/2014/10/13/brakeman-2-dot-6-3-released/"/>
    <updated>2014-10-13T16:03:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2014/10/13/brakeman-2-dot-6-3-released</id>
    <content type="html">&lt;p&gt;This is mostly a bug fix release, but does include new support for optional checks along with an optional check for unscoped calls to &lt;code&gt;find&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 2.6.2&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add framework for optional checks&lt;/li&gt;
&lt;li&gt;Add optional check for unscoped find queries (&lt;a href=&quot;https://github.com/mastahyeti&quot;&gt;Ben Toews&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix stack overflow for cycles in class ancestors (&lt;a href=&quot;https://github.com/jeffrafter&quot;&gt;Jeff Rafter&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix stack overflow in &lt;code&gt;ProcessHelper#class_name&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/553&quot;&gt;#553&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Whitelist &lt;code&gt;exists&lt;/code&gt; arel method from SQL injection check&lt;/li&gt;
&lt;li&gt;Avoid warning about Symbol DoS on safe parameters as method targets&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Optional Checks&lt;/h3&gt;

&lt;p&gt;Brakeman now supports loading checks that are not run by default. These &quot;nondefault&quot; checks may have high false positive rates or introduce significant slowdowns. Optional checks should be treated as experimental and may experience more breaking changes than default checks.&lt;/p&gt;

&lt;p&gt;To run &lt;em&gt;all&lt;/em&gt; checks, use &lt;code&gt;-A&lt;/code&gt;. To list only the optional checks, try &lt;code&gt;--optional-checks&lt;/code&gt;. Optional checks are also listed in &lt;code&gt;--checks&lt;/code&gt;. As usual, checks may be specified using &lt;code&gt;-t&lt;/code&gt; or &lt;code&gt;--test&lt;/code&gt;. At this time there is no way to easily run the default checks plus some optional checks.&lt;/p&gt;

&lt;p&gt;On the code side, optional checks are the same except &lt;code&gt;Brakeman::Checks.add self&lt;/code&gt; becomes &lt;code&gt;Brakeman::Checks.add_optional self&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/555&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Unscoped Queries&lt;/h3&gt;

&lt;p&gt;The first optional check to be added to Brakeman comes from &lt;a href=&quot;https://github.com/mastahyeti&quot;&gt;Ben Toews&lt;/a&gt;. This check looks for calls to &lt;code&gt;find&lt;/code&gt; (or similar methods) directly on models that have a &lt;code&gt;belongs_to&lt;/code&gt; relationship.&lt;/p&gt;

&lt;p&gt;As this is an optional check, use &lt;code&gt;-A&lt;/code&gt; to include it in a scan or &lt;code&gt;-t UnscopedFind&lt;/code&gt; to run it by itself.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/469&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Fix Loops in Class Ancestors&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jeffrafter&quot;&gt;Jeff Rafter&lt;/a&gt; added a fix for stack overflows (infinite loops) when a class has (or appears to have) a cycle in its superclasses.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/543&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Fix Stack Overflow&lt;/h3&gt;

&lt;p&gt;This release fixes an issue with another infinite loop when looking up the class name in a self-referential variable name, which comes up in some situations. Fixing this bug also fixed some XSS false positives for safe model attribute methods (like &lt;code&gt;id&lt;/code&gt;) but unfortunately also revealed some dynamic render false positives.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/560&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Whitelist Arel Method&lt;/h3&gt;

&lt;p&gt;Brakeman does not warn on most uses of Arel, but was warning about SQL injection from the &lt;code&gt;exists&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/566&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Less Symbol DoS&lt;/h3&gt;

&lt;p&gt;Brakeman should no longer warn about Symbol DoS when symbolizing &lt;code&gt;params[:controller]&lt;/code&gt; and &lt;code&gt;params[:action]&lt;/code&gt; even when there are intermediate method calls, like &lt;code&gt;params[:action].to_s.to_sym&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/564&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ceb689e3a6efd7e28483828de3441ec1fad501c1  brakeman-2.6.3.gem
334a7820c05bfeb31e0e9d8123f45daef64eb102  brakeman-min-2.6.3.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman is Four Years Old!</title>
    <link href="http://brakemanscanner.org/blog/2014/08/27/brakeman-is-four-years-old/"/>
    <updated>2014-08-27T02:41:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2014/08/27/brakeman-is-four-years-old</id>
    <content type="html">&lt;p&gt;Brakeman was first &lt;a href=&quot;https://github.com/presidentbeef/brakeman/commit/cd1663fb22bbe2e1097bac8f9ee96fcdadc07fd2&quot;&gt;publicly released&lt;/a&gt; four years ago today!&lt;/p&gt;

&lt;p&gt;In those four years, Brakeman has gradually become a widely-used static analysis security tool for Ruby on Rails, leaving other web frameworks jealous.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p&gt;Is there something like Rails’ brakeman gem (automated security checks) for Django?&lt;/p&gt;&amp;mdash; Fabio Akita (@AkitaOnRails) &lt;a href=&quot;https://twitter.com/AkitaOnRails/statuses/409037162987155457&quot;&gt;December 6, 2013&lt;/a&gt;&lt;/blockquote&gt;


&lt;script async src=&quot;http://brakemanscanner.org//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;




&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://twitter.com/nodesecurity&quot;&gt;@nodesecurity&lt;/a&gt; do you know of an equivalent module in &lt;a href=&quot;https://twitter.com/hashtag/nodejs?src=hash&quot;&gt;#nodejs&lt;/a&gt; to the &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; gem?&lt;/p&gt;&amp;mdash; Erik Isaksen (@eisaksen) &lt;a href=&quot;https://twitter.com/eisaksen/statuses/423965742883950592&quot;&gt;January 16, 2014&lt;/a&gt;&lt;/blockquote&gt;


&lt;script async src=&quot;http://brakemanscanner.org//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;




&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p&gt;Is there something like &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; that would check security of an Ubuntu server? /cc &lt;a href=&quot;https://twitter.com/roidrage&quot;&gt;@roidrage&lt;/a&gt; &lt;a href=&quot;https://twitter.com/zuzur&quot;&gt;@zuzur&lt;/a&gt; &lt;a href=&quot;https://twitter.com/envygeeks&quot;&gt;@envygeeks&lt;/a&gt; &lt;a href=&quot;https://twitter.com/postmodern_mod3&quot;&gt;@postmodern_mod3&lt;/a&gt; &lt;a href=&quot;https://twitter.com/gcouprie&quot;&gt;@gcouprie&lt;/a&gt;&lt;/p&gt;&amp;mdash; Thibaut Barrère (@thibaut_barrere) &lt;a href=&quot;https://twitter.com/thibaut_barrere/statuses/302394306277285889&quot;&gt;February 15, 2013&lt;/a&gt;&lt;/blockquote&gt;


&lt;script async src=&quot;http://brakemanscanner.org//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


&lt;p&gt;Brakeman is used in all kinds of organizations, from hobby projects to open source applications to start-ups to large corporations. If your organization uses Brakeman, &lt;a href=&quot;http://brakemanscanner.org/brakeman_users/&quot;&gt;please consider being listed&lt;/a&gt;!&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p&gt;congrats to the @brakemanscanner project on their 1.0 release today, we appreciate your work within &lt;a href=&quot;https://twitter.com/twitter&quot;&gt;@twitter&lt;/a&gt; &lt;a href=&quot;http://t.co/SHjQM5k2&quot;&gt;http://t.co/SHjQM5k2&lt;/a&gt;&lt;/p&gt;&amp;mdash; Twitter Open Source (@TwitterOSS) &lt;a href=&quot;https://twitter.com/TwitterOSS/statuses/144865822941265920&quot;&gt;December 8, 2011&lt;/a&gt;&lt;/blockquote&gt;


&lt;script async src=&quot;http://brakemanscanner.org//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


&lt;p&gt;Brakeman also helps power &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/Brakeman-as-a-Service&quot;&gt;several SaaS offerings&lt;/a&gt;!&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p&gt;Rails Security Monitor is powered by &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; which we &amp;lt;3 and contribute to. We hope fans Brakeman fans will like it: &lt;a href=&quot;http://t.co/2yI8S20l&quot;&gt;http://t.co/2yI8S20l&lt;/a&gt;&lt;/p&gt;&amp;mdash; Bryan Helmkamp (@brynary) &lt;a href=&quot;https://twitter.com/brynary/statuses/301070119176642560&quot;&gt;February 11, 2013&lt;/a&gt;&lt;/blockquote&gt;


&lt;script async src=&quot;http://brakemanscanner.org//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


&lt;p&gt;Did you know Brakeman even won a Ruby award?&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p&gt;Thanks &lt;a href=&quot;https://twitter.com/yukihiro_matz&quot;&gt;@yukihiro_matz&lt;/a&gt; and other judges! This is an awesome trophy and I&amp;#39;m honored to receive it. &lt;a href=&quot;http://t.co/Dz1W8b1qof&quot;&gt;pic.twitter.com/Dz1W8b1qof&lt;/a&gt;&lt;/p&gt;&amp;mdash; Justin Collins (@presidentbeef) &lt;a href=&quot;https://twitter.com/presidentbeef/statuses/321756142449598464&quot;&gt;April 9, 2013&lt;/a&gt;&lt;/blockquote&gt;


&lt;script async src=&quot;http://brakemanscanner.org//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


&lt;p&gt;Because Brakeman is so old, it still supports Rails 2.3 (2009!) and Ruby 1.8.7 (2008!) while usually adding support for new releases fairly quickly, making it useful for nearly any Rails application. If it doesn't work for you - &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;please file an issue&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Many thanks to the many people who have contributed to Brakeman. All contributions - patches, bug reports, documentation updates, promoting Brakeman, or even just asking questions - are sincerely appreciated. Lots of gratitude to the open source projects underlying Brakeman and their maintainers, especially &lt;a href=&quot;https://twitter.com/the_zenspider&quot;&gt;Ryan Davis&lt;/a&gt;. And a big thank you to the companies who have funded Brakeman's development!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;4 years&lt;/li&gt;
&lt;li&gt;39 contributors&lt;/li&gt;
&lt;li&gt;69 releases&lt;/li&gt;
&lt;li&gt;181 closed issues&lt;/li&gt;
&lt;li&gt;2,043 commits&lt;/li&gt;
&lt;li&gt;700,000+ gem downloads&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Here’s to four more years?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By the way - stickers have returned! Send your name and address (yes, international is fine) to &lt;a href='mail&amp;#116;o&amp;#58;st%69&amp;#99;&amp;#107;%65&amp;#37;72s&amp;#64;bra&amp;#107;&amp;#101;&amp;#109;&amp;#97;&amp;#37;&amp;#54;&amp;#69;&amp;#46;or&amp;#103;'&gt;stic&amp;#107;ers&amp;#64;brakeman&amp;#46;org&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Brakeman 2.6.2 Released</title>
    <link href="http://brakemanscanner.org/blog/2014/08/18/brakeman-2-dot-6-2-released/"/>
    <updated>2014-08-18T09:15:00-07:00</updated>
    <id>http://brakemanscanner.org/blog/2014/08/18/brakeman-2-dot-6-2-released</id>
    <content type="html">&lt;p&gt;This release is mostly bug fixes and updates, but does include two new options.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 2.6.1:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add check for CVE-2014-3514&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;--add-checks-path&lt;/code&gt; option for external checks (Clint Gibler)&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;-4&lt;/code&gt; option to force Rails 4 mode&lt;/li&gt;
&lt;li&gt;Fix SQL injection detection in deep nested string building&lt;/li&gt;
&lt;li&gt;Check entire call for &lt;code&gt;send&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/523&quot;&gt;#523&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Check for .gitignore of secrets in subdirectories (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/519&quot;&gt;#519&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid warning about symbolizing safe parameters (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/536&quot;&gt;#536&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix block statment endings in Erubis (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/518&quot;&gt;#518&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Update ruby2ruby dependency to 2.1.1&lt;/li&gt;
&lt;li&gt;Expand app path in one place instead of all over (Jeff Rafter)&lt;/li&gt;
&lt;li&gt;Fix undefined variable in controller processing error (Jason Barnabe)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Mass Assignment Bypass (CVE-2014-3514)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/M4chq5Sb540/CC1Fh0Y_NWwJ&quot;&gt;CVE-2014-3514&lt;/a&gt; describes an issue where  &lt;code&gt;create_with&lt;/code&gt; does not implement strong parameters, allowing mass assignment in Rails 4.x. For vulnerable versions, Brakeman warns about instances of &lt;code&gt;create_with&lt;/code&gt; or a generic warning if no uses are found.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/540&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;External Check Option&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/clintgibler&quot;&gt;Clint Gibler&lt;/a&gt; has added the &lt;code&gt;--add-checks-path&lt;/code&gt; option to provide an path to search for additional checks. This is useful if you wish to write your own custom rules for Brakeman to run.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/532&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Option to Force Rails 4&lt;/h3&gt;

&lt;p&gt;If the Rails version for an application cannot be determined automatically for some reason, the &lt;code&gt;-4&lt;/code&gt; option will force Brakeman to treat it like a Rails 4 application.&lt;/p&gt;

&lt;p&gt;Included with this change are some fixes when a Rails 4 app is detected but the exact version number cannot be determined. This may change the output for some scans.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/527&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SQL Injection in Nested Strings&lt;/h3&gt;

&lt;p&gt;This release fixes some SQL injection detection when there is lots of string building mixing concatenation and interpolation. These changes may also affect which value Brakeman warns about within the string.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/528&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Better Send Call Detection&lt;/h3&gt;

&lt;p&gt;Previously, Brakeman was ignored calls to &lt;code&gt;send&lt;/code&gt; when they were nested inside a chain of calls. This has been fixed.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/524&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Ignored Secrets&lt;/h3&gt;

&lt;p&gt;Brakeman now checks subdirectories for &lt;code&gt;.gitignore&lt;/code&gt; files which determing if the secrets configuration is being ignored.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/521&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Symbolizing Safe Paramaters&lt;/h3&gt;

&lt;p&gt;Since &lt;code&gt;params[:controller]&lt;/code&gt; and &lt;code&gt;params[:action]&lt;/code&gt; are quite difficult (possibly impossible) to DoS, Brakeman will not warn about symbolizing them.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/538&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Erubis Fixes&lt;/h3&gt;

&lt;p&gt;Some ERB templates were not parsing correctly due to how Brakeman was handling the end of blocks. This should be resolved now.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/520&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Ruby2Ruby Dependency Updated&lt;/h3&gt;

&lt;p&gt;Brakeman now depends on the latest version of Ruby2Ruby due to the &lt;a href=&quot;https://github.com/seattlerb/ruby2ruby/commit/a1576d12cb1e5e379875548abfd441c6e3095f4a&quot;&gt;fix here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/537&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Expand App Path Once&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;Jeff Rafter&lt;/a&gt; refactored a bunch of code which was converting the application path to an absolute path and instead moved it to one (okay, maybe two) spots. This should not affect any reports.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/534&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;Error in Controller Processing&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/JasonBarnabe&quot;&gt;Jason Barnabe&lt;/a&gt; fixed an error...in the error handling when processing controllers.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/517&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;SHAs&lt;/h3&gt;

&lt;p&gt;The SHA1 sums for this release are&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;f225541559d2fbe5374d481b6105b66053f9710a  brakeman-2.6.2.gem
67882d467b6a8fc6e504b6dcb9605f79a0c6a22c  brakeman-min-2.6.2.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Also consider following &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and joining the &lt;a href=&quot;http://brakemanscanner.org/contact/&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
</feed>
